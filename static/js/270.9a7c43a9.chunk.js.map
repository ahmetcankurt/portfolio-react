{"version":3,"file":"static/js/270.9a7c43a9.chunk.js","mappings":"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","sources":["components/artificialIntelligence/Drawing.js","components/artificialIntelligence/Output.js","components/artificialIntelligence/index.js","components/projects.js"],"sourcesContent":["import React, { useRef, useEffect, memo } from 'react';\r\nimport './Drawing.css'; // CSS dosyasını içe aktarın\r\n\r\nfunction Drawing({ strokes, isDrawing, addStroke, addStrokePos, endStroke, canvasRef }) {\r\n  const ctxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineWidth = 10;\r\n    ctx.lineJoin = 'round';\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'white';\r\n    ctxRef.current = ctx;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  }, [canvasRef]);\r\n\r\n  useEffect(() => {\r\n    const ctx = ctxRef.current;\r\n    if (ctx) {\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      strokes.forEach((stroke) => {\r\n        ctx.beginPath();\r\n        ctx.moveTo(stroke[0].x, stroke[0].y);\r\n        stroke.forEach(point => {\r\n          ctx.lineTo(point.x, point.y);\r\n        });\r\n        ctx.stroke();\r\n      });\r\n    }\r\n  }, [strokes]);\r\n\r\n  const computeMousePos = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: (e.clientX - rect.left) * (canvas.width / rect.width),\r\n      y: (e.clientY - rect.top) * (canvas.height / rect.height)\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      className=\"canvas\" // CSS sınıfını burada kullanın\r\n      ref={canvasRef}\r\n      onPointerDown={(e) => addStroke(computeMousePos(e))}\r\n      onPointerMove={(e) => isDrawing && addStrokePos(computeMousePos(e))}\r\n      onPointerUp={endStroke}\r\n      onPointerLeave={endStroke}\r\n      width=\"280\"\r\n      height=\"280\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(Drawing);","import { memo } from \"react\";\r\n\r\nfunction Output({ prediction, probability }) {\r\n  return (\r\n    <h2 className=\"my-2\">\r\n      {prediction != null\r\n        ? `Tahmin: ${prediction} (${(probability * 100).toFixed(2)}%)`\r\n        : \"Bir sayı (0-9) çizin\"}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default memo(Output);\r\n","import { useRef, useEffect, useState, memo } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport Drawing from './Drawing';\r\nimport Output from './Output';\r\n\r\nconst classifierUrl = `${window.location.protocol}//${window.location.host}/classifiers/model.json`;\r\n\r\nconst loadModel = async () => {\r\n  try {\r\n    const model = await tf.loadLayersModel(classifierUrl);\r\n    return model;\r\n  } catch (error) {\r\n    console.error(\"Error loading model:\", error);\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [strokes, setStrokes] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [predictionProbability, setPredictionProbability] = useState(null); // Olasılıkları saklamak için\r\n  const [model, setModel] = useState(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadModel().then(setModel);\r\n  }, []);\r\n\r\n  const endStroke = async () => {\r\n    setIsDrawing(false);\r\n    const canvas = canvasRef.current;\r\n    const imgData = canvas.toDataURL('image/png');\r\n\r\n    const img = new Image();\r\n    img.src = imgData;\r\n\r\n    img.onload = async () => {\r\n      const tensor = tf.browser.fromPixels(img)\r\n        .toFloat()\r\n        .resizeNearestNeighbor([28, 28])\r\n        .mean(2)\r\n        .expandDims(0)\r\n        .expandDims(-1)\r\n        .div(255.0);\r\n\r\n      if (model) {\r\n        const predictions = await model.predict(tensor).data();\r\n        const topPrediction = predictions.indexOf(Math.max(...predictions));\r\n        const topPredictionProbability = Math.max(...predictions);\r\n\r\n        setPrediction(topPrediction);\r\n        setPredictionProbability(topPredictionProbability);\r\n      }\r\n    };\r\n  };\r\n\r\n  const addStroke = (point) => {\r\n    setStrokes([...strokes, [point]]);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const addStrokePos = (point) => {\r\n    if (isDrawing) {\r\n      setStrokes(strokes.map((stroke, idx) => (\r\n        idx === strokes.length - 1 ? [...stroke, point] : stroke\r\n      )));\r\n    }\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    setStrokes([]);\r\n    setPrediction(null);\r\n    setPredictionProbability(null);\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  return (\r\n    <div  style={{ textAlign: 'center'  ,justifyContent:'center' ,alignItems:'center' }}>\r\n      <div  style={{ textAlign: 'center' ,display:'flex' ,justifyContent:'center' ,alignItems:'center' }}>\r\n        <Drawing\r\n          strokes={strokes}\r\n          isDrawing={isDrawing}\r\n          addStroke={addStroke}\r\n          addStrokePos={addStrokePos}\r\n          endStroke={endStroke}\r\n          canvasRef={canvasRef}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Output prediction={prediction} probability={predictionProbability} />\r\n        <button type=\"button\" className='btn btn-success mt-0 px-5'   onClick={clearCanvas}>Clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(App);\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport YapayZeka from \"./artificialIntelligence/index\";\r\n\r\nimport TrawelinImage from \"../assets/image/Trawelin.jpeg\"\r\nimport RotaImage from \"../assets/image/rotaImage.jpeg\"\r\nimport ScreenshotImage from \"../assets/image/screenshot.png\"\r\nimport MNISTImage from \"../assets/image/MNIST.png\"\r\n\r\nconst projects = [\r\n  {\r\n    date: \"01 Jan\",\r\n    image: TrawelinImage,\r\n    alt: \"PiSoft Project\",\r\n    title: \"PiSoft\",\r\n    description: \"React js ile düzenlenebilir değiştirilebilir web tabanlı program yazılımı, Antalya Beyaz Dünya'da gerçekleştirildi.\",\r\n    aos: \"fade-up-right\",\r\n    hasComponent: false,\r\n  },\r\n  {\r\n    date: \"09 Sep\",\r\n    image:  RotaImage,\r\n    alt: \"Softalya Internship\",\r\n    title: \"Softalya\",\r\n    description: \"Uçuş ve operasyon görevlileri için havayolu personeli ve turistlerin kara taşımacılığına yönelik web tabanlı program yazılımı, Antalya Teknokent'te gerçekleştirildi.\",\r\n    aos: \"fade-up-left\",\r\n    hasComponent: false,\r\n  },\r\n  {\r\n    date: \"Demo\",\r\n    image:  ScreenshotImage,\r\n    alt: \"Softalya Internship\",\r\n    title: \"React JS ile Web Sitesi Tasarımı\",\r\n    description: \"React JS ile kolayca web sitenizi oluşturun! Yakında sizlerle...\",\r\n    aos: \"fade-up-right\",\r\n    hasComponent: false,\r\n  },\r\n  {\r\n    date: \"Hobi & Yapay Zeka\",\r\n    image:  MNISTImage,\r\n    alt: \"Softalya Stajı\",\r\n    title: \"React JS ile El Yazısı Tanıma\",\r\n    description: \"React JS kullanarak el yazısını tanıyan bir uygulama. Bir sayı (0-9) çizin ve modelin tahminini görün!\",\r\n    aos: \"fade-up-left\",\r\n    hasComponent: true,\r\n  }\r\n];\r\n\r\nfunction Projects() {\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = (project) => {\r\n    if (project.hasComponent) {\r\n      setSelectedProject(project);\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedProject(null);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"projects-tab-id\"\r\n      className=\"box box-content mb-5\"\r\n      data-aos=\"fade-up-right\"\r\n      data-aos-duration=\"2500\"\r\n    >\r\n      <div className=\"pb-2\">\r\n        <h1 className=\"title title--h1 first-title title__separate\">\r\n          Projeler\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"news-grid\">\r\n        {projects.map((project, index) => (\r\n          <article\r\n            key={index}\r\n            className=\"news-item box\"\r\n            data-aos={project.aos}\r\n            data-aos-duration=\"1500\"\r\n            onClick={() => openModal(project)}\r\n          >\r\n            <div className=\"news-item__image-wrap overlay overlay--45\">\r\n              <div className=\"news-item__date\">{project.date}</div>\r\n              <img\r\n                className=\"cover lazyload\"\r\n                src={project.image}\r\n                alt={project.alt}\r\n              />\r\n            </div>\r\n            <div className=\"news-item__caption\">\r\n              <h2 className=\"title title--h4\">{project.title}</h2>\r\n              <p>{project.description}</p>\r\n            </div>\r\n          </article>\r\n        ))}\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={closeModal} centered>\r\n        {selectedProject && (\r\n          <>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{selectedProject.title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>{selectedProject.description}</p>\r\n              {selectedProject.hasComponent && <YapayZeka />}\r\n            </Modal.Body>\r\n          </>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"names":["Drawing","_ref","strokes","isDrawing","addStroke","addStrokePos","endStroke","canvasRef","ctxRef","useRef","useEffect","canvas","current","ctx","getContext","lineWidth","lineJoin","lineCap","strokeStyle","clearRect","width","height","forEach","stroke","beginPath","moveTo","x","y","point","lineTo","computeMousePos","e","rect","getBoundingClientRect","clientX","left","clientY","top","_jsx","className","ref","onPointerDown","onPointerMove","onPointerUp","onPointerLeave","memo","Output","prediction","probability","children","toFixed","classifierUrl","window","location","protocol","host","App","setStrokes","useState","setIsDrawing","setPrediction","predictionProbability","setPredictionProbability","model","setModel","async","tf","error","console","loadModel","then","_jsxs","style","textAlign","justifyContent","alignItems","display","map","idx","length","imgData","toDataURL","img","Image","src","onload","tensor","toFloat","resizeNearestNeighbor","mean","expandDims","div","predictions","predict","data","topPrediction","indexOf","Math","max","topPredictionProbability","type","onClick","clearCanvas","projects","date","image","alt","title","description","aos","hasComponent","selectedProject","setSelectedProject","showModal","setShowModal","id","project","index","openModal","Modal","show","onHide","closeModal","centered","_Fragment","Header","closeButton","Title","Body","YapayZeka"],"sourceRoot":""}