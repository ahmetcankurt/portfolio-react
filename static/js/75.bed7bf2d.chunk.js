/*! For license information please see 75.bed7bf2d.chunk.js.LICENSE.txt */
(self.webpackChunkahmet_portfolio_react=self.webpackChunkahmet_portfolio_react||[]).push([[75],{956:(e,t,n)=>{"use strict";n.d(t,{TaL:()=>s,O0W:()=>Tb});var s={};n.r(s),n.d(s,{draw:()=>Fi,fromPixels:()=>Di,fromPixelsAsync:()=>Ei,toPixels:()=>Ai});var r={};n.r(r),n.d(r,{assertParamsValid:()=>Li,computeFlatOffset:()=>Xi,computeOutShape:()=>zi,getNormalizedAxes:()=>Ui,isSliceContinous:()=>qi,maskToAxes:()=>Mi,parseSliceParams:()=>Yi,sliceInfo:()=>Ji,startForAxis:()=>ji,startIndicesWithElidedDims:()=>Vi,stopForAxis:()=>Ki,stopIndicesWithElidedDims:()=>Gi,stridesForAxis:()=>Hi,stridesWithElidedDims:()=>Pi});var a={};n.r(a),n.d(a,{collectGatherOpShapeInfo:()=>mh,computeOutShape:()=>gh,segOpComputeOptimalWindowSize:()=>fh});var i={};n.r(i),n.d(i,{ERF_A1:()=>Fc,ERF_A2:()=>Dc,ERF_A3:()=>_c,ERF_A4:()=>Oc,ERF_A5:()=>Lc,ERF_P:()=>Ac,PARALLELIZE_THRESHOLD:()=>bc,RowPartitionType:()=>dc,SELU_SCALE:()=>Rc,SELU_SCALEALPHA:()=>Ec,applyActivation:()=>gu,assertAndGetBroadcastShape:()=>ci,assertAxesAreInnerMostDims:()=>ll,assertParamsConsistent:()=>cc,assignToTypedArray:()=>Uc,axesAreInnerMostDims:()=>rl,calculateShapes:()=>Tc,checkEinsumDimSizes:()=>Jc,checkPadOnDimRoundingMode:()=>bo,combineLocations:()=>al,combineRaggedTensorToTensorShapes:()=>pc,complexWithEvenIndex:()=>Pc,complexWithOddIndex:()=>Bc,computeConv2DInfo:()=>ao,computeConv3DInfo:()=>io,computeDefaultPad:()=>oo,computeDilation2DInfo:()=>no,computeOptimalWindowSize:()=>xc,computeOutAndReduceShapes:()=>il,computeOutShape:()=>hc,computePool2DInfo:()=>so,computePool3DInfo:()=>ro,convertConv2DDataFormat:()=>mo,decodeEinsumEquation:()=>Xc,eitherStridesOrDilationsAreOne:()=>fo,expandShapeToKeepDim:()=>ol,exponent:()=>Gc,exponents:()=>Vc,fromStringArrayToUint8:()=>xh,fromUint8ToStringArray:()=>bh,getAxesPermutation:()=>ul,getBroadcastDims:()=>li,getComplexWithIndex:()=>Wc,getEinsumComputePath:()=>Zc,getEinsumPermutation:()=>Yc,getFusedBiasGradient:()=>fu,getFusedDyActivation:()=>pu,getImageCenter:()=>yc,getInnerMostAxes:()=>hl,getPermuted:()=>wc,getRaggedRank:()=>gc,getReductionAxes:()=>ui,getReshaped:()=>vc,getReshapedPermuted:()=>kc,getRowPartitionTypesHelper:()=>fc,getSliceBeginCoords:()=>Ic,getSliceSize:()=>Cc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>sh,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>rh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>oh,getSparseReshapeInputOutputMismatchErrorMessage:()=>uh,getSparseReshapeInputOutputMultipleErrorMessage:()=>lh,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ah,getSparseReshapeNegativeOutputDimErrorMessage:()=>ih,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ph,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ch,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>hh,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>dh,getUndoAxesPermutation:()=>cl,isIdentityPermutation:()=>Qc,log:()=>ps,mergeRealAndImagArrays:()=>Mc,prepareAndValidate:()=>Sc,prepareSplitSize:()=>th,segment_util:()=>a,shouldFuse:()=>mu,slice_util:()=>r,splitRealAndImagArrays:()=>zc,stridesOrDilationsArePositive:()=>go,tupleValuesAreOne:()=>po,upcastType:()=>fr,validateDefaultValueShape:()=>mc,validateInput:()=>Nc,validateUpdateShape:()=>$c,warn:()=>ds});var o={};n.r(o),n.d(o,{mx:()=>lw,XI:()=>ek,Nk:()=>tk,f6:()=>sk,ct:()=>sw,YG:()=>ik,hH:()=>dk,z3:()=>Yk,sG:()=>oI,uM:()=>dI,vS:()=>EI,qB:()=>MI,GG:()=>PI,lg:()=>GI,rq:()=>WI,cu:()=>sC,WR:()=>eC,GE:()=>iC,px:()=>lC,jC:()=>IC,He:()=>$C,hE:()=>LC,BF:()=>Uk,Dk:()=>jC,cl:()=>eS,_B:()=>pS,ub:()=>xS,_f:()=>wS,Ku:()=>NS,qy:()=>ES,Zy:()=>WS,bu:()=>GS,zv:()=>qv,dH:()=>bw,HS:()=>Yw,yH:()=>c$,l3:()=>d$,z9:()=>f$,x6:()=>y$,_m:()=>$$,eW:()=>A$,GK:()=>_$,SP:()=>M$,yr:()=>P$,dl:()=>xI,Dw:()=>H$,xT:()=>X$,_X:()=>Cw,wz:()=>nN});class l{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class u{refCount(e){return c("refCount")}incRef(e){return c("incRef")}timerAvailable(){return!0}time(e){return c("time")}read(e){return c("read")}readSync(e){return c("readSync")}readToGPU(e,t){return c("readToGPU")}numDataIds(){return c("numDataIds")}disposeData(e,t){return c("disposeData")}write(e,t,n){return c("write")}move(e,t,n,s,r){return c("move")}createTensorFromGPUData(e,t,n){return c("createTensorFromGPUData")}memory(){return c("memory")}floatPrecision(){return c("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return c("dispose")}}function c(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function h(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,f(e,t,n)}function d(e,t,n){return Math.max(e,Math.min(t,n))}function p(e){return e%2===0?e:e+1}function f(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function g(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";g(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function b(e){g(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function x(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1===0}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?a():null!=s?s(o,l):setTimeout(o,l)};o()}))}function C(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function S(e,t){const n=t.length;return g((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),g(e.every((e=>v(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function $(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:S(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function N(e,t){return T(e,t)}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function A(e){return"string"===typeof e||e instanceof String}function F(e){return"number"===typeof e}function D(e){return Array.isArray(e)?D(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":F(e)?"float32":A(e)?"string":"boolean"===typeof e?"bool":"float32"}function _(e){return!!(e&&e.constructor&&e.call&&e.apply)}function O(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function M(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=M(e+t*o,i,n,s)}return r}function z(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return M(0,e,t,n)}function P(e,t){const n=B(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function B(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function W(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function U(e){e.forEach((t=>{g(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function V(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function G(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function H(e){return e&&e.then&&"function"===typeof e.then}const j="tfjsflags";class K{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=q,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(H(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(j in e){e[j].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function q(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,s=new Array(n>1?n-1:0),r=1;r<n;r++)s[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,s[0],s[1]),s.join("=")})),t}function X(){return J}let Y,J=null;function Z(){if(null==Y){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Y=e}return Y}function Q(e,t){const n=function(){const e=Z();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const ee="Abs",te="Acos",ne="Acosh",se="Add",re="AddN",ae="All",ie="Any",oe="ArgMax",le="ArgMin",ue="Asin",ce="Asinh",he="Atan",de="Atanh",pe="Atan2",fe="AvgPool",ge="AvgPoolGrad",me="AvgPool3D",be="AvgPool3DGrad",xe="BatchMatMul",ye="BatchToSpaceND",ve="Bincount",we="BitwiseAnd",ke="BroadcastArgs",Ie="Cast",Ce="Ceil",Se="ClipByValue",$e="Complex",Ne="ComplexAbs",Te="Concat",Ee="Conv2D",Re="Conv2DBackpropFilter",Ae="Conv2DBackpropInput",Fe="Conv3D",De="Conv3DBackpropFilterV2",_e="Conv3DBackpropInputV2",Oe="Cos",Le="Cosh",Me="Cumprod",ze="Cumsum",Pe="CropAndResize",Be="DenseBincount",We="DepthToSpace",Ue="DepthwiseConv2dNative",Ve="DepthwiseConv2dNativeBackpropFilter",Ge="DepthwiseConv2dNativeBackpropInput",He="Diag",je="Dilation2D",Ke="Dilation2DBackpropInput",qe="Dilation2DBackpropFilter",Xe="Draw",Ye="RealDiv",Je="Einsum",Ze="Elu",Qe="EluGrad",et="Erf",tt="Equal",nt="Exp",st="ExpandDims",rt="Expm1",at="FFT",it="Fill",ot="FlipLeftRight",lt="Floor",ut="FloorDiv",ct="FusedBatchNorm",ht="GatherV2",dt="GatherNd",pt="Greater",ft="GreaterEqual",gt="Identity",mt="IFFT",bt="Imag",xt="IsFinite",yt="IsInf",vt="IsNan",wt="LeakyRelu",kt="Less",It="LessEqual",Ct="LinSpace",St="Log",$t="Log1p",Nt="LogicalAnd",Tt="LogicalNot",Et="LogicalOr",Rt="LRN",At="LRNGrad",Ft="Max",Dt="Maximum",_t="MaxPool",Ot="MaxPoolGrad",Lt="MaxPool3D",Mt="MaxPool3DGrad",zt="MaxPoolWithArgmax",Pt="Mean",Bt="Min",Wt="Minimum",Ut="MirrorPad",Vt="Mod",Gt="Multinomial",Ht="Multiply",jt="Neg",Kt="NotEqual",qt="NonMaxSuppressionV3",Xt="NonMaxSuppressionV4",Yt="NonMaxSuppressionV5",Jt="OnesLike",Zt="OneHot",Qt="Pack",en="PadV2",tn="Pow",nn="Prelu",sn="Prod",rn="RaggedGather",an="RaggedRange",on="RaggedTensorToTensor",ln="Range",un="Real",cn="Reciprocal",hn="Relu",dn="Reshape",pn="ResizeNearestNeighbor",fn="ResizeNearestNeighborGrad",gn="ResizeBilinear",mn="ResizeBilinearGrad",bn="Relu6",xn="Reverse",yn="Round",vn="Rsqrt",wn="ScatterNd",kn="TensorScatterUpdate",In="SearchSorted",Cn="Select",Sn="Selu",$n="Slice",Nn="Sin",Tn="Sinh",En="Sign",Rn="Sigmoid",An="Softplus",Fn="Sqrt",Dn="Sum",_n="SpaceToBatchND",On="SplitV",Ln="Softmax",Mn="SparseFillEmptyRows",zn="SparseReshape",Pn="SparseSegmentMean",Bn="SparseSegmentSum",Wn="SparseToDense",Un="SquaredDifference",Vn="Square",Gn="StaticRegexReplace",Hn="StridedSlice",jn="StringNGrams",Kn="StringSplit",qn="StringToHashBucketFast",Xn="Sub",Yn="Tan",Jn="Tanh",Zn="Tile",Qn="TopK",es="Transform",ts="Transpose",ns="Unique",ss="Unpack",rs="UnsortedSegmentSum",as="ZerosLike",is="Step",os="FromPixels",ls="RotateWithOffset",us="_FusedMatMul",cs="FusedConv2D",hs="FusedDepthwiseConv2D";function ds(){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...arguments)}function ps(){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...arguments)}const fs=Q("kernelRegistry",(()=>new Map)),gs=Q("gradRegistry",(()=>new Map));function ms(e,t){const n=ws(e,t);return fs.get(n)}function bs(e){return gs.get(e)}function xs(e){const t=fs.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function ys(e){const{kernelName:t,backendName:n}=e,s=ws(t,n);fs.has(s)&&ds(`The kernel '${t}' for backend '${n}' is already registered`),fs.set(s,e)}function vs(e){const{kernelName:t}=e;gs.has(t)&&X().getBool("DEBUG")&&ds(`Overriding the gradient for '${t}'`),gs.set(t,e)}function ws(e,t){return`${t}_${e}`}function ks(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Is=n(353);const Cs=n.n(Is)()||Is;function Ss(e){return Cs.fromString(e,!0,16)}const $s=Ss("c3a5c85c97cb3127"),Ns=Ss("b492b66fbe98f273"),Ts=Ss("9ae16a3b2f90404f");function Es(e){return e.xor(e.shru(47))}function Rs(e,t,n){const s=e.slice(t,t+n);return Cs.fromBytes(Array.from(s),!0,!0)}function As(e,t){return Rs(e,t,8)}function Fs(e,t){return Rs(e,t,4)}function Ds(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function _s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ss("9ddfea08eb382d69"),s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Os(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Ds(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Ds(r,44)),[r.add(s),a.add(i)]}(As(e,t),As(e,t+8),As(e,t+16),As(e,t+24),n,s)}function Ls(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Cs.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Ts.add(2*t),s=As(e,0).add(Ts),r=As(e,t-8);return _s(Ds(r,37).mul(n).add(s),Ds(s,25).add(r).mul(n),n)}if(t>=4){const n=Ts.add(2*t);return _s(Fs(e,0).shl(3).add(t),Fs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Es(Ts.mul(n).xor($s.mul(s))).mul(Ts)}return Ts}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ts.add(2*t),s=As(e,0).mul(Ns),r=As(e,8),a=As(e,t-8).mul(n),i=As(e,t-16).mul(Ts);return _s(Ds(s.add(r),43).add(Ds(a,30)).add(i),s.add(Ds(r.add(Ts),18)).add(a),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ts.add(2*t),s=As(e,0).mul(Ts),r=As(e,8),a=As(e,t-8).mul(n),i=As(e,t-16).mul(Ts),o=Ds(s.add(r),43).add(Ds(a,30)).add(i),l=_s(o,s.add(Ds(r.add(Ts),18)).add(a),n),u=As(e,16).mul(n),c=As(e,24),h=o.add(As(e,t-32)).mul(n),d=l.add(As(e,t-24)).mul(n);return _s(Ds(u.add(c),43).add(Ds(h,30)).add(d),u.add(Ds(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(Ns).add(113),a=Es(r.mul(Ts).add(113)).mul(Ts),i=[Cs.UZERO,Cs.UZERO],o=[Cs.UZERO,Cs.UZERO];s=s.mul(Ts).add(As(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Ds(s.add(r).add(i[0]).add(As(e,l+8)),37).mul(Ns),r=Ds(r.add(i[1]).add(As(e,l+48)),42).mul(Ns),s=s.xor(o[1]),r=r.add(i[0]).add(As(e,l+40)),a=Ds(a.add(o[0]),33).mul(Ns),i=Os(e,l,i[1].mul(Ns),s.add(o[0])),o=Os(e,l+32,a.add(o[1]),r.add(As(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=Ns.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Ds(s.add(r).add(i[0]).add(As(e,l+8)),37).mul(h),r=Ds(r.add(i[1]).add(As(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(As(e,l+40))),a=Ds(a.add(o[0]),33).mul(h),i=Os(e,l,i[1].mul(h),s.add(o[0])),o=Os(e,l+32,a.add(o[1]),r.add(As(e,l+16))),[a,s]=[s,a],_s(_s(i[0],o[0],h).add(Es(r).mul($s)).add(a),_s(i[1],o[1],h).add(s),h)}function Ms(e,t){return"string"===t?Bs(e):zs([e],t)}function zs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Vs(e)),X().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ps(){return X().platform.now()}function Bs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",X().platform.encode(e,t)}function Ws(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",X().platform.decode(e,t)}function Us(e){return null!=X().platform.isTypedArray?X().platform.isTypedArray(e):ks(e)}function Vs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||H(e)||null==e||Us(e)&&n)t.push(e);else if(Array.isArray(e)||Us(e))for(let s=0;s<e.length;++s)Vs(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)Vs(e[r],t,n)}return t}class Gs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new js)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Ps();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Ps()-i})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<s.length;o++){const t=s[o];t.data().then((n=>{Hs(n,t.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Hs(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class js{logKernelProfile(e,t,n,s,r,a){const i="number"===typeof s?k(`${s}ms`,9):s.error,o=k(e,25),l=t.rank,u=t.size,c=k(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,s=n.length;h+=`${d}: ${s}D ${s>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Ks=20,qs=3,Xs=7;function Ys(e,t,n,s){const r=L(t),a=function(e,t,n,s){const r=x(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?er(e):e;if(o>1)for(let u=0;u<r/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Js(l[e+t],0,n).length)}return i}(e,t,n,r),i=t.length,o=Qs(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Js(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(Xs))} + ${parseFloat(e[1].toFixed(Xs))}j`:A(e)?`'${e}'`:"bool"===n?Zs(e):parseFloat(e.toFixed(Xs)).toString(),k(s,t)}function Zs(e){return 0===e?"false":"true"}function Qs(e,t,n,s,r){let a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Js(er(e)[0],0,n)]}return"bool"===n?[Zs(e[0])]:[e[0].toString()]}if(1===l){if(o>Ks){const t=qs*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-qs)*i,o*i));return"complex64"===n&&(s=er(s),a=er(a)),["["+s.map(((e,t)=>Js(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Js(e,r[o-qs+t],n))).join(", ")+"]"]}return["["+("complex64"===n?er(e):Array.from(e)).map(((e,t)=>Js(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>Ks){for(let t=0;t<qs;t++){const s=t*h,a=s+h;d.push(...Qs(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-qs;t<o;t++){const s=t*h,a=s+h;d.push(...Qs(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let g=0;g<o;g++){const t=g*h,s=t+h;d.push(...Qs(e.slice(t,s),u,n,c,r,g===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function er(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class tr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=x(e),null!=n){const e=n.length;g(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||T(t,this.size),this.strides=L(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];0===n.length&&(n=[0]),g(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let s=0;for(const a of t){if(a<0||a>=this.shape[s]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}s++}let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=this.strides[a]*t[a];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return nr().makeTensor(this.values,this.shape,this.dtype)}}let nr=null,sr=null,rr=null;class ar{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=x(e),this.strides=L(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return sr.buffer(this.shape,this.dtype,e)}bufferSync(){return sr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e,"complex64"===this.dtype)}arraySync(){return z(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=nr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>Ws(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),nr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=nr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ws(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await nr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),nr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return sr.print(this,e)}clone(){return this.throwIfDisposed(),sr.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ys(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),sr.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),nr().makeVariable(this,e,t,n)}}function ir(){return Q("Tensor",(()=>ar))}Object.defineProperty(ar,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ir();class or extends ar{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);nr().disposeTensor(this),this.dataId=e.dataId,nr().incRef(this,null)}dispose(){nr().disposeVariable(this),this.isDisposedInternal=!0}}var lr,ur,cr,hr,dr;Object.defineProperty(or,Symbol.hasInstance,{value:e=>e instanceof ar&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(lr||(lr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ur||(ur={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(cr||(cr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(hr||(hr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(dr||(dr={}));const pr={float32:hr,int32:ur,bool:cr,complex64:dr};function fr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return pr[e][t]}function gr(e){return fr(e,"int32")}function mr(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function br(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function xr(e,t){if(e.dtype===t.dtype)return[e,t];const n=fr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function yr(e,t){return t.some((t=>t.id===e.id))}function vr(e){const t=[];return wr(e,t,new Set),t}function wr(e,t,n){if(null==e)return;if(e instanceof ar)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const r=e;for(const a in r){const e=r[a];n.has(e)||(n.add(e),wr(e,t,n))}}function kr(e){return null!=e.kernelName}class Ir{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Cr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ir}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(ds(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Gs(this.backendInstance),!0}setupRegisteredKernels(){xs(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){xs(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof u||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ds(`Initialization of backend ${e} failed`),ds(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return ds(`Initialization of backend ${e} failed`),ds(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return Cr.nextTensorId++}nextVariableId(){return Cr.nextVariableId++}clone(e){const t=$r.runKernel(gt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return $r.runKernel(Ie,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=ms(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=kr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(kr(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=ms(t,this.backendName);g(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=kr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=bs(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(g(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&A(e[0])&&(r=e.map((e=>Bs(e))));const a=s.write(r,t,n),i=new ar(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new ar(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new or(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*R(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof or||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*R(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=bs(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=B(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=vr(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(g(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));g(r instanceof ar,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(s[i.id]){n.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(r[t.id]&&i[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];s[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=P(x(e),"float32");return $r.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!y(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Nr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){var t=this;return g(_(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];let a;g(s.every((e=>e instanceof ar)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};s.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(a=e(...s,n),g(a.value instanceof ar,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),g(_(a.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),a.value),backwardsFunc:(e,t)=>{const n=a.gradFunc(e,t),r=Array.isArray(n)?n:[n];g(r.length===s.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),g(r.every((e=>e instanceof ar)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return r.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ps(),n=await this.backend.time(e);return n.wallMs=Ps()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ir;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Sr(){const e=Z();if(null==e._tfengine){const t=new K(e);e._tfengine=new Cr(t)}var t;return t=e._tfengine.ENV,J=t,nr=()=>e._tfengine,e._tfengine}Cr.nextTensorId=0,Cr.nextVariableId=0;const $r=Sr();function Nr(e,t){const n={a:e,b:t};return $r.runKernel(se,n)}let Tr;function Er(e){if(void 0!==Tr)return Tr;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Rr(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Ar=X();function Fr(e,t){let n=e;if(Us(e))return"string"===t?[]:[e.length];if(mr(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(br(e))return[e.buffer.size/(null==t?4:R(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||Us(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Dr(e,s,[]),s}function Dr(e,t,n){if(n=n||[],!Array.isArray(e)&&!Us(e))return void g(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));g(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),g(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let r=0;r<e.length;++r)Dr(e[r],s,n.concat(r))}function _r(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Or(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof ir())return _r(s,e.dtype,t,n),e;let r=D(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),_r(s,r,t,n),null==e||!Us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Fr(e,r);Us(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?zs(e,r):Vs(e,[],!0);return $r.makeTensor(i,a,r)}function Lr(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Or(e,`${t}[${r}]`,n,s)))}Ar.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ar.registerFlag("IS_BROWSER",(()=>Rr())),Ar.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Ar.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ar.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ar.registerFlag("PROD",(()=>!1)),Ar.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ar.getBool("DEBUG"))),Ar.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ar.registerFlag("IS_TEST",(()=>!1)),Ar.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ar.getBool("DEBUG"))),Ar.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ar.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ar.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function Mr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=function(){$r.startScope(n);try{const e=s(...arguments);return H(e)&&console.error("Cannot return a Promise inside of tidy."),$r.endScope(e),e}catch(e){throw $r.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const zr=Mr({complex_:function(e,t){const n=Or(e,"real","complex"),s=Or(t,"imag","complex");m(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return $r.runKernel($e,r)}});function Pr(e,t,n,s){if(null==s)s=D(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(br(e)||mr(e)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return $r.backend.createTensorFromGPUData(e,t||n,s)}if(!Us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){U(t);const e=x(t),s=x(n);g(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let r=0;r<n.length;++r){const e=n[r],s=r!==n.length-1||e!==x(t.slice(r));g(n[r]===t[r]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Us(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?zs(e,s):Vs(e,[],!0),$r.makeTensor(e,t,s)}function Br(e,t,n){return Pr(e,t,Fr(e,n),n)}const Wr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ur{static join(e){return new Ur(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Us(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+s.byteLength;this.shards.push({buffer:s,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=new ArrayBuffer(t-e),r=new Uint8Array(s);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],s=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,s,l-s);if(r.set(u,o),a+=u.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,s=e.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,a=t(e[r]);if(0===a)return r;a<0?s=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Vr(){return $r}function Gr(){return $r.memory()}function Hr(e,t){return $r.tidy(e,t)}function jr(e){vr(e).forEach((e=>e.dispose()))}function Kr(e){return $r.keep(e)}function qr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return $r.registerBackend(e,t,n)}function Xr(){return $r.backend}rr=function(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Yr=4;async function Jr(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Yr*t.length,s=new Uint8Array(n);let r=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,r),r+=Yr,s.set(e,r),r+=e.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:ta(await Promise.all(s)),specs:n}}function Zr(e,t){const n=new Ur(e),s={};let r=0;for(const a of t){const e=Qr(a,((e,t)=>n.slice(r+e,r+t)));s[a.name]=ea(a,n.slice(r,r+e)),r+=e}return s}function Qr(e,t){const n=x(e.shape);let s;if("quantization"in e){const t=e.quantization;s=Wr[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=Yr+new Uint32Array(t(e,e+Yr))[0];return e}s=Wr[e.dtype]}return n*s}function ea(e,t){const n=e.name,s=e.dtype,r=e.shape,a=x(r);let i,o=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${s}.`)}const l=Wr[r.dtype],u="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===s)if("uint8"===r.dtype||"uint16"===r.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){const r=s[i],o=e[n[r>>10]+(1023&r)]+t[r>>10];a[i]=o}return new Float32Array(r)}}();i=e(u)}}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${n}': ${s}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*r.scale+r.min)}}o+=a*l}else if("string"===s){const n=x(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Yr))[0];o+=Yr;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Wr[s];if("float32"===s)i=new Float32Array(t);else if("int32"===s)i=new Int32Array(t);else{if("bool"!==s){if("complex64"===s){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const s=Br(e,r,"float32"),a=Br(n,r,"float32"),o=zr(s,a);return s.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${s}`)}i=new Uint8Array(t)}o+=a*e}return Br(i,r,s)}function ta(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const na="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function sa(e){return na?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function ra(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function aa(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),function(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}(e,n,s)}function ia(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:sa(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:sa(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ur(e.weightData).byteLength}}function oa(e){const t=[];for(const n of e)t.push(...n.weights);return t}class la{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==la.instance&&(la.instance=new la),la.instance}static registerSaveRouter(e){la.getInstance().saveRouters.push(e)}static registerLoadRouter(e){la.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return la.getHandlers(e,"save")}static getLoadHandlers(e,t){return la.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?la.getInstance().loadRouters:la.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const ua=(e,t)=>la.getLoadHandlers(e,t),ca="tensorflowjs",ha="models_store",da="model_info_store";function pa(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fa(e){const t=e.result;t.createObjectStore(ha,{keyPath:"modelPath"}),t.createObjectStore(da,{keyPath:"modelPath"})}class ga{constructor(e){if(this.indexedDB=pa(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(ca,1);s.onupgradeneeded=()=>fa(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(ha,"readonly"),s=t.objectStore(ha).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{t.weightData=Ur.join(t.weightData);const s=ia(t),i=r.transaction(da,"readwrite");let o,l,u=i.objectStore(da);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(a){return n(a)}o.onsuccess=()=>{l=r.transaction(ha,"readwrite");const o=l.objectStore(ha);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:s}),c.onerror=e=>{u=i.objectStore(da);const t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(c.error)),t.onerror=e=>(r.close(),n(c.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}ga.URL_SCHEME="indexeddb://";const ma=e=>{return X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ga.URL_SCHEME)?(t=e.slice(ga.URL_SCHEME.length),new ga(t)):null;var t};la.registerSaveRouter(ma),la.registerLoadRouter(ma);class ba{constructor(){this.indexedDB=pa()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ca,1);n.onupgradeneeded=()=>fa(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(da,"readonly"),a=r.objectStore(da).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ga.URL_SCHEME)?t.slice(ga.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(ca,1);s.onupgradeneeded=()=>fa(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(da,"readwrite"),i=a.objectStore(da),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(ha,"readwrite");const s=l.objectStore(ha).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const xa="/",ya="tensorflowjs_models",va="info",wa="model_topology",ka="weight_specs",Ia="weight_data",Ca="model_metadata";function Sa(e){return{info:[ya,e,va].join(xa),topology:[ya,e,wa].join(xa),weightSpecs:[ya,e,ka].join(xa),weightData:[ya,e,Ia].join(xa),modelMetadata:[ya,e,Ca].join(xa)}}function $a(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Na(e){const t=e.split(xa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(xa)}class Ta{constructor(e){if(!X().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Sa(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=ia(e),a=Ur.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,function(e){if(na)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw $a(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(na){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}(a),t}}Ta.URL_SCHEME="localstorage://";const Ea=e=>{return X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ta.URL_SCHEME)?(t=e.slice(Ta.URL_SCHEME.length),new Ta(t)):null;var t};la.registerSaveRouter(Ea),la.registerLoadRouter(Ea);class Ra{constructor(){g(X().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),g("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ya+xa,n=xa+va;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){e[Na(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=Sa(e=(t=e).startsWith(Ta.URL_SCHEME)?t.slice(Ta.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return $a(n),s}}const Aa="://";class Fa{constructor(){this.managers={}}static getInstance(){return null==Fa.instance&&(Fa.instance=new Fa),Fa.instance}static registerManager(e,t){g(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Aa)&&(e=e.slice(0,e.indexOf(Aa))),g(e.length>0,(()=>"scheme must not be an empty string."));const n=Fa.getInstance();g(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Fa.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Fa.getInstance().managers)}}class Da{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&X().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return ks(e)}}if(X().get("IS_BROWSER")){X().setPlatform("browser",new Da);try{Fa.registerManager(Ta.URL_SCHEME,new Ra)}catch(KL){}try{Fa.registerManager(ga.URL_SCHEME,new ba)}catch(KL){}}const _a=()=>n(817);let Oa;class La{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=X().global.fetch?X().global.fetch(e,t):(null==Oa&&(Oa=_a()),Oa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Ma(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",U(e),new tr(e,t,n)}X().get("IS_NODE")&&!X().get("IS_BROWSER")&&X().setPlatform("node",new La);const za=Mr({cast_:function(e,t){const n=Or(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return $r.runKernel(Ie,s,r)}});const Pa=Mr({clone_:function(e){const t={x:Or(e,"x","clone","string_or_numeric")};return $r.runKernel(gt,t)}});Sr();sr={buffer:Ma,cast:za,clone:Pa,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};const Ba=Mr({add_:function(e,t){let n=Or(e,"a","add"),s=Or(t,"b","add");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(se,r)}});const Wa=Mr({floorDiv_:function(e,t){let n=Or(e,"a","floorDiv"),s=Or(t,"b","floorDiv");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(ut,r)}});const Ua=Mr({div_:function(e,t){let n=Or(e,"a","div"),s=Or(t,"b","div");if([n,s]=xr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Wa(n,s);const r={a:n,b:s};return $r.runKernel(Ye,r,{})}});const Va=Mr({mul_:function(e,t){let n=Or(e,"a","mul"),s=Or(t,"b","mul");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(Ht,r)}});const Ga=Mr({sqrt_:function(e){const t={x:Or(e,"x","sqrt","float32")};return $r.runKernel(Fn,t)}});const Ha=Mr({square_:function(e){const t=Or(e,"x","square");return $r.runKernel("Square",{x:t},{})}});const ja=Mr({zerosLike_:function(e){const t={x:Or(e,"x","zerosLike")};return $r.runKernel(as,t)}});function Ka(e){return $r.customGrad(e)}function qa(e,t){if((Us(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Us(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Pr(e,[],[],t)}const Xa=new Map,Ya=new Map;class Ja{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Za{constructor(){this.classNameMap={}}static getMap(){return null==Za.instance&&(Za.instance=new Za),Za.instance}static register(e){Za.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Qa(e,t,n){g(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),g("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),g(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const s=t+">"+n;return Za.register(e),Xa.set(s,e),Ya.set(e,s),e}class ei extends Ja{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return jr(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){g(_(e),(()=>"The f passed in variableGrads(f) must be a function")),g(null==t||Array.isArray(t)&&t.every((e=>e instanceof or)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in $r.registeredVariables)t.push($r.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),g(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=$r.gradients(e,t,null,!0);g(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),g(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&jr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:qa(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ei,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class ti extends ei{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Hr((()=>ja(s).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Hr((()=>ja(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Hr((()=>{const e=Ba(Va(i,this.rho),Va(Ha(a),1-this.rho)),t=Va(Ua(Ga(Ba(o,this.epsilon)),Ga(Ba(i,this.epsilon))),a),n=Ba(Va(o,this.rho),Va(Ha(t),1-this.rho));i.assign(e),o.assign(n);const r=Ba(Va(t,-this.learningRate),s);s.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(jr(this.accumulatedGrads.map((e=>e.variable))),jr(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function ni(e,t,n){U(e);const s={shape:e,value:t,dtype:n=n||D(t)};return $r.runKernel(it,{},s)}class si extends ei{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Hr((()=>ni(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;Hr((()=>{const e=Ba(a,Ha(r));a.assign(e);const t=Ba(Va(Ua(r,Ga(Ba(e,$r.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&jr(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const ri=Mr({pow_:function(e,t){let n=Or(e,"base","pow"),s=Or(t,"exp","pow");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(tn,r)}});const ai=Mr({sub_:function(e,t){let n=Or(e,"a","sub"),s=Or(t,"b","sub");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(Xn,r)}});class ii extends ei{static get className(){return"Adam"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Hr((()=>{this.accBeta1=qa(t).variable(),this.accBeta2=qa(n).variable()})),null==s&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Hr((()=>{const n=ai(1,this.accBeta1),s=ai(1,this.accBeta2);t.forEach(((t,r)=>{const a=$r.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Hr((()=>ja(a).variable(i)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Hr((()=>ja(a).variable(i)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=Ba(Va(l,this.beta1),Va(o,1-this.beta1)),h=Ba(Va(u,this.beta2),Va(Ha(o),1-this.beta2)),d=Ua(c,n),p=Ua(h,s);l.assign(c),u.assign(h);const f=Ba(Va(Ua(d,Ba(Ga(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Va(this.accBeta1,this.beta1)),this.accBeta2.assign(Va(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&jr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&jr(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Hr((()=>{this.accBeta1.assign(ri(this.beta1,this.iterations_+1)),this.accBeta2.assign(ri(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const oi=Mr({abs_:function(e){const t=Or(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return $r.runKernel(Ne,e)}{const e={x:t};return $r.runKernel(ee,e)}}});function li(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function ui(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function ci(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let r=0;r<n;r++){let a=e[e.length-r-1];null==a&&(a=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===a)s[n-r-1]=i;else if(1===i)s[n-r-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}s[n-r-1]=a}}return s}const hi=Mr({maximum_:function(e,t){let n=Or(e,"a","maximum"),s=Or(t,"b","maximum");[n,s]=xr(n,s),"bool"===n.dtype&&(n=za(n,"int32"),s=za(s,"int32")),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Dt,r)}});class di extends ei{static get className(){return"Adamax"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Hr((()=>{this.iteration=qa(0).variable(),this.accBeta1=qa(t).variable()})),null==s&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Hr((()=>{const n=ai(1,this.accBeta1),s=Ua(-this.learningRate,Ba(Va(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=$r.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ja(a).variable(i)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:ja(a).variable(i)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=Ba(Va(l,this.beta1),Va(o,1-this.beta1)),h=Va(u,this.beta2),d=oi(o),p=hi(h,d);l.assign(c),u.assign(p);const f=Ba(Va(Ua(s,n),Ua(c,Ba(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(Ba(this.iteration,1)),this.accBeta1.assign(Va(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&jr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&jr(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class pi extends ei{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=$r.registeredVariables[t];Hr((()=>{const e=Ba(Va(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Kr(qa(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class fi extends pi{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=qa(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Hr((()=>ja(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Hr((()=>{let e;const t=Ba(Va(this.m,r),a);e=this.useNesterov?Ba(Va(this.c,Ba(a,Va(t,this.m))),s):Ba(Va(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&jr(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class gi extends ei{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=$r.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Hr((()=>ja(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Hr((()=>ja(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Hr((()=>ja(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Hr((()=>{const e=Ba(Va(i,this.decay),Va(Ha(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ba(Va(t,this.decay),Va(a,1-this.decay)),l=Ua(Va(a,this.learningRate),Ga(ai(e,Ba(Ha(r),this.epsilon)))),u=Ba(Va(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=ai(s,u);s.assign(c)}else{const e=Ba(Va(i,this.decay),Va(Ha(a),1-this.decay)),t=Ba(Va(o,this.momentum),Ua(Va(a,this.learningRate),Ga(Ba(e,this.epsilon))));i.assign(e),o.assign(t);const n=ai(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&jr(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&jr(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&jr(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const mi=[ti,si,ii,di,fi,gi,pi];function bi(e){return new Promise((e=>setTimeout(e))).then(e)}class xi{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xi.URL_SCHEME)&&(e=e.slice(xi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ur.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=ra(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await bi((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await bi((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ia(e)}}}}xi.URL_SCHEME="downloads://";function yi(e,t,n,s){!function(e){g(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){g(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),g(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),g(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function vi(e,t){null==t&&(t={});const n=null==t.fetchFunc?X().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await yi(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await yi(r,t.onProgress,.5,1)}la.registerSaveRouter((e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xi.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new xi(e)}(e.slice(xi.URL_SCHEME.length)):null));class wi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(g("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,g(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&g(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=ra(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ur.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ia(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return aa(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=oa(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const s=null==t.fetchFunc?X().platform.fetch:t.fetchFunc;let r,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!r){const n=(await s(e[a],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);a++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}(t),r=this.weightPathPrefix||n,a=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(r+e+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[oa(e),await vi(t,this.loadOptions)]}}function ki(e){return null!=e.match(wi.URL_SCHEME_REGEX)}wi.URL_SCHEME_REGEX=/^https?:\/\//;const Ii=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ki(e))):ki(e),n)return Ci(e,t)}return null};function Ci(e,t){return new wi(e,t)}la.registerSaveRouter(Ii),la.registerLoadRouter(Ii);let Si,$i=!1;function Ni(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=ms(os,$r.backendName)){const n={pixels:e},s={numChannels:t};return $r.runKernel(os,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Si)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Si=new OffscreenCanvas(1,1).getContext("2d")}else Si=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Si.canvas.width=l,Si.canvas.height=u,Si.drawImage(e,0,0,l,u),c=Si.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(b(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Fr(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Pr(e,t,s,n)}(h,[u,l,t],"int32")}function Ti(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Ei(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(X().getBool("WRAP_TO_IMAGEBITMAP")&&Ti(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ni(n,t)}function Ri(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Ai(e,t){let n=Or(e,"img","toPixels");if(!(e instanceof ar)){const e=n;n=za(e,"int32"),e.dispose()}Ri(n);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const e=[0,0,0,255];for(let s=0;s<a;s++){const t=i[u*a+s];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[s]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!$i){null!=ms(Xe,$r.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),$i=!0)}t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Fi(e,t,n){let s=Or(e,"img","draw");if(!(e instanceof ar)){const e=s;s=za(e,"int32"),e.dispose()}Ri(s),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);const r={image:s},a={canvas:t,options:n};$r.runKernel(Xe,r,a)}const Di=Mr({fromPixels_:Ni}),_i=-2,Oi=-1;function Li(e,t,n){const s=e.shape.length;g(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),g(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)g(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Mi(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zi(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Pi(e,t,n,s){const r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)0===a?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Bi(e,t,n){return n<=e?n:n-(t-1)}function Wi(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Ui(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Vi(i,l,u,s,e),h=Gi(o,l,u,r,e),d=Pi(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=ji(i,s,a,e,p,l),h[p]=Ki(o,r,a,e,p,l),d[p]=Hi(a,p,l);return{begin:c,end:h,strides:d}}function Vi(e,t,n,s,r){const a=[...r],i=Wi(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const r=Bi(t,n,o);let i=s[r];e&1<<r&&(i=0),a[o]=i}return a}function Gi(e,t,n,s,r){const a=[...r],i=Wi(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const r=Bi(t,n,o);let i=s[r];e&1<<r&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=r[o];a[o]<0&&(a[o]+=e),a[o]=d(0,a[o],r[o])}return a}function Hi(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function ji(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=d(0,i,l-1),i}function Ki(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?d(0,i,l):d(-1,i,l-1),i}function qi(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Xi(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Yi(e,t,n){let s;const r=e.shape.length;let a;return s="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{g(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(g(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function Ji(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let x=0;x<h.dims;x++)c&&0!==(1<<x&o)&&h.numAddAxisAfterEllipsis++,1<<x&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(_i),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Oi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let x=0;x<e.length;++x){if(0===d.strides[x])throw Error(`strides[${x}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<x),n=e[x];if(-1===n){m.push(t?1:-1);continue}const s=[d.beginMask&1<<x,d.endMask&1<<x],r=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(t&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[x];const a=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(t){const e=d.begin[x]<0?n+d.begin[x]:d.begin[x];if(d.begin[x]=e,d.end[x]=d.begin[x]+1,e<0||e>=n)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=Zi(d.begin[x],0,d.strides[x],n,s,r),d.end[x]=Zi(d.end[x],1,d.strides[x],n,s,r);const e=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;p=p&&e,f=f&&(0===x&&1===d.strides[x]||e)}else p=p&&1===d.strides[x]&&a,f=f&&(0===x&&1===d.strides[x]||a);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[x]-d.begin[x],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=d.strides[x]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==d.strides[x]<0?0:Math.trunc(i/d.strides[x])+(i%d.strides[x]!==0?1:0),m.push(e)}else m.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const e=d.finalShapeGatherIndices[x];e>=0?b.push(m[e]):e===_i&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==_i)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Zi(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const Qi=Mr({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:Or(e,"x","all","bool")},r={axis:t,keepDims:n};return $r.runKernel(ae,s,r)}});const eo=Mr({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:Or(e,"x","any","bool")},r={axis:t,keepDims:n};return $r.runKernel(ie,s,r)}});const to=Mr({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Or(e,"x","argMax")},s={axis:t};return $r.runKernel(oe,n,s)}});function no(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5?arguments[5]:void 0;return ao(e,[...t,e[3]],n,a,s,null,null,mo(r))}function so(e,t,n,s,r,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=lo(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ao(e,u,n,s,r,a,!1,i)}function ro(e,t,n,s,r,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,l,u]=uo(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return io(e,c,n,s,r,!1,h,a)}function ao(e,t,n,s,r,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=lo(n),[b,x]=lo(s),y=co(d,b),v=co(p,x),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=oo(e,t,n));const a=e[0],i=e[1],o=ho((a-t+2*s)/n+1,r),l=ho((i-t+2*s)/n+1,r);return[o,l]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=ho((t-a+d+p)/s+1,o),h=ho((n-i+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,y,v,a,o),C=i?f*h:f;let S;return"channelsFirst"===o?S=[l,C,k,I]:"channelsLast"===o&&(S=[l,k,I,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:S,filterShape:t}}function io(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=uo(n),[v,w,k]=uo(s),I=co(p,v),C=co(f,w),S=co(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const g=function(e,t,n,s,r,a){null==r&&(r=oo(e,t[0],s[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(i[o]=ho((e[o]-t[o]+2*r)/s[o]+1,a));return i}([t,n,s,1],[o,l,u],1,[r,a,i],e,c);d=g[0],p=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-s,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,v=Math.floor(g/2);h={top:x,bottom:y,left:v,right:g-v,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,x,y,I,C,S,o),R=a?m*d:m;let A;return"channelsFirst"===i?A=[l,R,N,T,E]:"channelsLast"===i&&(A=[l,N,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function oo(e,t,n){const s=co(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+s)/2)}function lo(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function uo(e){return"number"===typeof e?[e,e,e]:e}function co(e,t){return t<=1?e:e+(e-1)*(t-1)}function ho(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function po(e){const[t,n,s]=lo(e);return 1===t&&1===n&&1===s}function fo(e,t){return po(e)||po(t)}function go(e){return lo(e).every((e=>e>0))}function mo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function bo(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)g(v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{g(v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const xo=Mr({reshape_:function(e,t){const n={x:Or(e,"x","reshape","string_or_numeric")},s={shape:t};return $r.runKernel(dn,n,s)}});const yo=Mr({avgPool_:function(e,t,n,s,r){const a=Or(e,"x","avgPool","float32");g(fo(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=xo(a,[1,a.shape[0],a.shape[1],a.shape[2]])),g(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),bo("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=$r.runKernel(fe,l,u);return c=za(c,a.dtype),o?xo(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const vo=Mr({avgPool3d_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=Or(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=xo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),g(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),g("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),g("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),bo("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=$r.runKernel(me,u,c);return h=za(h,o.dtype),l?xo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const wo=Mr({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Or(e,"x","batchNorm"),o=Or(t,"mean","batchNorm"),l=Or(n,"variance","batchNorm");let u,c;null!=r&&(u=Or(r,"scale","batchNorm")),null!=s&&(c=Or(s,"offset","batchNorm")),g(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),g(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),g(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?xo(e,[1,1,1,e.size]):2===e.rank?xo(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?xo(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=$r.runKernel(ct,h,d);return xo(p,i.shape)}});const ko=Mr({batchNorm2d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),o=Or(t,"mean","batchNorm"),l=Or(n,"variance","batchNorm");let u,c;return null!=r&&(u=Or(r,"scale","batchNorm")),null!=s&&(c=Or(s,"offset","batchNorm")),g(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),g(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),g(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&g(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&g(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),wo(i,o,l,c,u,a)}});const Io=Mr({batchNorm3d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),o=Or(t,"mean","batchNorm"),l=Or(n,"variance","batchNorm");let u,c;return null!=r&&(u=Or(r,"scale","batchNorm")),null!=s&&(c=Or(s,"offset","batchNorm")),g(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),g(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),g(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&g(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&g(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),wo(i,o,l,c,u,a)}});const Co=Mr({batchNorm4d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),o=Or(t,"mean","batchNorm"),l=Or(n,"variance","batchNorm");let u,c;return null!=r&&(u=Or(r,"scale","batchNorm")),null!=s&&(c=Or(s,"offset","batchNorm")),g(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),g(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),g(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&g(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&g(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),wo(i,o,l,c,u,a)}});const So=Mr({broadcastTo_:function(e,t){let n=Or(e,"broadcastTo","x");const s=n.shape;if(U(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=xo(n,e)}const r=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])a[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Pa(n);const i={x:n},o={reps:a};return $r.runKernel(Zn,i,o)}});const $o=Mr({clipByValue_:function(e,t,n){const s=Or(e,"x","clipByValue");if(g(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return ni(s.shape,t,s.dtype);const r={x:s},a={clipValueMin:t,clipValueMax:n};return $r.runKernel(Se,r,a)}});const No=Mr({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;g(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Lr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Pa(n[0]);const s=n,r={axis:t};return $r.runKernel(Te,s,r)}});const To=Mr({concat1d_:function(e){return No(e,0)}});const Eo=Mr({concat2d_:function(e,t){return No(e,t)}});const Ro=Mr({concat3d_:function(e,t){return No(e,t)}});const Ao=Mr({concat4d_:function(e,t){return No(e,t)}});const Fo=Mr({conv2d_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Or(e,"x","conv2d","float32"),l=Or(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=xo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),g(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),bo("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];g(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),g(fo(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),g(go(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),g(go(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=$r.runKernel(Ee,d,p);return c?xo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Do=Mr({conv1d_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=Or(e,"x","conv1d"),l=Or(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=xo(o,[1,o.shape[0],o.shape[1]])),g(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),g(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),bo("conv1d",s,i),g(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),g(fo(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),g(go(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),g(go(n),(()=>"Error in conv1D: Stride should be larger than 0.")),g("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=xo(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=xo(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Fo(d,h,[1,n],s,"NHWC",[1,a],i);return xo(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const _o=Mr({conv2DBackpropInput_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;g(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=xo(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),g(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),g(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),g(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];g(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),g(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),bo("conv2dDerInput",r,i);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=$r.runKernel(Ae,d,p);return u?xo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Oo=Mr({conv2dTranspose_:function(e,t,n,s,r,a){const i=Or(e,"x","conv2dTranspose"),o=Or(t,"filter","conv2dTranspose");return _o(n,i,o,s,r,"NHWC",a)}});const Lo=Mr({conv3d_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=Or(e,"x","conv3d"),o=Or(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=xo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),g(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),g(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),g(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),g(fo(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),g("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),g(go(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),g(go(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=$r.runKernel(Fe,c,h);return u?xo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Mo=Mr({conv3DBackpropInput_:function(e,t,n,s,r){g(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=xo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];g(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),g(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),g(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),g(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),g(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=$r.runKernel(_e,c,h);return o?xo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const zo=Mr({conv3dTranspose_:function(e,t,n,s,r){const a=Or(e,"x","conv3dTranspose"),i=Or(t,"filter","conv3dTranspose");return Mo(n,a,i,s,r)}});const Po=Mr({denseBincount_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Or(e,"x","denseBincount"),a=Or(t,"weights","denseBincount");g("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),g(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),g(n>=0,(()=>`size must be non-negative, but got ${n}.`)),g(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return $r.runKernel(Be,i,o)}});const Bo=Mr({depthwiseConv2d_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Or(e,"x","depthwiseConv2d","float32"),l=Or(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=xo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),g(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];g(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),bo("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=$r.runKernel(Ue,d,p);return c?xo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Wo=Mr({elu_:function(e){const t={x:Or(e,"x","elu","float32")};return $r.runKernel(Ze,t)}});const Uo=Mr({equal_:function(e,t){let n=Or(e,"a","equal","string_or_numeric"),s=Or(t,"b","equal","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(tt,r)}});const Vo=Mr({erf_:function(e){let t=Or(e,"x","erf");g("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=za(t,"float32"));const n={x:t};return $r.runKernel(et,n)}});const Go=Mr({exp_:function(e){const t={x:Or(e,"x","exp")};return $r.runKernel(nt,t)}});const Ho=Mr({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Or(e,"x","expandDims","string_or_numeric");g(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return $r.runKernel(st,s,r)}});const jo=Mr({tile_:function(e,t){const n=Or(e,"x","tile","string_or_numeric");g(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return $r.runKernel(Zn,s,r)}});const Ko=Mr({eye_:function(e,t,n){null==t&&(t=e);const s=Ma([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let i=0;i<r;++i)s.set(1,i,i);const a=xo(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return jo(Ho(a,0),[n[0],1,1]);if(2===n.length)return jo(Ho(Ho(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return jo(Ho(Ho(Ho(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const qo=Mr({floor_:function(e){const t={x:Or(e,"x","floor","float32")};return $r.runKernel(lt,t)}});const Xo=Mr({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:Or(e,"x","gather"),indices:Or(t,"indices","gather","int32")},a={axis:n,batchDims:s};return $r.runKernel(ht,r,a)}});const Yo=Mr({greater_:function(e,t){let n=Or(e,"a","greater","string_or_numeric"),s=Or(t,"b","greater","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(pt,r)}});const Jo=Mr({greaterEqual_:function(e,t){let n=Or(e,"a","greaterEqual","string_or_numeric"),s=Or(t,"b","greaterEqual","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(ft,r)}});const Zo=Mr({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:Or(e,"x","leakyRelu")},s={alpha:t};return $r.runKernel(wt,n,s)}});const Qo=Mr({log_:function(e){const t={x:Or(e,"x","log","float32")};return $r.runKernel(St,t)}});const el=Mr({log1p_:function(e){const t={x:Or(e,"x","log1p")};return $r.runKernel($t,t)}});const tl=Mr({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:Or(e,"x","max")},r={reductionIndices:t,keepDims:n};return $r.runKernel(Ft,s,r)}});const nl=Mr({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=Or(e,"x","sum");"bool"===s.dtype&&(s=za(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return $r.runKernel(Dn,r,a)}});const sl=Mr({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Or(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Ka(((e,n)=>{const s=tl(e,t,!0),r=ai(e,s),a=ai(za(r,"float32"),Qo(nl(Go(r),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[s]=n,r=Go(s);return ai(e,Va(nl(e,t,!0),r))}}}));return s(n)}});function rl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function al(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function il(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function ol(e,t){return al(e,t.map((e=>1)),t)}function ll(e,t,n){g(rl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function ul(e,t){if(rl(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function cl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function hl(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const dl=Mr({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Or(e,"x","logSumExp"),r=S(t,s.shape),a=tl(s,r,!0),i=ai(s,a),o=Go(i),l=nl(o,r),u=Qo(l),c=Ba(xo(a,u.shape),u);if(n){const e=ol(c.shape,r);return xo(c,e)}return c}});const pl=Mr({logicalAnd_:function(e,t){const n=Or(e,"a","logicalAnd","bool"),s=Or(t,"b","logicalAnd","bool");ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Nt,r)}});const fl=Mr({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Or(e,"a","matMul"),a=Or(t,"b","matMul");[r,a]=xr(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return $r.runKernel(xe,i,o)}});const gl=Mr({maxPool_:function(e,t,n,s,r){const a=Or(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=xo(a,[1,a.shape[0],a.shape[1],a.shape[2]])),g(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),g(fo(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),bo("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=$r.runKernel(_t,l,u);return o?xo(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ml=Mr({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=Or(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=xo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),g(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),g("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),bo("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=$r.runKernel(Lt,u,c);return l?xo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const bl=Mr({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:Or(e,"x","mean")},r={axis:t,keepDims:n};return $r.runKernel(Pt,s,r)}});const xl=Mr({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:Or(e,"x","min")},r={axis:t,keepDims:n};return $r.runKernel(Bt,s,r)}});const yl=Mr({minimum_:function(e,t){let n=Or(e,"a","minimum"),s=Or(t,"b","minimum");[n,s]=xr(n,s),"bool"===n.dtype&&(n=za(n,"int32"),s=za(s,"int32")),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Wt,r)}});const vl=Mr({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=S(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=Or(e,"x","moments")).shape),s=bl(e,n,t);let r=s.shape;t||(r=ol(s.shape,n));const a=Ha(ai(za(e,"float32"),xo(s,r)));return{mean:s,variance:bl(a,n,t)}}});const wl=Mr({neg_:function(e){const t={x:Or(e,"x","neg")};return $r.runKernel(jt,t)}});const kl=Mr({notEqual_:function(e,t){let n=Or(e,"a","notEqual","string_or_numeric"),s=Or(t,"b","notEqual","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Kt,r)}});const Il=Mr({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Or(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:s};return $r.runKernel(Zt,a,i)}});function Cl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(U(e),"complex64"===t){const t=Cl(e,"float32"),n=Cl(e,"float32");return zr(t,n)}const n=B(x(e),t);return $r.makeTensor(n,e,t)}function Sl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(U(e),"complex64"===t){const t=Sl(e,"float32"),n=Cl(e,"float32");return zr(t,n)}const n=P(x(e),t);return $r.makeTensor(n,e,t)}const $l=Mr({onesLike_:function(e){const t={x:Or(e,"x","onesLike")};return $r.runKernel(Jt,t)}});const Nl=Mr({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=Or(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return $r.runKernel(en,a,r)}});const Tl=Mr({prelu_:function(e,t){const n={x:Or(e,"x","prelu"),alpha:Or(t,"alpha","prelu")};return $r.runKernel(nn,n)}});var El=n(334);class Rl{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=El.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Al{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"===typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=El.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Fl=Mr({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(U(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Rl(t,n,s,!1,r),i=Ma(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Dl=Mr({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;U(e);const a=Ma(e,s),i=new Al(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});function _l(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return $r.runKernel(ln,{},r)}const Ol=Mr({relu_:function(e){const t={x:Or(e,"x","relu")};return $r.runKernel(hn,t)}});const Ll=Mr({reverse_:function(e,t){const n={x:Or(e,"x","reverse")},s={dims:t};return $r.runKernel(xn,n,s)}});const Ml=Mr({selu_:function(e){const t={x:Or(e,"x","selu")};return $r.runKernel(Sn,t)}});const zl=Mr({separableConv2d_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=Or(e,"x","separableConv2d"),l=Or(t,"depthwiseFilter","separableConv2d"),u=Or(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=xo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");g(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),g(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),g(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),g(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),g(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];g(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Bo(c,l,s,r,i,a),m=Fo(f,u,1,"valid",i);return h?xo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Pl=Mr({sigmoid_:function(e){const t={x:Or(e,"x","sigmoid","float32")};return $r.runKernel(Rn,t)}});const Bl=Mr({slice_:function(e,t,n){const s=Or(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return $r.runKernel($n,r,a)}});const Wl=Mr({slice1d_:function(e,t,n){const s=Or(e,"x","slice1d");return g(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Bl(s,[t],[n])}});const Ul=Mr({slice2d_:function(e,t,n){const s=Or(e,"x","slice2d");return g(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Bl(s,t,n)}});const Vl=Mr({slice3d_:function(e,t,n){const s=Or(e,"x","slice3d");return g(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Bl(s,t,n)}});const Gl=Mr({slice4d_:function(e,t,n){const s=Or(e,"x","slice4d");return g(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Bl(s,t,n)}});const Hl=Mr({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Or(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return $r.runKernel(Ln,s,r)}});const jl=Mr({softplus_:function(e){const t={x:Or(e,"x","softplus")};return $r.runKernel(An,t)}});const Kl=Mr({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s={x:Or(e,"x","split")},r={numOrSizeSplits:t,axis:n};return $r.runKernel(On,s,r)}});const ql=Mr({squeeze_:function(e,t){const n=Or(e,"x","squeeze","string_or_numeric");return xo(n,$(n.shape,t).newShape)}});const Xl=Mr({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Lr(e,"tensors","stack","string_or_numeric");g(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&g(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return $r.runKernel(Qt,s,r)}});const Yl=Mr({tanh_:function(e){const t={x:Or(e,"x","tanh","float32")};return $r.runKernel(Jn,t)}});function Jl(e,t){b(e);const n=Fr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Pr(e,null,n,t)}function Zl(e,t,n){if(b(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Fr(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Pr(e,t,s,n)}const Ql=Mr({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(U(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Rl(t,n,s,!0,r),i=Ma(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const eu=Mr({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Or(e,"x","unstack","string_or_numeric");g(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return $r.runKernel(ss,s,r)}});const tu=Mr({where_:function(e,t,n){const s=Or(t,"a","where"),r=Or(n,"b","where"),a=Or(e,"condition","where","bool"),i=ci(ci(a.shape,s.shape),r.shape),o={condition:So(a,i),t:So(s,i),e:So(r,i)};return $r.runKernel(Cn,o)}});const nu=Mr({imag_:function(e){const t={input:Or(e,"input","imag")};return $r.runKernel(bt,t)}});const su=Mr({real_:function(e){const t={input:Or(e,"input","real")};return $r.runKernel(un,t)}});const ru=Mr({transpose_:function(e,t,n){const s=Or(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),g(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{g(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?Hr((()=>{let e=su(s),t=nu(s);return e=$r.runKernel(ts,{x:e},a),t=$r.runKernel(ts,{x:t},a),n&&(t=wl(t)),zr(e,t)})):$r.runKernel(ts,r,a)}});const au=Mr({dropout_:function(e,t,n,s){const r=Or(e,"x","dropout");if(g("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),g(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ar?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=Ua(qo(Ba(Dl(a,0,1,"float32",s),i)),i);return Va(r,o)}});const iu=Mr({fft_:function(e){g("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $r.runKernel(at,t)}});const ou=Mr({rfft_:function(e,t){g("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=Bl(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=No([e,Cl(s)],e.shape.length-1),n=t}else r=e;const a=ja(r),i=xo(zr(r,a),[s,n]),o=iu(i),l=Math.floor(n/2)+1,u=su(o),c=nu(o),h=Kl(u,[l,n-l],u.shape.length-1),d=Kl(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,xo(zr(h[0],d[0]),p)}});const lu=Mr({ifft_:function(e){g("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $r.runKernel(mt,t)}});const uu=Mr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=xo(e,[n,t]);s=lu(r)}else{const r=[n,2*(t-1)],a=xo(su(e),[n,t]),i=xo(nu(e),[n,t]),o=Ll(Bl(a,[0,1],[n,t-2]),1),l=Va(Ll(Bl(i,[0,1],[n,t-2]),1),qa(-1)),u=No([a,o],1),c=No([i,l],1),h=xo(zr(u,c),[r[0],r[1]]);s=lu(h)}if(s=su(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=xo(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}});const cu=Mr({conv2DBackpropFilter_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=xo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=xo(t,[1,t.shape[0],t.shape[1],t.shape[2]])),g(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),g(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),g(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];g(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),g(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),bo("conv2dDerFilter",r,i);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return $r.runKernel(Re,h,d)}});const hu=Mr({relu6_:function(e){const t={x:Or(e,"x","relu6")};return $r.runKernel(bn,t)}});const du=Mr({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Or(e,"x","step")},s={alpha:t};return $r.runKernel(is,n,s)}});function pu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Va(e,du(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function fu(e,t){let n=t;const s=ui(e.shape,t.shape);return s.length>0&&(n=nl(n,s)),xo(n,e.shape)}function gu(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Ol(e);if("elu"===t)return Wo(e);if("relu6"===t)return hu(e);if("prelu"===t)return Tl(e,n);if("leakyrelu"===t)return Zo(e,s);if("sigmoid"===t)return Pl(e);throw new Error(`Unknown fused activation ${t}.`)}const mu=(e,t)=>!(e>0)||"linear"===t;const bu=Mr({fusedConv2d_:function(e){let{x:t,filter:n,strides:s,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(u=u||"linear",!1===mu($r.state.gradientDepth,u)){g("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=Fo(t,n,s,r,a,i,o);return null!=l&&(e=Ba(e,l)),gu(e,u,c,h)}const d=Or(t,"x","conv2d","float32"),p=Or(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=xo(d,[1,d.shape[0],d.shape[1],d.shape[2]])),g(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),g(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),bo("fused conv2d",r,o);const b="NHWC"===a?f.shape[3]:f.shape[1];g(p.shape[2]===b,(()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${p.shape[2]}.`)),g(fo(s,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`));const x=ao(f.shape,p.shape,s,i,r,o);let y,v;if(null!=l&&(y=Or(l,"bias","fused conv2d"),[y]=xr(y,d),"NHWC"===a?ci(x.outShape,y.shape):(g(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),g(0===y.shape.length||y.shape[0]===x.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)))),null!=c){const e=c.shape;if(g(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)g(1===e[0]||e[0]===x.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`));else if(3===e.length)try{ci(e,x.outShape)}catch(C){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(t)}v=Or(c,"prelu weights","fused conv2d")}const w=(e,t)=>{g("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[n,o,l,c]=t,h=pu(e,l,u);g(po(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[_o(o.shape,h,n,s,r),cu(o,h,n.shape,s,r)];if(null!=c){const e=fu(c,h);d.push(e)}return d},k={x:f,filter:p,bias:y,preluActivationWeights:v},I={strides:s,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=Ka(((e,t,n)=>{let s=$r.runKernel(cs,k,I);return n([t,e,s]),m&&(s=xo(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return e(f,p)}{const e=Ka(((e,t,n,s)=>{let r=$r.runKernel(cs,k,I);return s([t,e,r,n]),m&&(r=xo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(f,p,y)}}});const xu=Mr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=xo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=xo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return $r.runKernel(Ve,u,c)}});const yu=Mr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=xo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=$r.runKernel(Ge,u,c);return l?xo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const vu=Mr({fusedMatMul_:function(e){let{a:t,b:n,transposeA:s=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===mu($r.state.gradientDepth,i)){let e=fl(t,n,s,r);return null!=a&&(e=Ba(e,a)),gu(e,i,o,l)}let u=Or(t,"a","fused matMul"),c=Or(n,"b","fused matMul");[u,c]=xr(u,c);const h=s?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),b=c.shape.slice(0,-2),y=x(m),v=x(b);g(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${s} and transposeB=${r} must match.`));const w=ci(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,f]),k=xo(u,s?[y,h,p]:[y,p,h]),I=xo(c,r?[v,f,d]:[v,d,f]);let C,S;null!=a&&(C=Or(a,"bias","fused matMul"),[C]=xr(C,u),ci(w,C.shape)),null!=o&&(S=Or(o,"prelu weights","fused matMul"));const $=(e,t)=>{const[n,o,l,u]=t,c=pu(xo(e,l.shape),l,i);let h,d;if(s||r?!s&&r?(h=fl(c,o,!1,!1),d=fl(c,n,!0,!1)):s&&!r?(h=fl(o,c,!1,!0),d=fl(n,c,!1,!1)):(h=fl(o,c,!0,!0),d=fl(c,n,!0,!0)):(h=fl(c,o,!1,!0),d=fl(n,c,!0,!1)),null!=a){return[h,d,fu(u,c)]}return[h,d]},N={a:k,b:I,bias:C,preluActivationWeights:S},T={transposeA:s,transposeB:r,activation:i,leakyreluAlpha:l};if(null==a){const e=Ka(((e,t,n)=>{const s=$r.runKernel(us,N,T);return n([e,t,s]),{value:xo(s,w),gradFunc:$}}));return e(k,I)}{const e=Ka(((e,t,n,s)=>{const r=$r.runKernel(us,N,T);return s([e,t,r,n]),{value:xo(r,w),gradFunc:$}}));return e(k,I,C)}}});const wu=Mr({cropAndResize_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Or(e,"image","cropAndResize"),o=Or(t,"boxes","cropAndResize","float32"),l=Or(n,"boxInd","cropAndResize","int32"),u=o.shape[0];g(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),g(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),g(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),g(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),g(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),g("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return $r.runKernel(Pe,c,h)}});const ku=Mr({flipLeftRight_:function(e){const t=Or(e,"image","flipLeftRight","float32");g(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return $r.runKernel(ot,n,{})}});const Iu=Mr({grayscaleToRGB_:function(e){const t=Or(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];g(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),g(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,jo(t,r)}});const Cu=Mr({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];const r=n.map(((e,t)=>Or(e,`tensors${t}`,"einsum"))),a={equation:e};return $r.runKernel(Je,r,a)}});const Su=Mr({rgbToGrayscale_:function(e){const t=Or(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];g(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),g(3===s,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`));const r=t.dtype,a=za(t,"float32"),i=Jl([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Cu("ij,j->i",a,i);break;case 3:o=Cu("ijk,k->ij",a,i);break;case 4:o=Cu("ijkl,l->ijk",a,i);break;case 5:o=Cu("ijklm,m->ijkl",a,i);break;case 6:o=Cu("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Ho(o,-1),za(o,r)}});const $u=Mr({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=Or(e,"image","rotateWithOffset","float32");g(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return $r.runKernel(ls,a,i)}});function Nu(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),g(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),g(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),g(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),g(1===t.rank,(()=>"scores must be a 1D tensor")),g(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),g(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Tu=Mr({nonMaxSuppression_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=Or(e,"boxes","nonMaxSuppression","float32"),i=Or(t,"scores","nonMaxSuppression","float32"),o=Nu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return $r.runKernel(qt,{boxes:a,scores:i},l)}});function Eu(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Ru)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Ru(e,t){return e>t?1:e<t?-1:0}function Au(e,t,n,s,r){return _u(e,t,n,s,r,0)}function Fu(e,t,n,s,r,a){return _u(e,t,n,s,r,0,!1,a,!0)}function Du(e,t,n,s,r,a){return _u(e,t,n,s,r,a,!0)}function _u(e,t,n,s,r,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(Mu);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=Ou(e,a,h[l]);if(n>=s){o=!0;break}if(t.score=t.score*Lu(s,c,n),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&Eu(u,t,Mu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Ou(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function Lu(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Mu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const zu=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=Or(e,"boxes","nonMaxSuppressionAsync"),i=Or(t,"scores","nonMaxSuppressionAsync"),o=Nu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Au(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Jl(h,"int32")};const Pu=Mr({nonMaxSuppressionWithScore_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Or(e,"boxes","nonMaxSuppression"),o=Or(t,"scores","nonMaxSuppression"),l=Nu(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},h=$r.runKernel(Yt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Bu=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Or(e,"boxes","nonMaxSuppressionAsync"),o=Or(t,"scores","nonMaxSuppressionAsync"),l=Nu(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Du(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jl(d,"int32"),selectedScores:Jl(p)}};const Wu=Mr({nonMaxSuppressionPadded_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Or(e,"boxes","nonMaxSuppression"),o=Or(t,"scores","nonMaxSuppression"),l=Nu(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=$r.runKernel(Xt,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Uu=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Or(e,"boxes","nonMaxSuppressionAsync"),o=Or(t,"scores","nonMaxSuppressionAsync"),l=Nu(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:g}=Fu(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jl(f,"int32"),validOutputs:qa(g,"int32")}};const Vu=Mr({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Or(e,"images","resizeBilinear");g(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),g(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),g(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=xo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=$r.runKernel(gn,o,l);return i?xo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Gu=Mr({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Or(e,"images","resizeNearestNeighbor");g(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),g(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),g("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),g(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=xo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=$r.runKernel(pn,o,l);return i?xo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Hu=Mr({bincount_:function(e,t,n){const s=Or(e,"x","bincount"),r=Or(t,"weights","bincount");g("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),g(n>=0,(()=>`size must be non-negative, but got ${n}.`)),g(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return $r.runKernel(ve,a,i)}});const ju=Mr({lessEqual_:function(e,t){let n=Or(e,"a","lessEqual","string_or_numeric"),s=Or(t,"b","lessEqual","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(It,r)}});const Ku=Mr({round_:function(e){const t={x:Or(e,"x","round")};return $r.runKernel(yn,t)}});const qu=Mr({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=Or(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=Va(Jl([s]),255);if(g(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),g(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),g("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),g("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=Kl(r,[1,1,1],-1);const e=Va(i,.2989),t=Va(o,.587),n=Va(l,.114);u=Ba(Ba(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,s,r,a,i,o,l=Jl([-1]),u=Jl([0]),c=Jl([0]);for(let h=0;h<e.size-1;h++){n=Bl(e,0,h+1),s=Bl(e,h+1),i=Ua(nl(n),t),o=Ua(nl(s),t);const d=nl(Va(n,_l(0,n.size)));r=Ua(d,nl(n));const p=ni(s.shape,n.size),f=Ba(_l(0,s.size),p),g=Va(s,f);a=Ua(nl(g),nl(s));const m=ai(r,a),b=ai(r,a),x=Va(i,o);c=Va(Va(x,m),b);const y=Yo(c,u);u=tu(y,c,u),l=tu(y,Jl([h]),l)}return l}(Hu(za(Ku(u),"int32"),Br([]),256),a)}const h=n?ju(u,c):Yo(u,c);return za(Va(h,255),"int32")}});const Xu=Mr({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5?arguments[5]:void 0;const i=Or(e,"image","transform","float32"),o=Or(t,"transforms","transform","float32");g(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),g(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),g(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return $r.runKernel(es,l,u)}});const Yu=Mr({less_:function(e,t){let n=Or(e,"a","less","string_or_numeric"),s=Or(t,"b","less","string_or_numeric");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(kt,r)}});const Ju=Mr({bandPart_:function(e,t,n){const s=Or(e,"a","bandPart");g(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);let o,l;"number"===typeof t?(g(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),g(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Or(t<0?a:t,"numLower","bandPart")):(g("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=tu(Yu(t,0),a,yl(t,a))),"number"===typeof n?(g(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),g(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=Or(n<0?i:n,"numUpper","bandPart")):(g("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=tu(Yu(n,0),i,yl(n,i)));const u=xo(_l(0,a,1,"int32"),[-1,1]),c=_l(0,i,1,"int32"),h=ai(u,c),d=pl(ju(h,o),Jo(h,wl(l))),p=Cl([a,i],s.dtype);return xo(Xl(eu(xo(s,[-1,a,i])).map((e=>tu(d,e,p)))),r)}});function Zu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return oi(e);if(1!==e.rank&&null===n)return Zu(xo(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return nl(oi(e),n);if(t===1/0)return tl(oi(e),n);if(t===-1/0)return xl(oi(e),n);if("euclidean"===t||2===t)return Ga(nl(ri(oi(e),qa(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return tl(nl(oi(e),n[0]),n[1]-1);if(t===1/0)return tl(nl(oi(e),n[1]),n[0]);if(t===-1/0)return xl(nl(oi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ga(nl(Ha(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Qu=Mr({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Zu(e=Or(e,"x","norm"),t,n);let a=r.shape;if(s){const t=S(n,e.shape);a=ol(r.shape,t)}return xo(r,a)}});const ec=Mr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,g(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)g(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Kl(e,e.shape[0],0).map((e=>ql(e,[0])));g(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let r=0;r<e.length;++r)n.push($r.tidy((()=>{let e=s[r];if(r>0)for(let t=0;t<r;++t){const s=Va(nl(Va(n[t],e)),n[t]);e=ai(e,s)}return Ua(e,Qu(e,"euclidean"))})));return t?Xl(n,0):n}});function tc(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return $r.tidy((()=>{g(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Ko(n),a=Pa(e);const i=Zl([[1]],[1,1]);let o=Pa(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=$r.tidy((()=>{const t=Bl(a,[e,e],[n-e,1]),l=Qu(t),u=Bl(a,[e,e],[1,1]),c=tu(Yo(u,0),Zl([[-1]]),Zl([[1]])),h=ai(u,Va(c,l)),d=Ua(t,h);o=1===d.shape[0]?Pa(i):No([i,Bl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=wl(Ua(fl(c,h),l)),f=Bl(a,[e,0],[n-e,s]),g=Va(p,o),m=ru(o);if(0===e)a=ai(f,fl(g,fl(m,f)));else{const t=ai(f,fl(g,fl(m,f)));a=No([Bl(a,[0,0],[e,s]),t],0)}const b=ru(g),x=Bl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=ai(x,fl(fl(x,o),b));else{const t=ai(x,fl(fl(x,o),b));r=No([Bl(r,[0,0],[n,e]),t],1)}return[o,a,r]})),jr([t,l,u])}return!t&&n>s&&(r=Bl(r,[0,0],[n,s]),a=Bl(a,[0,0],[s,s])),[r,a]}))}const nc=Mr({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(g(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return tc(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=eu(xo(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach((e=>{const[n,s]=tc(e,t);r.push(n),a.push(s)}));return[xo(Xl(r,0),e.shape),xo(Xl(a,0),e.shape)]}}});var sc;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(sc||(sc={}));const rc=Mr({squaredDifference_:function(e,t){let n=Or(e,"a","squaredDifference"),s=Or(t,"b","squaredDifference");[n,s]=xr(n,s),ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Un,r,{})}});const ac={flipLeftRight:ku,grayscaleToRGB:Iu,resizeNearestNeighbor:Gu,resizeBilinear:Vu,rgbToGrayscale:Su,rotateWithOffset:$u,cropAndResize:wu,nonMaxSuppression:Tu,nonMaxSuppressionAsync:zu,nonMaxSuppressionWithScore:Pu,nonMaxSuppressionWithScoreAsync:Bu,nonMaxSuppressionPadded:Wu,nonMaxSuppressionPaddedAsync:Uu,threshold:qu,transform:Xu},ic={bandPart:Ju,gramSchmidt:ec,qr:nc};const oc=class{static sgd(e){return new pi(e)}static momentum(e,t){return new fi(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new gi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new ii(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ti(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new di(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new si(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},lc="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function uc(){return new Promise((e=>lc((()=>e()))))}function cc(e,t){const n=e[0].length;e.forEach(((e,t)=>{g(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),g(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)g(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function hc(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var dc;function pc(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function fc(e){const t={FIRST_DIM_SIZE:dc.FIRST_DIM_SIZE,VALUE_ROWIDS:dc.VALUE_ROWIDS,ROW_LENGTHS:dc.ROW_LENGTHS,ROW_SPLITS:dc.ROW_SPLITS,ROW_LIMITS:dc.ROW_LIMITS,ROW_STARTS:dc.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function gc(e){return 0===e.length?0:e[0]===dc.FIRST_DIM_SIZE?e.length-1:e.length}function mc(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(dc||(dc={}));const bc=30;function xc(e){return e<=bc?e:O(e,Math.floor(Math.sqrt(e)))}function yc(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function vc(e,t,n){let s=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function wc(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let s=t+1;s<e;++s)s<=2*t?(n.push(s),n.push(s-(t+1))):n.push(s)}else{const s=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):s.push(n);n.push(...s),n.push(0),n.push(...r)}return n}function kc(e,t,n){let s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function Ic(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Cc(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Sc(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===x(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const o=e.shape,l=r.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...L(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function $c(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Nc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}$c(n,t,e)}function Tc(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let l=r;l<a;++l)i*=n[l];const o=r<1?1:r;return{sliceRank:r,numUpdates:x(t.shape)/o,sliceSize:i,strides:[...L(n.slice(0,r)),1],outputSize:x(n)}}const Ec=1.7580993408473768,Rc=1.0507009873554805,Ac=.3275911,Fc=.254829592,Dc=-.284496736,_c=1.421413741,Oc=-1.453152027,Lc=1.061405429;function Mc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function zc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Pc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Bc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Wc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Uc(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Vc(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function Gc(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Hc="->",jc=/->/g,Kc=",",qc="...";function Xc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(jc,"").length)/Hc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Hc}").`);const[s,r]=e.split(Hc);g(-1===s.indexOf(qc),(()=>`The ellipsis notation ("${qc}") is not supported yet.`));const a=s.split(Kc),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<r.length;++h){const e=r[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<s.length;++h){const e=s[h];-1===o.indexOf(e)&&e!==Kc&&o.push(e)}const l=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<a[h].length;++e)l[h].push(o.indexOf(a[h][e]))}const u=o.length,c=[];for(let h=r.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function Yc(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)-1===n[r]&&s.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Jc(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===s[t[r][n]]?s[t[r][n]]=e[n]:g(s[t[r][n]]===e[n],(()=>`Expected dimension ${s[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Zc(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);const a=[];for(let i=0;i<n.length;++i){const e=eh(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(s[i].push(t),a.push(t))}return{path:n,steps:s}}function Qc(e){return e.every(((e,t)=>e===t))}function eh(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function th(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=[];if("number"===typeof t)g(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);g(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}g(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function nh(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function sh(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function rh(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ah(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ih(e,t){return`size ${e} must be non-negative, not ${t}`}function oh(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function lh(e,t){return`Input to reshape is a SparseTensor with ${x(e)}\n  dense values, but the requested shape requires a multiple of ${x(t)}. inputShape=${e} outputShape= ${t}`}function uh(e,t){return`Input to reshape is a tensor with ${x(e)} dense values, but the requested shape has ${x(t)}. inputShape=${e} outputShape=${t}`}function ch(){return"segment ids must be >= 0"}function hh(){return"segment ids are not increasing"}function dh(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ph(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function fh(e,t){let n,s=!1;for(e<=bc?(n=e,s=!0):n=O(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=O(e,n+1);return n}function gh(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function mh(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function bh(e){try{return e.map((e=>Ws(e)))}catch(KL){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${KL}`)}}function xh(e){return e.map((e=>Bs(e)))}function yh(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const s=Ma(e,"int32"),r=Ma([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=s.indexToLoc(n[a]),i=a*e.length;r.values.set(t,i)}return r.toTensor()}!function(){for(const e of mi)Qa(e)}();const vh={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,du(za(n,"float32"),-1))}}},wh={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ha(za(n,"float32")),s=Ga(ai(qa(1),t));return wl(Ua(e,s))}}}},kh={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ga(ai(Ha(za(n,"float32")),1));return Ua(e,t)}}}},Ih={kernelName:se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{let t=e;const s=ui(n.shape,r);return s.length>0&&(t=nl(t,s)),xo(t,n.shape)},b:()=>{let t=e;const n=ui(s.shape,r);return n.length>0&&(t=nl(t,n)),xo(t,s.shape)}}}},Ch={kernelName:re,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},Sh={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ja(n)}}},$h={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ja(n)}}},Nh={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ga(ai(qa(1),Ha(za(n,"float32")))))}}},Th={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ga(Ba(qa(1),Ha(za(n,"float32"))));return Ua(e,t)}}}},Eh={kernelName:pe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{const t=Ba(Ha(n),Ha(s));let a=Va(e,Ua(s,t));const i=ui(n.shape,r);return i.length>0&&(a=nl(a,i)),xo(a,n.shape)},b:()=>{const t=Ba(Ha(n),Ha(s));let a=wl(Va(e,Ua(n,t)));const i=ui(s.shape,r);return i.length>0&&(a=nl(a,i)),xo(a,s.shape)}}}},Rh={kernelName:he,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ba(Ha(za(n,"float32")),1))}}},Ah={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,ai(qa(1),Ha(za(n,"float32"))))}}};const Fh=Mr({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Or(e,"dy","avgPool3dGrad"),o=Or(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=xo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=xo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),g(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),g(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),bo("avgPool3dGrad",r,a);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=$r.runKernel(be,h,d);return c?xo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Dh={kernelName:me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Fh(e,s,r,a,i,o)}}};const _h=Mr({avgPoolGrad_:function(e,t,n,s,r){const a=Or(e,"dy","avgPoolGrad"),i=Or(t,"input","avgPoolGrad");g(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=xo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=xo(a,[1,a.shape[0],a.shape[1],a.shape[2]])),g(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),g(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=$r.runKernel(ge,c,h);return u?xo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Oh={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>_h(e,s,r,a,i)}}},Lh={kernelName:xe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>fl(e,r,!1,!1),b:()=>fl(e,s,!0,!1)}:a&&!i?{a:()=>fl(r,e,!1,!0),b:()=>fl(s,e,!1,!1)}:{a:()=>fl(r,e,!0,!0),b:()=>fl(e,s,!0,!0)}:{a:()=>fl(e,r,!1,!0),b:()=>fl(s,e,!0,!1)}}};const Mh=Mr({spaceToBatchND_:function(e,t,n){const s=Or(e,"x","spaceToBatchND");g(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),g(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),g(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return $r.runKernel(_n,r,a)}}),zh={kernelName:ye,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Mh(e,s,r)}}},Ph={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])i[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>nl(e,o,!0)}}},Bh={kernelName:Ie,gradFunc:e=>({x:()=>e.clone()})},Wh={kernelName:Ce,gradFunc:e=>({x:()=>ja(e)})},Uh={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>tu(pl(Jo(s,r),ju(s,a)),e,ja(e))}}},Vh={kernelName:Ne,inputsToSave:["x"],gradFunc:vh.gradFunc},Gh={kernelName:Te,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=S(r,t[0].shape)[0],i=s.map((e=>e[a]));return Kl(e,i,a).map((e=>()=>e))}},Hh={kernelName:Ee,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return g(po(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>_o(s.shape,e,r,i,o,l),filter:()=>cu(s,e,r.shape,i,o,l)}}},jh={kernelName:Ae,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Fo(e,r,a,i,o,1,l),filter:()=>cu(e,s,r.shape,a,i,o,l)}}};const Kh=Mr({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=xo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=xo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),g(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),g(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),g(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),g(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),g(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return $r.runKernel(De,o,l)}}),qh={kernelName:Fe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;g(po(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Mo(i.shape,e,o,r,a),filter:()=>Kh(i,e,o.shape,r,a)}}};const Xh=Mr({sin_:function(e){const t={x:Or(e,"x","sin","float32")};return $r.runKernel(Nn,t)}}),Yh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(wl(Xh(za(n,"float32"))),e)}}};const Jh=Mr({sinh_:function(e){const t={x:Or(e,"x","sinh")};return $r.runKernel(Tn,t)}}),Zh={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(Jh(za(n,"float32")),e)}}};const Qh=Mr({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:Or(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return $r.runKernel(ze,r,a)}}),ed={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=ul([r],s.rank);let n=Qh(e,r,a,!i);return null!=t&&(n=ru(n,t)),n}}}},td={kernelName:Ue,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;g(po(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return g(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),g(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),g(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),g(fo(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),bo("depthwiseConv2d",a,i),{x:()=>yu(l.shape,e,u,r,a,o,i),filter:()=>xu(l,e,u.shape,r,a,o,i)}}},nd={kernelName:je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>$r.runKernel(Ke,a,n),filter:()=>$r.runKernel(qe,i,n)}}},sd={kernelName:Ze,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>$r.runKernel(Qe,s)}}},rd={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Va(Go(wl(Ha(n))),2/Math.sqrt(Math.PI));return{x:()=>Va(e,s)}}},ad={kernelName:nt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,n)}}},id={kernelName:st,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>xo(e,n.shape)}}},od={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,Go(n))}}},ld={kernelName:lt,gradFunc:e=>({x:()=>ja(e)})},ud={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{const t=Ua(e,za(s,"float32")),a=ui(n.shape,r);return a.length>0?xo(nl(t,a),n.shape):t},b:()=>{let t=Va(e,za(n,"float32"));const a=ui(s.shape,r);a.length>0&&(t=xo(nl(t,a),s.shape));const i=Ha(s);return wl(Ua(t,za(i,"float32")))}}}};const cd=Mr({rsqrt_:function(e){const t={x:Or(e,"x","rsqrt","float32")};return $r.runKernel(vn,t)}}),hd={kernelName:ct,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?qa(1):o,u=ui(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=ai(r,a),d=Va(e,l),p=cd(Ba(i,qa(s))),f=Va(Va(Va(p,p),p),qa(-.5));return{x:()=>1===a.rank?xo(Va(Va(e,jo(xo(p,[1,1,1,a.shape[0]]),c)),l),r.shape):xo(Va(Va(e,p),l),r.shape),mean:()=>{let e=Va(Va(p,qa(-1)),d);return 1===a.rank&&(e=nl(e,u)),xo(e,a.shape)},variance:()=>{let e=Va(Va(f,h),d);return 1===a.rank&&(e=nl(e,u)),xo(e,a.shape)},scale:()=>{const t=Va(h,p);let n=Va(e,t);return 1===a.rank&&(n=nl(n,u)),xo(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=nl(t,u)),xo(t,a.shape)}}}};const dd=Mr({unsortedSegmentSum_:function(e,t,n){const s=Or(e,"x","unsortedSegmentSum"),r=Or(t,"segmentIds","unsortedSegmentSum","int32");g(v(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return $r.runKernel(rs,a,i)}}),pd={kernelName:ht,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a,batchDims:i}=n,o=S(a,s.shape)[0],l=(e,t,n)=>()=>{const s=e.shape,r=t.size,i=s.slice(0,o),l=i.length,u=s.slice(a,s.length).slice(1),c=u.length,h=fd(0,l),d=fd(l+1,l+1+c),p=gd([i,[r],u]),f=xo(n,p),g=xo(t,[r]),m=gd([[l],h,d]),b=ru(f,m);let x=dd(b,g,e.shape[o]);const y=cl(m);return x=ru(x,y),x};if(1===i){const t=s.shape[0],n=s.split(t,0);return{x:()=>{const t=Xl(n.map(((t,n)=>l(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(s.shape)},indices:()=>r}}return{x:l(s,r,e),indices:()=>r}}};function fd(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function gd(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const md={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ja(n),b:()=>ja(s)}}},bd={kernelName:gt,gradFunc:e=>({x:()=>za(e,"float32")})},xd={kernelName:xt,gradFunc:e=>({x:()=>ja(e)})},yd={kernelName:yt,gradFunc:e=>({x:()=>ja(e)})},vd={kernelName:vt,gradFunc:e=>({x:()=>ja(e)})},wd={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=Yo(s,0);return{x:()=>tu(a,e,Va(e,r))}}},kd={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ba(n,1))}}},Id={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,za(n,"float32"))}}},Cd={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=Go(s);return ai(e,Va(nl(e,r,!0),t))}}}};const Sd=Mr({localResponseNormalizationBackprop_:function(e,t,n){const s={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return $r.runKernel(At,s,r)}}),$d={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Sd(s,r,e,a,i,o,l)}}};function Nd(e,t,n,s){return t.rank<n.rank&&(t=xo(t,ol(t.shape,s))),e.rank<n.rank&&(e=xo(e,ol(e.shape,s))),{x:()=>Va(e,za(Uo(n,t),e.dtype))}}const Td={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Nd(e,t[1],a,S(r,a.shape));return{x:()=>i.x()}}},Ed={kernelName:Dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Va(e,za(Jo(n,s),"float32")),b:()=>Va(e,za(Yu(n,s),"float32"))}}};const Rd=Mr({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Or(e,"dy","maxPool3dGrad"),l=Or(t,"input","maxPool3dGrad"),u=Or(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=xo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=xo(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=xo(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),g(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),g(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),g(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),bo("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},b=$r.runKernel(Mt,f,m);return p?xo(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Ad={kernelName:Lt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Rd(e,s,r,a,i,o,l)}}};const Fd=Mr({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Or(e,"dy","maxPoolGrad"),l=Or(t,"input","maxPoolGrad"),u=Or(n,"output","maxPoolGrad");g(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),g(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),g(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),bo("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return $r.runKernel(Ot,c,h)}}),Dd={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Fd(e,s,r,a,i,o)}}},_d={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=S(r,s.shape),i=x(il(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=xo(e,t);return Ua(Va(n,Sl(s.shape,"float32")),i)}}}},Od={kernelName:Bt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Nd(e,i,a,S(r,a.shape));return{x:()=>o.x()}}},Ld={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Va(e,za(ju(n,s),"float32")),b:()=>Va(e,za(Yo(n,s),"float32"))}}},Md={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Bl(e,a,s.shape)}}},zd={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{const t=ui(n.shape,r);return t.length>0?xo(nl(e,t),n.shape):e},b:()=>{const t=Va(e,wl(qo(Ua(n,s)))),a=ui(s.shape,r);return a.length>0?xo(nl(t,a),s.shape):t}}}},Pd={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{const t=Va(e,za(s,"float32")),a=ui(n.shape,r);return a.length>0?xo(nl(t,a),n.shape):t},b:()=>{const t=Va(e,za(n,"float32")),a=ui(s.shape,r);return a.length>0?xo(nl(t,a),s.shape):t}}}},Bd={kernelName:jt,gradFunc:e=>({x:()=>wl(e)})},Wd={kernelName:Zt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Cl(n.shape,"float32")}}},Ud={kernelName:Jt,gradFunc:e=>({x:()=>ja(e)})},Vd={kernelName:Qt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return eu(e,s).map((e=>()=>e))}},Gd={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Bl(e,a,s.shape)}}},Hd={kernelName:tn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=ci(a.shape,i.shape);return{a:()=>{const t=za(i,"float32");let n=Va(e,Va(t,ri(a,ai(t,qa(1)))));const s=ui(a.shape,o);return s.length>0&&(n=nl(n,s)),xo(n,a.shape)},b:()=>{const t=Yo(a,0),n=tu(t,Qo(a),ja(a));let s=Va(e,Va(r,n));const l=ui(i.shape,o);return l.length>0&&(s=nl(s,l)),xo(s,i.shape)}}}},jd={kernelName:nn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=Yo(n,0);return{x:()=>tu(r,e,Va(e,s)),alpha:()=>{let t=tu(r,ja(e),Va(e,n));const a=ui(s.shape,e.shape);return a.length>0&&(t=nl(t,a)),xo(t,s.shape)}}}};const Kd=Mr({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:Or(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return $r.runKernel(Me,r,a)}});function qd(e,t,n){const s=e.shape.length,r=s-n.length,a=ul(n,s);let i=e;null!=a&&(i=ru(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=xo(t,s),a=Kd(e,n,!0,!1),i=Kd(e,n,!0,!0),o=Va(a,i);return Va(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=cl(a);u=ru(u,e)}return u}const Xd={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=void 0===r||null===r?s.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>qd(s,e,a)}}},Yd={kernelName:Ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{const t=Ua(e,za(s,"float32")),a=ui(n.shape,r);return a.length>0?xo(nl(t,a),n.shape):t},b:()=>{let t=Va(e,za(n,"float32"));const a=ui(s.shape,r);a.length>0&&(t=xo(nl(t,a),s.shape));const i=Ha(s);return wl(Ua(t,za(i,"float32")))}}}},Jd={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,wl(Ha(n)))}}},Zd={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Va(ju(n,6),du(n));return{x:()=>Va(e,za(s,"float32"))}}},Qd={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,za(du(n),"float32"))}}},ep={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xo(e,n.shape)}}},tp={kernelName:gn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>$r.runKernel(mn,r,n)}}},np={kernelName:pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>$r.runKernel(fn,r,n)}}},sp={kernelName:xn,gradFunc:(e,t,n)=>{const{dims:s}=n,r=S(s,e.shape);return{x:()=>Ll(e,r)}}},rp={kernelName:yn,gradFunc:e=>({x:()=>ja(e)})},ap={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wl(Ua(e,Va(ri(n,1.5),2)))}}};const ip=Mr({logicalNot_:function(e){const t={x:Or(e,"x","logicalNot","bool")};return $r.runKernel(Tt,t)}}),op={kernelName:Cn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>za(ja(n),"float32"),t:()=>Va(e,za(n,e.dtype)),e:()=>Va(e,za(ip(n),e.dtype))}}},lp={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Yo(n,qa(0)),s=qa(Ec),r=qa(Rc),a=Va(e,r),i=Va(Va(e,s),Go(za(n,"float32")));return tu(t,a,i)}}}},up={kernelName:Rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,Va(n,ai(qa(1),n)))}}},cp={kernelName:En,gradFunc:e=>({x:()=>ja(e)})};const hp=Mr({cos_:function(e){const t={x:Or(e,"x","cos","float32")};return $r.runKernel(Oe,t)}}),dp={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(hp(za(n,"float32")),e)}}};const pp=Mr({cosh_:function(e){const t={x:Or(e,"x","cosh","float32")};return $r.runKernel(Le,t)}}),fp={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(pp(za(n,"float32")),e)}}},gp={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=Yi(s,r,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Nl(e,u)}}},mp={kernelName:Ln,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=Va(e,s);return{logits:()=>ai(a,Va(nl(a,[r],true),s))}}},bp={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,Pl(n))}}};const xp=Mr({batchToSpaceND_:function(e,t,n){const s=Or(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));g(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),g(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),g(s.shape[0]%r===0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return $r.runKernel(ye,a,i)}}),yp={kernelName:_n,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>xp(e,s,r)}}},vp={kernelName:On,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>No(e,s)}}};const wp=[vh,wh,kh,Ih,Ch,Sh,$h,Nh,Th,Eh,Rh,Ah,Dh,Oh,Lh,zh,Ph,Bh,Wh,Uh,Vh,Gh,jh,Hh,qh,Yh,Zh,ed,td,nd,Yd,sd,rd,ad,id,od,ud,ld,hd,pd,md,bd,xd,yd,vd,wd,kd,Id,Cd,$d,Td,Td,Ed,Ad,Dd,_d,Od,Ld,Md,zd,Pd,Bd,Wd,Ud,Vd,Gd,Gd,Hd,jd,Xd,Jd,Zd,Qd,ep,tp,np,sp,rp,ap,op,lp,up,cp,dp,fp,gp,mp,bp,yp,yp,vp,vp,{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Va(Ga(za(n,"float32")),2))}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=qa(2);return{a:()=>Va(e,Va(r,ai(n,s))),b:()=>Va(e,Va(r,ai(s,n)))}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(e,Va(za(n,"float32"),2))}}},{kernelName:is,gradFunc:e=>({x:()=>ja(e)})},{kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(n.shape,s.shape);return{a:()=>{let t=e;const s=ui(n.shape,r);return s.length>0&&(t=nl(t,s)),xo(t,n.shape)},b:()=>{let t=e;const n=ui(s.shape,r);return n.length>0&&(t=nl(t,n)),xo(wl(t),s.shape)}}}},{kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;S(a,s.shape).forEach((e=>{r[e]=1}));const i=xo(e,r),o=Va(i,Sl(s.shape,"float32"));return{x:()=>o}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ha(hp(n)))}}},{kernelName:Jn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Va(ai(qa(1),Ha(n)),e)}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=ja(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=Ba(t,Bl(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=Ba(t,Bl(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=Ba(t,Bl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Ba(t,Bl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:ts,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=cl(r);return{x:()=>ru(e,a)}}},{kernelName:ss,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Xl(e,r)}}},{kernelName:rs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=hi(t,ja(t)),s=Xo(e,n);let r=Jo(t,qa(0,"int32"));const a=s.rank-r.rank;for(let o=0;o<a;++o)r=Ho(r,o+1);r=pl(r,Sl(s.shape,"bool"));const i=ja(s);return tu(r,s,i)}(e,n)}}},{kernelName:as,gradFunc:e=>({x:()=>ja(e)})}];for(const qL of wp)vs(qL);ir().prototype.abs=function(){return this.throwIfDisposed(),oi(this)};const kp=Mr({acos_:function(e){const t={x:Or(e,"x","acos")};return $r.runKernel(te,t)}});ir().prototype.acos=function(){return this.throwIfDisposed(),kp(this)};const Ip=Mr({acosh_:function(e){const t={x:Or(e,"x","acosh")};return $r.runKernel(ne,t)}});ir().prototype.acosh=function(){return this.throwIfDisposed(),Ip(this)},ir().prototype.add=function(e){return this.throwIfDisposed(),Ba(this,e)},ir().prototype.all=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},ir().prototype.any=function(e,t){return this.throwIfDisposed(),eo(this,e,t)},ir().prototype.argMax=function(e){return this.throwIfDisposed(),to(this,e)};const Cp=Mr({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Or(e,"x","argMin")},s={axis:t};return $r.runKernel(le,n,s)}});ir().prototype.argMin=function(e){return this.throwIfDisposed(),Cp(this,e)},ir().prototype.asScalar=function(){return this.throwIfDisposed(),g(1===this.size,(()=>"The array must have only 1 element.")),xo(this,[])},ir().prototype.asType=function(e){return this.throwIfDisposed(),za(this,e)},ir().prototype.as1D=function(){return this.throwIfDisposed(),xo(this,[this.size])},ir().prototype.as2D=function(e,t){return this.throwIfDisposed(),xo(this,[e,t])},ir().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),xo(this,[e,t,n])},ir().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),xo(this,[e,t,n,s])},ir().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),xo(this,[e,t,n,s,r])};const Sp=Mr({asin_:function(e){const t={x:Or(e,"x","asin")};return $r.runKernel(ue,t)}});ir().prototype.asin=function(){return this.throwIfDisposed(),Sp(this)};const $p=Mr({asinh_:function(e){const t={x:Or(e,"x","asinh")};return $r.runKernel(ce,t)}});ir().prototype.asinh=function(){return this.throwIfDisposed(),$p(this)};const Np=Mr({atan_:function(e){const t={x:Or(e,"x","atan")};return $r.runKernel(he,t)}});ir().prototype.atan=function(){return this.throwIfDisposed(),Np(this)};const Tp=Mr({atan2_:function(e,t){let n=Or(e,"a","atan2"),s=Or(t,"b","atan2");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(pe,r)}});ir().prototype.atan2=function(e){return this.throwIfDisposed(),Tp(this,e)};const Ep=Mr({atanh_:function(e){const t={x:Or(e,"x","atanh")};return $r.runKernel(de,t)}});ir().prototype.atanh=function(){return this.throwIfDisposed(),Ep(this)},ir().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),yo(this,e,t,n,s)},ir().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},ir().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),wo(this,e,t,n,s,r)},ir().prototype.broadcastTo=function(e){return this.throwIfDisposed(),So(this,e)},ir().prototype.cast=function(e){return this.throwIfDisposed(),za(this,e)};const Rp=Mr({ceil_:function(e){const t={x:Or(e,"x","ceil","float32")};return $r.runKernel(Ce,t)}});ir().prototype.ceil=function(){return this.throwIfDisposed(),Rp(this)},ir().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),$o(this,e,t)},ir().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ar&&(e=[e]),No([this,...e],t)},ir().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Do(this,e,t,n,s,r,a)},ir().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Oo(this,e,t,n,s,r)},ir().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Fo(this,e,t,n,s,r,a)},ir().prototype.cos=function(){return this.throwIfDisposed(),hp(this)},ir().prototype.cosh=function(){return this.throwIfDisposed(),pp(this)},ir().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Kd(this,e,t,n)},ir().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Qh(this,e,t,n)};const Ap=Mr({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const s=Or(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];g(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),g(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),g(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),g(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return $r.runKernel(We,o,l)}});ir().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ap(this,e,t)},ir().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Bo(this,e,t,n,s,r,a)};const Fp=Mr({dilation2d_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=Or(e,"x","dilation2d"),o=Or(t,"filter","dilation2d");g(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),g(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),g("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=xo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),g(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=$r.runKernel(je,c,h);return u?xo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});ir().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Fp(this,e,t,n,s,r)};const Dp=Mr({divNoNan_:function(e,t){let n=Or(e,"a","div"),s=Or(t,"b","div");[n,s]=xr(n,s);const r=Ua(n,s),a=ja(r),i=Uo(s,a);return tu(i,a,r)}});ir().prototype.divNoNan=function(e){return this.throwIfDisposed(),Dp(this,e)},ir().prototype.div=function(e){return this.throwIfDisposed(),Ua(this,e)};const _p=Mr({dot_:function(e,t){const n=Or(e,"t1","dot"),s=Or(t,"t2","dot");g((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(g(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=xo(n,[1,-1]),t=xo(s,[-1,1]),r=fl(e,t);return xo(r,[])}if(1===n.rank&&2===s.rank){const e=xo(n,[1,-1]),t=xo(s,[s.shape[0],s.shape[1]]),r=fl(e,t);return xo(r,[r.size])}if(2===n.rank&&1===s.rank){const e=xo(s,[-1,1]),t=fl(n,e);return xo(t,[t.size])}{const e=xo(s,[s.shape[0],s.shape[1]]);return fl(n,e)}}});ir().prototype.dot=function(e){return this.throwIfDisposed(),_p(this,e)},ir().prototype.elu=function(){return this.throwIfDisposed(),Wo(this)},ir().prototype.equal=function(e){return this.throwIfDisposed(),Uo(this,e)},ir().prototype.erf=function(){return this.throwIfDisposed(),Vo(this)};const Op=Mr({euclideanNorm_:function(e){return Qu(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});ir().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Op(this,e,t)},ir().prototype.exp=function(){return this.throwIfDisposed(),Go(this)},ir().prototype.expandDims=function(e){return this.throwIfDisposed(),Ho(this,e)};const Lp=Mr({expm1_:function(e){const t={x:Or(e,"x","expm1")};return $r.runKernel(rt,t)}});ir().prototype.expm1=function(){return this.throwIfDisposed(),Lp(this)},ir().prototype.fft=function(){return this.throwIfDisposed(),iu(this)},ir().prototype.flatten=function(){return this.throwIfDisposed(),xo(this,[this.size])},ir().prototype.floor=function(){return this.throwIfDisposed(),qo(this)},ir().prototype.floorDiv=function(e){return this.throwIfDisposed(),Wa(this,e)},ir().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Xo(this,e,t,n)},ir().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Jo(this,e)},ir().prototype.greater=function(e){return this.throwIfDisposed(),Yo(this,e)},ir().prototype.ifft=function(){return this.throwIfDisposed(),lu(this)},ir().prototype.irfft=function(){return this.throwIfDisposed(),uu(this)};const Mp=Mr({isFinite_:function(e){const t={x:Or(e,"x","isFinite")};return $r.runKernel(xt,t)}});ir().prototype.isFinite=function(){return this.throwIfDisposed(),Mp(this)};const zp=Mr({isInf_:function(e){const t={x:Or(e,"x","isInf")};return $r.runKernel(yt,t)}});ir().prototype.isInf=function(){return this.throwIfDisposed(),zp(this)};const Pp=Mr({isNaN_:function(e){const t={x:Or(e,"x","isNaN")};return $r.runKernel(vt,t)}});ir().prototype.isNaN=function(){return this.throwIfDisposed(),Pp(this)},ir().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Zo(this,e)},ir().prototype.lessEqual=function(e){return this.throwIfDisposed(),ju(this,e)},ir().prototype.less=function(e){return this.throwIfDisposed(),Yu(this,e)};const Bp=Mr({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const a=Or(e,"x","localResponseNormalization");g(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),g(v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=xo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=$r.runKernel(Rt,l,u);return o?xo(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});ir().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Bp(this,e,t,n,s)};const Wp=Mr({logSigmoid_:function(e){const t=Or(e,"x","logSigmoid");return Ka((e=>({value:wl(jl(wl(e))),gradFunc:t=>Va(t,Pl(wl(e)))})))(t)}});ir().prototype.logSigmoid=function(){return this.throwIfDisposed(),Wp(this)},ir().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sl(this,e)},ir().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),dl(this,e,t)},ir().prototype.log=function(){return this.throwIfDisposed(),Qo(this)},ir().prototype.log1p=function(){return this.throwIfDisposed(),el(this)},ir().prototype.logicalAnd=function(e){return this.throwIfDisposed(),pl(this,e)},ir().prototype.logicalNot=function(){return this.throwIfDisposed(),ip(this)};const Up=Mr({logicalOr_:function(e,t){const n=Or(e,"a","logicalOr","bool"),s=Or(t,"b","logicalOr","bool");ci(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Et,r)}});ir().prototype.logicalOr=function(e){return this.throwIfDisposed(),Up(this,e)};const Vp=Mr({logicalXor_:function(e,t){const n=Or(e,"a","logicalXor","bool"),s=Or(t,"b","logicalXor","bool");return ci(n.shape,s.shape),pl(Up(e,t),ip(pl(e,t)))}});ir().prototype.logicalXor=function(e){return this.throwIfDisposed(),Vp(this,e)},ir().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),fl(this,e,t,n)},ir().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),gl(this,e,t,n,s)},ir().prototype.max=function(e,t){return this.throwIfDisposed(),tl(this,e,t)},ir().prototype.maximum=function(e){return this.throwIfDisposed(),hi(this,e)},ir().prototype.mean=function(e,t){return this.throwIfDisposed(),bl(this,e,t)},ir().prototype.min=function(e,t){return this.throwIfDisposed(),xl(this,e,t)},ir().prototype.minimum=function(e){return this.throwIfDisposed(),yl(this,e)};const Gp=Mr({mirrorPad_:function(e,t,n){g("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Or(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");g(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let o=0;o<s.rank;o++)g(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),g(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return $r.runKernel(Ut,i,a)}});ir().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Gp(this,e,t)};const Hp=Mr({mod_:function(e,t){let n=Or(e,"a","mod"),s=Or(t,"b","mod");[n,s]=xr(n,s);const r={a:n,b:s};return $r.runKernel(Vt,r)}});ir().prototype.mod=function(e){return this.throwIfDisposed(),Hp(this,e)},ir().prototype.mul=function(e){return this.throwIfDisposed(),Va(this,e)},ir().prototype.neg=function(){return this.throwIfDisposed(),wl(this)},ir().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Qu(this,e,t,n)},ir().prototype.notEqual=function(e){return this.throwIfDisposed(),kl(this,e)},ir().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Il(this,e,t,n)},ir().prototype.onesLike=function(){return this.throwIfDisposed(),$l(this)},ir().prototype.pad=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)};const jp=Mr({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=Or(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=xo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(fo(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=so(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),s=n.map((e=>e-1)),r=s.map((e=>Math.floor(e/2))),a=s.map(((e,t)=>e-r[t]));return s.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[s[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],h,d),b=p?s:"valid",x=p?l:Mh(l,h,f),y=("avg"===n?()=>yo(x,t,a,b,i):()=>gl(x,t,a,b,i))(),v=p?y:xp(y,h,m);return u?xo(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});ir().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),jp(this,e,t,n,s,r,a)},ir().prototype.pow=function(e){return this.throwIfDisposed(),ri(this,e)},ir().prototype.prelu=function(e){return this.throwIfDisposed(),Tl(this,e)};const Kp=Mr({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=Or(e,"x","prod");"bool"===s.dtype&&(s=za(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return $r.runKernel(sn,r,a)}});ir().prototype.prod=function(e,t){return this.throwIfDisposed(),Kp(this,e,t)};const qp=Mr({reciprocal_:function(e){const t={x:Or(e,"x","reciprocal")};return $r.runKernel(cn,t)}});ir().prototype.reciprocal=function(){return this.throwIfDisposed(),qp(this)},ir().prototype.relu=function(){return this.throwIfDisposed(),Ol(this)},ir().prototype.relu6=function(){return this.throwIfDisposed(),hu(this)},ir().prototype.reshapeAs=function(e){return this.throwIfDisposed(),xo(this,e.shape)},ir().prototype.reshape=function(e){return this.throwIfDisposed(),xo(this,e)},ir().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Vu(this,e,t,n)},ir().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Gu(this,e,t,n)},ir().prototype.reverse=function(e){return this.throwIfDisposed(),Ll(this,e)},ir().prototype.rfft=function(){return this.throwIfDisposed(),ou(this)},ir().prototype.round=function(){return this.throwIfDisposed(),Ku(this)},ir().prototype.rsqrt=function(){return this.throwIfDisposed(),cd(this)},ir().prototype.selu=function(){return this.throwIfDisposed(),Ml(this)},ir().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),zl(this,e,t,n,s,r,a)},ir().prototype.sigmoid=function(){return this.throwIfDisposed(),Pl(this)};const Xp=Mr({sign_:function(e){const t={x:Or(e,"x","sign")};return $r.runKernel(En,t)}});ir().prototype.sign=function(){return this.throwIfDisposed(),Xp(this)},ir().prototype.sin=function(){return this.throwIfDisposed(),Xh(this)},ir().prototype.sinh=function(){return this.throwIfDisposed(),Jh(this)},ir().prototype.slice=function(e,t){return this.throwIfDisposed(),Bl(this,e,t)},ir().prototype.softmax=function(e){return this.throwIfDisposed(),Hl(this,e)},ir().prototype.softplus=function(){return this.throwIfDisposed(),jl(this)},ir().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)},ir().prototype.split=function(e,t){return this.throwIfDisposed(),Kl(this,e,t)},ir().prototype.sqrt=function(){return this.throwIfDisposed(),Ga(this)},ir().prototype.square=function(){return this.throwIfDisposed(),Ha(this)},ir().prototype.squaredDifference=function(e){return this.throwIfDisposed(),rc(this,e)},ir().prototype.squeeze=function(e){return this.throwIfDisposed(),ql(this,e)},ir().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ar?[this,e]:[this,...e];return Xl(n,t)},ir().prototype.step=function(e){return this.throwIfDisposed(),du(this,e)};const Yp=Mr({stridedSlice_:function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:Or(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return $r.runKernel(Hn,u,c)}});ir().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Yp(this,e,t,n,s,r,a,i,o)},ir().prototype.sub=function(e){return this.throwIfDisposed(),ai(this,e)},ir().prototype.sum=function(e,t){return this.throwIfDisposed(),nl(this,e,t)};const Jp=Mr({tan_:function(e){const t={x:Or(e,"x","tan","float32")};return $r.runKernel(Yn,t)}});ir().prototype.tan=function(){return this.throwIfDisposed(),Jp(this)},ir().prototype.tanh=function(){return this.throwIfDisposed(),Yl(this)},ir().prototype.tile=function(e){return this.throwIfDisposed(),jo(this,e)},ir().prototype.toBool=function(){return this.throwIfDisposed(),za(this,"bool")},ir().prototype.toFloat=function(){return this.throwIfDisposed(),za(this,"float32")},ir().prototype.toInt=function(){return this.throwIfDisposed(),za(this,"int32")};const Zp=Mr({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=Or(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=$r.runKernel(Qn,a,i);return{values:o,indices:l}}});ir().prototype.topk=function(e,t){return this.throwIfDisposed(),Zp(this,e,t)},ir().prototype.transpose=function(e){return this.throwIfDisposed(),ru(this,e)};const Qp=Mr({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Or(e,"x","unique","string_or_numeric");g(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=$r.runKernel(ns,s,r);return{values:a,indices:i}}});ir().prototype.unique=function(e){return this.throwIfDisposed(),Qp(this,e)},ir().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),dd(this,e,t)},ir().prototype.unstack=function(e){return this.throwIfDisposed(),eu(this,e)},ir().prototype.where=function(e,t){return this.throwIfDisposed(),tu(e,this,t)},ir().prototype.zerosLike=function(){return this.throwIfDisposed(),ja(this)};class ef extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ef.prototype)}}class tf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tf.prototype)}}class nf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nf.prototype)}}class sf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sf.prototype)}}class rf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rf.prototype)}}Error;class af{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function of(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function lf(e,t){if(!e)throw new rf(t)}function uf(e,t){let n=0;for(const s of e)s===t&&n++;return n}function cf(e){return 1===e.length?e[0]:e}function hf(e){return Array.isArray(e)?e:[e]}function df(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ff={};function gf(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function mf(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>mf(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?mf(t):e[n]=t.value)}}}function bf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in ff)a=ff[r];else if(a=t[r],null==a)throw new nf(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new nf(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in ff?[o,l]=ff.className:i in t&&([o,l]=t[i]),null==o)throw new nf(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(ff))e[n]=ff[n];for(const r of Object.keys(n))e[r]=n[r];a.config.customObjects=e;const t=Object.assign({},ff);for(const r of Object.keys(n))ff[r]=n[r];mf(a.config);const s=l(o,a.config,n,r);return ff=Object.assign({},t),s}{const e=Object.assign({},ff);for(const s of Object.keys(n))ff[s]=n[s];const t=new o(a.config);return ff=Object.assign({},e),t}}}function xf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function yf(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function vf(e){if(null==e)throw new nf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function wf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new nf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function kf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return lf(n>=0),lf(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function If(e,t){Array.isArray(e)?(g(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>If(e,`element ${n+1} of ${t}`)))):g(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Cf(e)}.`))}function Cf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Cf(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Sf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let $f=0;function Nf(){return $f++}const Tf={};function Ef(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Tf||(Tf[e]=0),Tf[e]+=1,e+Tf[e].toString()}const Rf=["channelsFirst","channelsLast"],Af=["nearest","bilinear"],Ff=["valid","same","causal"],Df=["max","avg"],_f=["sum","mul","concat","ave"],Of=new Map;function Lf(e){wf(Rf,"DataFormat",e)}function Mf(e){wf(Ff,"PaddingMode",e)}function zf(e){wf(Df,"PoolMode",e)}const Pf=[],Bf="/";function Wf(e,t){Pf.push(e);try{const e=t();return Pf.pop(),e}catch(n){throw Pf.pop(),n}}function Uf(e){if(!Hf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Pf.length?"":Pf.join(Bf)+Bf)+e}function Vf(e){if(!Hf(e))throw new Error("Not a valid tensor name: '"+e+"'");Of.has(e)||Of.set(e,0);const t=Of.get(e);if(Of.set(e,Of.get(e)+1),t>0){const n=`${e}_${t}`;return Of.set(n,1),n}return e}const Gf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Hf(e){return!!e.match(Gf)}function jf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Kf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function qf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Xf(e,t){if(t<e)throw new nf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Yf;function Jf(){return null==Yf&&(Yf=Xr().epsilon()),Yf}function Zf(e,t){return za(e,t)}function Qf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),xo(e,n)}function eg(e,t,n){return Hr((()=>{switch(e.rank){case 1:return Wl(e,t,n);case 2:return Ul(e,[t,0],[n,e.shape[1]]);case 3:return Vl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Gl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Bl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Bl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new nf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function tg(e,t,n){return Hr((()=>{switch(e.rank){case 1:return Wl(e,t,n);case 2:return Ul(e,[0,t],[e.shape[0],n]);case 3:return Vl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Gl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new nf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ng(e,t,n,s){return Hr((()=>{switch(e.rank){case 1:return Wl(e,t,n);case 2:switch(s){case 1:return eg(e,t,n);case 2:return tg(e,t,n);default:throw new nf(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return eg(e,t,n);case 2:return Vl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return tg(e,t,n);default:throw new nf(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return eg(e,t,n);case 2:return Gl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Gl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return tg(e,t,n);default:throw new nf(`The axis is not within the rank of the tensor ${s}`)}default:throw new nf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sg(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),No(e,n)}function rg(e,t){switch(e.rank){case 1:return To([e,t]);case 2:return Eo([e,t],0);case 3:return Ro([e,t],0);case 4:return Ao([e,t],0);default:throw new nf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ag(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new nf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return jo(e,t)}function ig(e){return Fl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function og(e,t,n,s){if(e.rank<2||t.rank<2)throw new sf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new sf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return vu({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?cg(e.rank,s,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),a=r.pop();e=xo(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=xo(ru(t,c),[l,-1]);const h=[...r,...u];return xo(vu({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?cg(e.rank,s,"channelsLast"):null,activation:n}),h)}}function lg(e,t,n){return Hr((()=>(t=Array.isArray(t)?Jl(t,"int32"):za(t,"int32"),Xo(e,t,n))))}function ug(e){return Va(e,e)}function cg(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new nf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?xo(t,[1,s[0],1,1,1]):xo(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?xo(t,[1,1,1,1,s[0]]):xo(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?xo(t,[1,s[0],1,1]):xo(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?xo(t,[1,1,1,s[0]]):xo(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?xo(t,[1,s[0],1]):xo(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?xo(t,[1,1,s[0]]):xo(t,[1].concat(s))}else if(e<3)return t;throw new nf(`Unsupported input rank by biasAdd: ${t.rank}`)}function hg(e,t,n){return Hr((()=>(null==n&&(n="channelsLast"),Lf(n),Ba(e,cg(e.rank,t,n)))))}function dg(e,t,n,s){return Hr((()=>au(e,t,n,s)))}function pg(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const fg=["fanIn","fanOut","fanAvg"],gg=["normal","uniform","truncatedNormal"];class mg extends Ja{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class bg extends mg{apply(e,t){return Cl(e,t)}}bg.className="Zeros",Qa(bg);class xg extends mg{apply(e,t){return Sl(e,t)}}xg.className="Ones",Qa(xg);class yg extends mg{constructor(e){if(super(),"object"!==typeof e)throw new nf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new nf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Hr((()=>Va(qa(this.value),Sl(e,t))))}getConfig(){return{value:this.value}}}yg.className="Constant",Qa(yg);class vg extends mg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Dl(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}vg.className="RandomUniform",Qa(vg);class wg extends mg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sf(`randomNormal does not support dType ${t}.`);return ig(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}wg.className="RandomNormal",Qa(wg);class kg extends mg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sf(`truncatedNormal does not support dType ${t}.`);return Ql(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}kg.className="TruncatedNormal",Qa(kg);class Ig extends mg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Hr((()=>{if(2!==e.length||e[0]!==e[1])throw new nf("Identity matrix initializer can only be used for 2D square matrices.");return Va(this.gain,Ko(e[0]))}))}getConfig(){return{gain:this.gain}}}Ig.className="Identity",Qa(Ig);class Cg extends mg{constructor(e){if(super(),e.scale<0)throw new nf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,wf(fg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){wf(gg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Lf(s),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===s){const s=jf(e,2);t=e[1]*s,n=e[0]*s}else if("channelsLast"===s){const s=jf(e,0,e.length-2);t=e[e.length-2]*s,n=e[e.length-1]*s}}else{const s=jf(e);t=Math.sqrt(s),n=Math.sqrt(s)}return[t,n]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sf(`${this.getClassName()} does not support dType ${t}.`);return Ql(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Dl(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Cg.className="VarianceScaling",Qa(Cg);class Sg extends Cg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}Sg.className="GlorotUniform",Qa(Sg);class $g extends Cg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}$g.className="GlorotNormal",Qa($g);class Ng extends Cg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}Ng.className="HeNormal",Qa(Ng);class Tg extends Cg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}Tg.className="HeUniform",Qa(Tg);class Eg extends Cg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}Eg.className="LeCunNormal",Qa(Eg);class Rg extends Cg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cg.className}}Rg.className="LeCunUniform",Qa(Rg);class Ag extends mg{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Hr((()=>{if(e.length<2)throw new sf("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=x(e.slice(0,-1)),s=e[e.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const a=ig([Math.max(s,n),Math.min(s,n)],0,1,t,this.seed),i=ic.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return o=Va(o,l.sign()),n<s&&(o=o.transpose()),Va(qa(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ag.className="Orthogonal",Qa(Ag);const Fg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return bf(e,Za.getMap().classNameMap,t,"initializer")}function _g(e){return gf(e)}function Og(e){if("string"===typeof e){const t=e in Fg?Fg[e]:e;if("GlorotNormal"===t)return new $g;if("GlorotUniform"===t)return new Sg;if("HeNormal"===t)return new Ng;if("HeUniform"===t)return new Tg;if("LeCunNormal"===t)return new Eg;if("LeCunUniform"===t)return new Rg;{const e={};return e.className=t,e.config={},Dg(e)}}return e instanceof mg?e:Dg(e)}function Lg(e){return Array.isArray(e)&&Array.isArray(e[0])}function Mg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function zg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new nf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Pg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new nf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Bg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Wg="Variable";class Ug{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Wg,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Nf(),n=null==n?Wg:n,this.originalName=Uf(n),this.name=Vf(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;return $r.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Vg(e){return e.map((e=>e.read()))}function Gg(e){e.forEach((e=>{e[0].write(e[1])}))}class Hg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class jg{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Nf(),null!=a&&(this.originalName=Uf(a),this.name=Vf(this.originalName)),this.rank=t.length}}let Kg=0;class qg{constructor(e,t){this.callArgs=t,this.id=Kg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Xg=0;class Yg extends Ja{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Xg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=df(e)+"_"+Ef(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new tf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new nf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return cf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ef(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ef(`Layer ${this.name} is not connected, no input to return.`);return cf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ef(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ef(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=hf(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=hf(this.inputSpec);if(t.length!==n.length)throw new nf(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const e=t[s],r=n[s];if(null==r)continue;const a=e.rank;if(null!=r.ndim&&a!==r.ndim)throw new nf(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new nf(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new nf(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&e.dtype!==r.dtype)throw new nf(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${e.dtype}.`);if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),a=r.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=a&&-1===[a,null].indexOf(i))throw new nf(`Input ${s} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],a=e.shape[t];if(null!=n&&null!=a&&n!==a)throw new nf(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=hf(e),s=function(e){let t=!0;for(const n of hf(e))if(!(n instanceof jg)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of hf(e))if(n instanceof jg){t=!1;break}return t}(e);if(s===r)throw new nf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Wf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of hf(e))t.push(n.shape);this.build(cf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);const r=hf(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=cf(a),null!=this.activityRegularizer)throw new sf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=hf(e);const t=[];for(const n of e)t.push(n.shape);return cf(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new jg(a,n,this,hf(e),t,this.name,s))):new jg(a,s,this,hf(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new sf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ef(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ef(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new tf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Bg(this.weights)}build(e){this.built=!0}getWeights(){return Vg(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Hr((()=>{const t=this.weights;if(t.length!==e.length)throw new nf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Vg(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!y(a.shape,o.shape))throw new nf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Gg(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new nf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Og("zeros"));const l=s.apply(t,n),u=new Ug(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=hf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const s=this.computeMask(e,n),r=hf(t),a=hf(s);if(r.length!==a.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let i=0;i<r.length;i++)r[i].kerasMask=a[i]}addInboundNode(e,t,n,s,r,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=hf(e);t=hf(t),n=hf(n),s=hf(s),r=Mg(r),a=Mg(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new qg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Jg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Jg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Zg extends Yg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ef("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new nf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new nf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new nf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new jg(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new nf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Zg.className="InputLayer",Qa(Zg);class Qg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Qg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new nf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return za(t,e.dtype)}catch(KL){throw new nf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof jg){if(null==this.id2Value[e.id])throw new nf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new nf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof jg){if(null==this.id2Value[e.id])throw new nf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new nf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&jr(this.id2Mask)}}const em=new af,tm=new af;function nm(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=em.get(c);if(null==d){const e=function(e,t){g(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=rm(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=rm(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:sm(s)}}(i,t);d=e.sorted,h=e.recipientCounts,em.put(c,d),tm.put(c,h)}h={},r||Object.assign(h,tm.get(c));const p=new Qg(t);for(let f=0;f<d.length;++f){if(null!=s){const e=Gr().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[f],a=e.sourceLayer;if(a instanceof Zg)continue;const i=[],u=[],c=[];let g=!1;for(const n of e.inputs){const e=p.getValue(n),s=p.getMask(n);i.push(e),u.push(s),null!=s&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}g&&((n=n||{}).mask=u[0]);const m=hf(a.apply(i,n));let b=null;a.supportsMasking&&(b=a.computeMask(i,u));const x=am(e),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){p.hasKey(y[t])||p.add(y[t],m[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=m[t])}r||jr(c)}return p.disposeMasks(),a?l:l[0]}function sm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function rm(e,t){const n=new Set,s=[],r={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function am(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function im(e,t){return Hr((()=>Ga(nl(Va(e,e),t,!0))))}X().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=em&&em.setMaxEntries(e),null!=tm&&tm.setMaxEntries(e)}));class om extends Ja{getConfig(){return{}}}class lm extends om{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Hr((()=>{const t=im(e,this.axis),n=$o(t,0,this.maxValue);return Va(e,Ua(n,Ba(Jf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lm.className="MaxNorm",Qa(lm);class um extends om{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Hr((()=>Ua(e,Ba(Jf(),im(e,this.axis)))))}getConfig(){return{axis:this.axis}}}um.className="UnitNorm",Qa(um);class cm extends om{apply(e){return Ol(e)}}cm.className="NonNeg",Qa(cm);class hm extends om{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Hr((()=>{const t=im(e,this.axis),n=Ba(Va(this.rate,$o(t,this.minValue,this.maxValue)),Va(1-this.rate,t));return Va(e,Ua(n,Ba(Jf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}hm.className="MinMaxNorm",Qa(hm);const dm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function pm(e){return gf(e)}function fm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return bf(e,Za.getMap().classNameMap,t,"constraint")}function gm(e){if(null==e)return null;if("string"===typeof e){return fm({className:e in dm?dm[e]:e,config:{}})}return e instanceof om?e:fm(e)}async function mm(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];jr(s)}}function bm(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var xm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(xm||(xm={}));class ym{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class vm{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class wm extends ym{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const s in t){const e=t[s];if("number"===typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const r=Hr((()=>Ba(this.totals[s],Va(e,n))));this.totals[s]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Hr((()=>{const e=Va(Ua(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Kr(t[n])})))}}class km extends ym{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!==typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const s=await Promise.all(e);for(let r=0;r<s.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}}}class Im extends ym{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||uc,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");F(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Ps();return function(){const a=null!=n?n():Ps();return a-r<t||(r=a,s=e(...arguments)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await mm(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await mm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await mm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await mm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await mm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):F(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await mm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await mm(e),await this.trainEnd(e))}}function Cm(e,t){if(null==e&&(e={}),e instanceof ym)return[e];if(Array.isArray(e)&&e[0]instanceof ym)return e;return hf(e).map((e=>new Im(e,t)))}class Sm{constructor(){}static registerCallbackConstructor(e,t){g(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Sm.checkForDuplicate(t),null==Sm.constructors[e]&&(Sm.constructors[e]=[]),Sm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Sm.constructors){Sm.constructors[+t].forEach((t=>{if(t===e)throw new nf("Duplicate callback constructor.")}))}}static clear(){Sm.constructors={}}static createCallbacks(e){const t=[];for(const n in Sm.constructors){const s=+n;e>=s&&t.push(...Sm.constructors[s])}return t.map((e=>new e))}}function $m(e,t,n,s,r,a,i,o,l){const u=new km,c=[new wm,...Sm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new vm(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Nm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bf(e,Za.getMap().classNameMap,t,"layer",n)}function Tm(e,t){return Hr((()=>{"float32"!==e.dtype&&(e=za(e,"float32"));const n=nl(ug(e),t,!0),s=ni(n.shape,Jf()),r=Ga(hi(n,s));return Ua(e,r)}))}function Em(e,t){return Hr((()=>bl(ug(ai(t,e)),-1)))}function Rm(e,t){return Hr((()=>bl(oi(ai(t,e)),-1)))}function Am(e,t){return Hr((()=>{const n=ai(e,t),s=$o(oi(e),Jf(),Number.MAX_VALUE),r=oi(Ua(n,s));return Va(100,bl(r,-1))}))}function Fm(e,t){return Hr((()=>{const n=$o(t,Jf(),Number.MAX_VALUE),s=Qo(Ba(1,n)),r=$o(e,Jf(),Number.MAX_VALUE),a=Qo(Ba(1,r));return bl(ug(ai(s,a)),-1)}))}function Dm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Hr((()=>{if(n)t=Hl(t);else{const e=nl(t,t.shape.length-1,!0);t=Ua(t,e)}return t=$o(t,Jf(),1-Jf()),wl(nl(Va(za(e,"float32"),Qo(t)),t.shape.length-1))}))}function _m(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Hr((()=>{const s=za(qo(function(e){const t=[jf(e.shape)];return xo(e,t)}(e)),"int32"),r=(t=$o(t,Jf(),1-Jf())).shape;return Dm(xo(Il(s,r[r.length-1]),r),t,n)}))}function Om(e,t){return Hr((()=>{let n;return n=$o(t,Jf(),1-Jf()),n=Qo(Ua(n,ai(1,n))),bl(function(e,t){if(!y(e.shape,t.shape))throw new nf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Hr((()=>{const n=Ol(t),s=wl(oi(t));return Ba(ai(n,Va(t,e)),el(Go(s)))}))}(e,n),-1)}))}function Lm(e,t){return Hr((()=>{const n=$o(e,Jf(),1),s=$o(t,Jf(),1);return nl(Va(e,Qo(Ua(n,s))),-1)}))}function Mm(e,t){return Hr((()=>{const n=Tm(e,-1),s=Tm(t,-1),r=Va(n,s);return wl(nl(r,-1))}))}Sm.constructors={};const zm={meanSquaredError:Em,meanAbsoluteError:Rm,meanAbsolutePercentageError:Am,meanSquaredLogarithmicError:Fm,squaredHinge:function(e,t){return Hr((()=>{const n=hi(0,ai(1,Va(e,t)));return bl(ug(n),-1)}))},hinge:function(e,t){return Hr((()=>{const n=hi(0,ai(1,Va(e,t)));return bl(n,-1)}))},categoricalHinge:function(e,t){return Hr((()=>{const n=nl(Va(e,t),-1),s=tl(Va(ai(1,e),t),-1);return hi(0,Ba(1,ai(s,n)))}))},logcosh:function(e,t){return Hr((()=>{const n=Math.log(2),s=ai(t,e),r=ai(Ba(s,jl(Va(-2,s))),n);return bl(r,-1)}))},categoricalCrossentropy:Dm,sparseCategoricalCrossentropy:_m,binaryCrossentropy:Om,kullbackLeiblerDivergence:Lm,poisson:function(e,t){return Hr((()=>{const n=Qo(Ba(Jf(),t));return bl(ai(t,Va(e,n)),-1)}))},cosineProximity:Mm};function Pm(e){if("string"===typeof e){if(e in zm)return zm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new nf(t)}return e}function Bm(e,t){return Hr((()=>{const n=Va(.5,$l(t)),s=Zf(Yo(t,n),e.dtype);return bl(Uo(e,s),-1)}))}function Wm(e,t){return Hr((()=>Zf(Uo(to(e,-1),to(t,-1)),"float32")))}function Um(e,t){return Hr((()=>za(nl(pl(Uo(e,1),Uo(t,1))),"float32")))}function Vm(e,t){return Om(e,t)}function Gm(e,t){return e.rank===t.rank&&(e=ql(e,[e.rank-1])),(t=to(t,-1)).dtype!==e.dtype&&(t=za(t,e.dtype)),za(Uo(e,t),"float32")}const Hm=Dm,jm=_m,Km={binaryAccuracy:Bm,categoricalAccuracy:Wm,precision:function(e,t){return Hr((()=>{const n=Um(e,t),s=function(e,t){return Hr((()=>za(nl(pl(Uo(e,0),Uo(t,1))),"float32")))}(e,t),r=Ba(n,s);return za(tu(Yo(r,0),Ua(n,r),0),"float32")}))},categoricalCrossentropy:Hm,sparseCategoricalCrossentropy:jm,mse:Em,MSE:Em,mae:Rm,MAE:Rm,mape:Am,MAPE:Am,cosine:Mm};function qm(e){if("string"===typeof e&&e in Km)return Km[e];if("string"!==typeof e&&null!=e)return e;throw new nf(`Unknown metric ${e}`)}function Xm(e){if(lf(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(zm))if(zm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Km))if(Km[n]===e){t=n;break}return void 0!==t?t:e.name}}const Ym=1048576;function Jm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Zm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Ym&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Zm(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Zm(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Zm(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Qm(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),eb(a,n,s),s("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?tb(o[c],n,s):nb(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?Bg(e.collectedTrainableWeights):Bg(e.trainableWeights);return t}(e),u=Bg(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function eb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function tb(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(KL){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(KL){s="multiple"}eb([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function nb(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(KL){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(KL){r="multiple"}const i=[];for(const c of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let e=0;e<c.inboundLayers.length;++e){const t=c.inboundLayers[e].name,n=c.nodeIndices[e],s=c.tensorIndices[e];i.push(`${t}[${n}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];eb([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let c=1;c<i.length;++c)eb(["","","","",i[c]],t,s)}function sb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function rb(e,t){if(null===e)return null;if("string"===typeof e)return pf(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];sb(t,r,s)?n.push(s):n.push(rb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=pf(n);t[e]=rb(s,e)}}return t}}function ab(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return df(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];sb(t,r,s)?n.push(s):n.push(ab(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=df(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof s?ab(s,n):s}return t}}const ib="4.20.0";class ob extends Yg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ef(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],yf(this.inputs).length!==this.inputs.length)throw new nf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);yf(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;lf(0===t,"input layer has >1 nodes"),lf(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof Zg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new tf(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(ob.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++){const e=u.inputTensors[a],s=u.inboundLayers[a],r=u.nodeIndices[a],i=u.tensorIndices[a];o(e,t,n,s,r,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=i.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const a=null==s[b.outboundLayer.id]?0:s[b.outboundLayer.id];e=Math.max(e,a),s[b.outboundLayer.id]=e,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let s=0;s<b.inboundLayers.length;s++){const r=b.inboundLayers[s],a=b.nodeIndices[s],i=r.inboundNodes[a],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const h={};for(const b in t){const e=t[b];e in h||(h[e]=[]),h[e].push(n[b])}const d={};for(const b in s){const e=s[b];e in d||(d[e]=[]),d[e].push(r[b])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(xf);this.layers=[];for(const b of p){const e=d[b];e.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof ob&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(xf);const f=this.inputs.slice(),g=[];for(const b of p)for(const e of h[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new tf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const b of m){const e=m.filter((e=>e===b)).length;if(1!==e)throw new tf(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new nf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let s=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const a=r?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[a])throw new nf(`Duplicate weight name: ${a}`);n[a]=t,s++}const a=[];for(const i in e){let s=i;if(null==n[i]){const e=i.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[i]]);else if(t)throw new nf(`Provided weight data has no target variable: ${i}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new nf(`${e.length} of ${s} weights are not set: ${e}`)}Gg(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),s=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!s.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ib}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=ab(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Hr((()=>{e=hf(e);const n=new Qg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return nm(this.outputs,n,t)}))}computeMask(e,t){return Hr((()=>{let n;return e=hf(e),n=null==t?of(null,e.length):hf(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Mg(e);if(t.length!==this.inputLayers.length)throw new nf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],s=t[i];n[e.name+"_0_0"]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xf);if(s.length>1)for(const i of s){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],r=t.nodeIndices[i],a=t.tensorIndices[i],o=n[`${e.name}_${r}_${a}`];s.push(o)}const r=Mg(e.computeOutputShape(cf(s))),a=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n[`${e.name}_${a}_${t}`]=r[t]}}}const r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],s=`${e.name}_${t}_${n}`;a.push(s)}for(let i=0;i<a.length;i++){const e=a[i];lf(e in n),r.push(n[e])}return cf(r)}runInternalGraph(e,t){null==t&&(t=of(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const s=this.inputs[o],r=e[o],a=t[o];n[s.id]=[r,a]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xf);for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,a=new Array;for(const t of s)t.id in n&&a.push(n[t.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=hf(e.call(t,u)),l=hf(e.computeMask(t,n)),s=[t],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=hf(e.call(s,u)),l=hf(e.computeMask(s,i));if(e.activityRegularizer)throw new sf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const o of this.outputs){lf(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),r.push(e),a.push(t)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof ob?1:0;for(let e=0;e<s.inboundNodes.length;e++){const r=ob.nodeKey(s,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new nf("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new nf(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new nf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Hr((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=ob.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),s=a.getConfig(),r=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],s=ob.nodeKey(a,n);let i={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(KL){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],a=e.nodeIndices[s],o=e.tensorIndices[s];let l=t[ob.nodeKey(r,a)];null==l&&(l=0),n.push([r.name,l,o,i])}r.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=s,i.inboundNodes=r,n.push(i)}e.layers=n;const s=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=this.inputLayersNodeIndices[a],r=ob.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let i=t[r];null!==i&&void 0!==i||(i=0);const o=this.inputLayersTensorIndices[a];s.push([e.name,i,o])}e.inputLayers=s;const r=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=this.outputLayersNodeIndices[a],s=ob.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let i=t[s];null!==i&&void 0!==i||(i=0);const o=this.outputLayersTensorIndices[a];r.push([e.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={},r={};function a(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function i(e,t){const n=[];let r;for(const i of t){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(cf(n),r)}function o(e){const r=e.name,i=Nm(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),s[r]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new nf(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!vf(r);)for(const e of u){const t=s[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)i(t,n)}}const c=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];lf(e in s);const r=s[e].inboundNodes[t].outputTensors;c.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];lf(e in s);const r=s[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:c,outputs:h,name:l})}get stateful(){if(this._stateful)throw new nf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Hr((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function lb(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function ub(e,t){return lb(e,t,"classWeight")}async function cb(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Hr((()=>{if(1===e.shape.length)return Pa(e);if(2===e.shape.length){if(e.shape[1]>1){return to(e,1)}if(1===e.shape[1])return xo(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());jr(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Jl(r,"float32")}return null}function hb(e,t){return Va(e,t)}function db(e,t){let n,s;const r=t;n=r.xs,s=r.ys,g(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=pb("input",e.inputNames,n),i=pb("output",e.outputNames,s),o=a[0].shape[0];g(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),g(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<a.length;l++)g(a[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)g(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function pb(e,t,n){if(n instanceof ar)return[n];if(Array.isArray(n))return g(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new nf(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}async function fb(e,t,n){const s=null!=n.batchesPerEpoch;if(g(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),g(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),g(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),g(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),g(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(gb(n.validationData))g(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new sf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Cm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=$m(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=db(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=ub(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await cb(r[e],null,t[e]))}const u=s.concat(r).concat(i),p=o(u);jr(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,Kr(n)}await d.onBatchEnd(h,a),bm(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=gb(n.validationData)?hf(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):hf(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function gb(e){return"function"===typeof e.iterator}function mb(e){g(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function bb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>eg(e,t,n-t))):eg(e,t,n-t)}function xb(e,t){return Hr((()=>null==e?null:Array.isArray(e)?e.map((e=>xb(e,t))):lg(e,"int32"===t.dtype?t:za(t,"int32"))))}function yb(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function vb(e){const t=[];e instanceof ar&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Qf(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function wb(e,t){if(null==e)return;const n=[];if(t instanceof ar)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof ar)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function kb(e){return Array.isArray(e)}function Ib(e){return!function(e){return e instanceof ar}(e)&&!kb(e)}function Cb(e,t,n){let s,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(kb(e)&&e.length>0)t=!0;else if(Ib(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new nf(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(Ib(e)){s=[];for(const n of t){if(null==e[n])throw new nf(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(kb(e)){if(e.length!==t.length)throw new nf(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new nf(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=vb(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new nf(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;const s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new nf(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function Sb(e,t,n){let s,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new nf(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new nf(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new nf(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],l=n[i][s];if(null!=l&&l!==o)throw new nf(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class $b extends ob{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new nf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Qm(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>oc.adagrad(.01),Adadelta:()=>oc.adadelta(1,.95,Jf()),Adam:()=>oc.adam(.001,.9,.999,Jf()),Adamax:()=>oc.adamax(.002,.9,.999,Jf(),0),RMSProp:()=>oc.rmsprop(.001,.9,0,Jf()),SGD:()=>oc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new nf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ei))throw new nf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new nf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Pm(e)))}else{const n=Pm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new nf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Pm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Wf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Wf("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,s,a;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Om?-1!==["accuracy","acc"].indexOf(i)?s=Bm:-1!==["crossentropy","ce"].indexOf(i)&&(s=Vm):this.lossFunctions[e]===_m?-1!==["accuracy","acc"].indexOf(i)?s=Gm:-1!==["crossentropy","ce"].indexOf(i)&&(s=jm):-1!==["accuracy","acc"].indexOf(i)?s=Wm:-1!==["crossentropy","ce"].indexOf(i)&&(s=Hm),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=qm(i);a=e,n=""+Xm(i)}let t;Wf(n,(()=>{t=a})),r(e,n,t)}})(s[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=null==n.batchSize?32:n.batchSize;mb(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return cf(this.testLoop(t,e,s,n.verbose,n.steps))}finally{wb(r[0],e),wb(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new sf("Verbose mode is not implemented yet.");g(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=Hr((()=>{if(t.value){const{xs:n,ys:s}=db(e,t.value),i=n.concat(s),u=Hr((()=>r(i)));if(jr(i),0===l)for(let e=0;e<u.length;++e)a.push(qa(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Hr((()=>Ba(a[e],Va(c,t)))),l>0&&jr(n)}jr(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const e=a[u];a[u]=Ua(a[u],o),jr(e)}return cf(a)}(this,e,t)}checkNumSamples(e,t,n){let s,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(s=null,null!=t)throw new nf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new nf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new nf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Qg;if(e instanceof ar&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new nf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new nf(`No value is provided for the model's input ${o.name}`);a.add(o,t)}const i=nm(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=of(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new nf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Hr((()=>{const s=this.checkNumSamples(e);if(n)throw new sf("Verbose predictLoop() is not implemented yet.");const r=yb(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){Hr((()=>{const n=r[t][0],s=r[t][1],a=bb(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Qg(i);return nm(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return cf(a.map((e=>No(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=vb(e);Sb(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return mb(e),this.predictLoop(n,e)}finally{wb(n,e)}}predictOnBatch(e){Sb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new tf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===_m?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(e,t){const n=yf(e.map((e=>e.shape[0])));n.sort();const s=yf(t.map((e=>e.shape[0])));if(s.sort(),n.length>1)throw new nf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new nf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&s.length>0&&!y(n,s))throw new nf(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Cb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Cb(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const s=[Em,Om,Dm];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Dm&&1===a.shape[a.shape.length-1])throw new nf(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new nf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new nf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=ub(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await cb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return Hr((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new sf("Verbose mode is not implemented yet.");if(null!=r)throw new sf("steps mode in testLoop() is not implemented yet");{const s=yb(a,n),r=Jl(Xf(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=eg(r,a,o-a),u=xb(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(qa(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ba(i[e],Va(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ua(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(uf(e,s)>1){r+=`_${uf(e.slice(0,n),s)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Qg(e),o=nm(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(s[n],o[n]);null!=r[n]&&(e=hb(e,r[n]));const a=bl(e);t.push(a),l=0===n?e:Ba(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=bl(t(s[r],o[r]))}Kr(e),a.push(e)}return l=bl(l),this.calculateLosses().forEach((e=>{l=Ba(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Hr((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new Qg(a),o=nm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=bl(s(r[e],o[e]));n=0===e?a:Ba(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=bl(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t){let n,s,r,a,i,o,l,u,c,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;mb(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],s=f[1],c=f[2];let g,m=!1;if(null!=h.validationData&&h.validationData.length>0){if(m=!0,2!==h.validationData.length)throw 3===h.validationData.length?new sf("validationData including sample weights is not supported yet."):new nf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);i=h.validationData[0],o=h.validationData[1];const e=!0,t=await this.standardizeUserData(i,o,null,null,e,d);l=t[0],u=t[1],g=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){m=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=bb(n,e,t),r=n,n=bb(n,0,e),u=bb(s,e,t),a=s,s=bb(s,0,e),g=l.concat(u)}else null!=h.validationSteps&&(m=!0);const b=n.concat(s).concat(c);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(v=null,g=[],w=y.slice());const k=Cm(h.callbacks,h.yieldEvery);return await this.fitLoop(x,b,y,d,h.epochs,h.verbose,k,v,g,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,wb(n,e),wb(s,t),wb(r,e),wb(a,t),wb(l,i),wb(u,o),null!=c&&jr(c)}}async fitLoop(e,t,n,s,r,a,i,o,l,u,c,d,p,f){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==d&&(d=0);let g=!1;if(null!=o&&null!=l&&(g=!0),null!=f&&(g=!0,null==p))throw new nf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,p,"steps_per_epoch");let b;null!=m&&(b=Xf(0,m)),null==a&&(a=1);const{callbackList:x,history:y}=$m(i,a,r,d,m,p,s,g,c);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await x.onEpochBegin(v);const r={};if(null!=p)throw new sf("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new sf("batch shuffling is not implemneted yet");u&&h(b);const a=Jl(b),i=yb(m,s);for(let u=0;u<i.length;++u){const c={};if(await x.onBatchBegin(u,c),Hr((()=>{const h=i[u][0],d=i[u][1],p=eg(a,h,d-h);c.batch=u,c.size=d-h;const f=xb(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],s=m[e];c[t]=s,Kr(s)}if(u===i.length-1&&g){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],a=e[t];Kr(a),r["val_"+s]=a}}})),await x.onBatchEnd(u,c),bm(c),this.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(v,r),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return fb(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return jr(a),wb(n[0],e),wb(n[1],t),cf(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Gr().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Gr().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=df(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>df(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!==typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=df(n[s])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[df(Xm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>df(Xm(e))));{const e={};for(const t in this.metrics)e[t]=df(Xm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Nm(rb(e.optimizer_config));let n,s;if("string"===typeof e.loss)n=pf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>pf(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pf(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>pf(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=pf(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"===typeof e){const t=(n=e,la.getSaveHandlers(n));if(0===t.length)throw new nf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new nf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new nf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Jr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ib}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Jr(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=(a=[s.data,t],Ur.join(a))}var a;if(null!=this.userDefinedMetadata){const e=!0;Jm(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){Jm(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}$b.className="Model",Qa($b);class Nb extends $b{}async function Tb(e,t){if(null==t&&(t={}),"string"===typeof e){const n=ua(e,t);if(0===n.length)n.push(Ci(e,t));else if(n.length>1)throw new nf(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new nf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=Nm(rb(r),t,i),l=s.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata);if(null!=s.weightData){if(null==s.weightSpecs)throw new nf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Zr(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),jr(e),jr(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Nb.className="Functional",Qa(Nb);class Eb extends $b{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ef("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new nf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Eb||e instanceof $b;let n;if(t){if(n=e,1!==n.outputs.length)throw new nf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new nf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new nf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new nf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Zg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new nf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new nf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Jg(this.outputs[0])}this.inboundNodes=[],new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:of(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Pg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $b({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new tf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new tf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new tf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new tf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new nf("Legacy serialization format not supported yet.");n=t}else g(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const a=new e(r);if(!(a instanceof Eb))throw new sf(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const i of n){const e=Nm(i,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(e){if(null==this.model)throw new nf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new nf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Eb.className="Sequential",Qa(Eb);class Rb extends Ja{getConfig(){return{}}}class Ab extends Rb{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new sf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wo(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Ab.className="elu",Qa(Ab);class Fb extends Rb{apply(e){return Ml(e)}}Fb.className="selu",Qa(Fb);class Db extends Rb{apply(e){return Ol(e)}}Db.className="relu",Qa(Db);class _b extends Rb{apply(e){return Hr((()=>yl(6,Ol(e))))}}_b.className="relu6",Qa(_b);class Ob extends Rb{apply(e){return e}}Ob.className="linear",Qa(Ob);class Lb extends Rb{apply(e){return Pl(e)}}Lb.className="sigmoid",Qa(Lb);class Mb extends Rb{apply(e){return function(e){return Hr((()=>{const t=Ba(.5,Va(.2,e));return $o(t,0,1)}))}(e)}}Mb.className="hardSigmoid",Qa(Mb);class zb extends Rb{apply(e){return jl(e)}}zb.className="softplus",Qa(zb);class Pb extends Rb{apply(e){return function(e){return Hr((()=>Ua(e,Ba(oi(e),1))))}(e)}}Pb.className="softsign",Qa(Pb);class Bb extends Rb{apply(e){return Yl(e)}}Bb.className="tanh",Qa(Bb);class Wb extends Rb{apply(e){return Hl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Wb.className="softmax",Qa(Wb);class Ub extends Rb{apply(e){return sl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Ub.className="logSoftmax",Qa(Ub);class Vb extends Rb{apply(e){return Hr((()=>Hr((()=>{const t=Math.sqrt(2),n=Va(.5,Ba(1,Vo(Ua(e,t))));return Va(e,n)}))))}}Vb.className="gelu",Qa(Vb);class Gb extends Rb{apply(e){return Hr((()=>Va(.5,Va(e,Ba(1,Yl(Va(Ga(Ua(2,Math.PI)),Ba(e,Va(.044715,ri(e,3))))))))))}}Gb.className="gelu_new",Qa(Gb);class Hb extends Rb{apply(e){return Hr((()=>Va(e,Yl(jl(e)))))}}Hb.className="mish",Qa(Hb);class jb extends Rb{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Hr((()=>Va(Pl(Va(e,t)),e)))}}function Kb(e){return e.getClassName()}function qb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return bf(e,Za.getMap().classNameMap,t,"activation")}function Xb(e){if(null==e){const e={className:"linear",config:{}};return qb(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},qb(t)}return e instanceof Rb?e:qb(e)}function Yb(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}jb.className="swish",Qa(jb);class Jb extends Ja{}class Zb extends Jb{constructor(e){super(),Yb(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Hr((()=>{let t=Cl([1]);return this.hasL1&&(t=Ba(t,nl(Va(this.l1,oi(e))))),this.hasL2&&(t=Ba(t,nl(Va(this.l2,ug(e))))),xo(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Zb.className="L1L2",Qa(Zb);const Qb={l1l2:"L1L2"};function ex(e){return gf(e)}function tx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return bf(e,Za.getMap().classNameMap,t,"regularizer")}function nx(e){if(null==e)return null;if("string"===typeof e){return tx({className:e in Qb?Qb[e]:e,config:{}})}return e instanceof Jb?e:tx(e)}class sx extends Yg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=zg(e);let n=Ol(e);return null!=this.maxValue&&(n=$o(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}sx.className="ReLU",Qa(sx);class rx extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=zg(e);return Zo(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}rx.className="LeakyReLU",Qa(rx);class ax extends Yg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Og(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=nx(e.alphaRegularizer),this.alphaConstraint=gm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new nf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Pg(e)).slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Hg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=zg(e),Tl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:_g(this.alphaInitializer),alphaRegularizer:ex(this.alphaRegularizer),alphaConstraint:pm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}ax.className="PReLU",Qa(ax);class ix extends Yg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new sf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=zg(e);return Wo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ix.className="ELU",Qa(ix);class ox extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=zg(e);return Va(n,za(Yo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ox.className="ThresholdedReLU",Qa(ox);class lx extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Wb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Hr((()=>{let n=zg(e);const s=t.mask;if(null!=s){const e=Va(ai(Sl(n.shape),za(s,n.dtype)),qa(-1e9));n=Ba(n,e)}return this.axis instanceof Array?this.axis.length>1?Go(ai(n,dl(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ux(e,t,n){if("number"===typeof e)return of(e,t);if(e.length!==t)throw new nf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new nf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function cx(e,t,n,s){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+s-1)/s)}function hx(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+qf([n-t,0]);else{if("same"!==s)throw new nf(`Unsupport padding mode: ${s}.`);e*=t}return e}function dx(e,t){return Hr((()=>(Lf(t),"channelsFirst"===t?ru(e,[0,2,3,1]):e)))}function px(e,t){return Hr((()=>(Lf(t),"channelsFirst"===t?ru(e,[0,2,3,4,1]):e)))}function fx(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Hr((()=>{if(null==a&&(a="channelsLast"),Lf(a),3!==e.shape.length)throw new nf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new nf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new nf(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=ru(e,[0,2,1])),"causal"===r)throw new sf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Do(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=hg(o,n)),o}))}function gx(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Hr((()=>{if(null==a&&(a="channelsLast"),Lf(a),3!==e.rank&&4!==e.rank)throw new nf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new nf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=dx(e,a);if("causal"===r)throw new sf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=bu({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=ru(l,[0,3,1,2])),l}))}function mx(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Hr((()=>{if(null==a&&(a="channelsLast"),Lf(a),4!==e.rank&&5!==e.rank)throw new nf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new nf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=px(e,a);if("causal"===r)throw new sf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Lo(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=hg(o,n)),"channelsFirst"===a&&(o=ru(o,[0,4,1,2,3])),o}))}lx.className="Softmax",Qa(lx);class bx extends Yg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bx.verifyArgs(t),this.rank=e,If(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new sf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ux(t.kernelSize,e,"kernelSize"),this.strides=ux(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Mf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Lf(this.dataFormat),this.activation=Xb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Og(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gm(t.biasConstraint),this.biasRegularizer=nx(t.biasRegularizer),this.activityRegularizer=nx(t.activityRegularizer),this.dilationRate=ux(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new nf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new nf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new nf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(lf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!kf(e.kernelSize,"number",1,3))throw new nf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Kb(this.activation),useBias:this.useBias,biasInitializer:_g(this.biasInitializer),biasRegularizer:ex(this.biasRegularizer),activityRegularizer:ex(this.activityRegularizer),biasConstraint:pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class xx extends bx{constructor(e,t){super(e,t),this.kernel=null,xx.verifyArgs(t),this.filters=t.filters,If(this.filters,"filters"),this.kernelInitializer=Og(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gm(t.kernelConstraint),this.kernelRegularizer=nx(t.kernelRegularizer)}build(e){e=Pg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Hr((()=>{let t;e=zg(e);const n=null==this.bias?null:this.bias.read(),s=Sf(this.activation.getClassName());if(null!=s&&2===this.rank)t=gx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=fx(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=gx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new sf("convolutions greater than 3D are not implemented yet.");t=mx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Pg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=cx(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:_g(this.kernelInitializer),kernelRegularizer:ex(this.kernelRegularizer),kernelConstraint:pm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new nf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class yx extends xx{constructor(e){super(2,e),yx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!kf(e.kernelSize,"number",1,2))throw new nf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}yx.className="Conv2D",Qa(yx);class vx extends xx{constructor(e){super(3,e),vx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new nf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}vx.className="Conv3D",Qa(vx);class wx extends yx{constructor(e){if(super(e),this.inputSpec=[new Hg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new nf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Pg(e)).length)throw new nf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Hr((()=>{let t=zg(e);if(4!==t.shape.length)throw new nf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,hx(i,c,l,this.padding),hx(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ru(t,[0,2,3,1]));let p=Oo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ru(p,[0,3,1,2])),null!=this.bias&&(p=hg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Pg(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=hx(t[s],o,a,this.padding),t[r]=hx(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}wx.className="Conv2DTranspose",Qa(wx);class kx extends vx{constructor(e){if(super(e),this.inputSpec=[new Hg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new nf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Pg(e)).length)throw new nf("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Hr((()=>{let t=zg(e);if(5!==t.shape.length)throw new nf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[s,hx(o,p,c,this.padding),hx(l,f,h,this.padding),hx(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ru(t,[0,2,3,4,1]));let b=zo(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=ru(b,[0,4,1,2,3])),null!==this.bias&&(b=hg(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Pg(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=hx(t[s],u,i,this.padding),t[r]=hx(t[r],c,o,this.padding),t[a]=hx(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}kx.className="Conv3DTranspose",Qa(kx);class Ix extends xx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new nf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new nf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new nf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Og(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=nx(t.depthwiseRegularizer),this.depthwiseConstraint=gm(t.depthwiseConstraint),this.pointwiseInitializer=Og(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=nx(t.pointwiseRegularizer),this.pointwiseConstraint=gm(t.pointwiseConstraint)}build(e){if((e=Pg(e)).length<this.rank+2)throw new nf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new nf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Hg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Hr((()=>{let t;if(e=zg(e),1===this.rank)throw new sf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ru(e,[0,2,3,1])),t=zl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=hg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ru(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=_g(this.depthwiseInitializer),e.pointwiseInitializer=_g(this.pointwiseInitializer),e.depthwiseRegularizer=ex(this.depthwiseRegularizer),e.pointwiseRegularizer=ex(this.pointwiseRegularizer),e.depthwiseConstraint=pm(this.depthwiseConstraint),e.pointwiseConstraint=pm(this.pointwiseConstraint),e}}Ix.className="SeparableConv";class Cx extends Ix{constructor(e){super(2,e)}}Cx.className="SeparableConv2D",Qa(Cx);class Sx extends xx{constructor(e){super(1,e),Sx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!kf(e.kernelSize,"number",1,1))throw new nf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Sx.className="Conv1D",Qa(Sx);class $x extends Yg{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Hr((()=>{if(e=zg(e),"channelsLast"===this.dataFormat){const t=ng(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ng(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ng(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ng(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}$x.className="Cropping2D",Qa($x);class Nx extends Yg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,wf(Af,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Hr((()=>{let t=zg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ru(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?ac.resizeNearestNeighbor(t,[e,s]):ac.resizeBilinear(t,[e,s]);return ru(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?ac.resizeNearestNeighbor(t,[e,s]):ac.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Nx.className="UpSampling2D",Qa(Nx);class Tx extends bx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Og(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gm(e.depthwiseConstraint),this.depthwiseRegularizer=nx(e.depthwiseRegularizer)}build(e){if((e=Pg(e)).length<4)throw new nf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new nf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Hr((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0;return Hr((()=>{null==r&&(r="channelsLast"),Lf(r);let i=dx(e,r);if(4!==e.rank)throw new nf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new nf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Bo(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=ru(i,[0,3,1,2])),i}))}(e=zg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=hg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Pg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=cx(t,this.kernelSize[0],this.padding,this.strides[0]),a=cx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=_g(this.depthwiseInitializer),e.depthwiseRegularizer=ex(this.depthwiseRegularizer),e.depthwiseConstraint=pm(this.depthwiseRegularizer),e}}function Ex(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new nf("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Rx(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Hr((()=>{const l=t.shape.length;if(l<3)throw new nf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Xf(2,l));if(t=ru(t,u),null!=a)throw new sf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=za(za(r,"bool"),"float32"),r.rank===l-1&&(r=Ho(r,-1)),r=ru(r,u)),s&&(t=Ll(t,0),null!=r&&(r=Ll(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=eu(t);let g,m;null!=r&&(g=eu(r));for(let t=0;t<p;++t){const n=f[t],s=Hr((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=Hr((()=>{const e=g[t],n=ai($l(e),e);return{output:Ba(Va(s[0],e),Va(d[0],n)),newStates:d.map(((t,r)=>Ba(Va(s[1][r],e),Va(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){m=Xl(c,1)}return[h,m,d]}))}Tx.className="DepthwiseConv2D",Qa(Tx);class Ax extends Yg{constructor(e){let t;if(super(e),null==e.cell)throw new nf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Px({cells:e.cell}):e.cell,null==t.stateSize)throw new nf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Hg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Xf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Lg(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Hr((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new sf("Constants support is not implemented in RNN yet.");Lg(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Hg({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new nf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Hg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Hr((()=>{if(!this.stateful)throw new ef("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new nf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Cl([n,e]))):this.states_=[Cl([n,this.cell.stateSize])];else if(null==e)jr(this.states_),null!=this.keptStates&&(jr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Cl([n,e]))):this.states_[0]=Cl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new nf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):jr(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!y(s.shape,a))throw new nf(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>Kr(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ex(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Hg({shape:e.shape}));i=i.concat(this.stateSpec)}null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length);if(a[0]instanceof jg){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Hr((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=zg(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new nf(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Rx(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Hr((()=>{let t=Cl(e.shape);return t=nl(t,[1,2]),t=Qf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ag(t,[1,e]):t)):this.cell.stateSize>1?[ag(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ax.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=Nm(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Ax.className="RNN",Qa(Ax);class Fx extends Yg{}class Dx extends Fx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,If(this.units,"units"),this.activation=Xb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=nx(e.kernelRegularizer),this.recurrentRegularizer=nx(e.recurrentRegularizer),this.biasRegularizer=nx(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Pg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Hr((()=>{if(2!==e.length)throw new nf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bx({ones:()=>$l(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bx({ones:()=>$l(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=og(null!=a?Va(e,a):e,this.kernel.read()),null!=this.bias&&(r=hg(r,this.bias.read())),null!=i&&(n=Va(n,i));let o=Ba(r,og(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kb(this.activation),useBias:this.useBias,kernelInitializer:_g(this.kernelInitializer),recurrentInitializer:_g(this.recurrentInitializer),biasInitializer:_g(this.biasInitializer),kernelRegularizer:ex(this.kernelRegularizer),recurrentRegularizer:ex(this.recurrentRegularizer),biasRegularizer:ex(this.biasRegularizer),activityRegularizer:ex(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Dx.className="SimpleRNNCell",Qa(Dx);class _x extends Ax{constructor(e){e.cell=new Dx(e),super(e)}call(e,t){return Hr((()=>{null!=this.cell.dropoutMask&&(jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}_x.className="SimpleRNN",Qa(_x);class Ox extends Fx{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new nf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,If(this.units,"units"),this.activation=Xb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=nx(e.kernelRegularizer),this.recurrentRegularizer=nx(e.recurrentRegularizer),this.biasRegularizer=nx(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Pg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Hr((()=>{if(2!==e.length)throw new nf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bx({ones:()=>$l(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bx({ones:()=>$l(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Va(e,r[0]));let u=og(e,this.kernel.read());this.useBias&&(u=hg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Va(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=Kl(c,[2*this.units,this.units],c.rank-1),p=og(s,h),[f,g,m]=Kl(u,3,u.rank-1),[b,x]=Kl(p,2,p.rank-1);i=this.recurrentActivation.apply(Ba(f,b)),o=this.recurrentActivation.apply(Ba(g,x));const y=og(Va(o,s),d);l=this.activation.apply(Ba(m,y));const v=Ba(Va(i,s),Va(Ba(1,wl(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kb(this.activation),recurrentActivation:Kb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_g(this.kernelInitializer),recurrentInitializer:_g(this.recurrentInitializer),biasInitializer:_g(this.biasInitializer),kernelRegularizer:ex(this.kernelRegularizer),recurrentRegularizer:ex(this.recurrentRegularizer),biasRegularizer:ex(this.biasRegularizer),activityRegularizer:ex(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Ox.className="GRUCell",Qa(Ox);class Lx extends Ax{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ox(e),super(e)}call(e,t){return Hr((()=>{null!=this.cell.dropoutMask&&(jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Lx.className="GRU",Qa(Lx);class Mx extends Fx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,If(this.units,"units"),this.activation=Xb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=nx(e.kernelRegularizer),this.recurrentRegularizer=nx(e.recurrentRegularizer),this.biasRegularizer=nx(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Pg(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends mg{apply(t,s){const r=e.apply([n]),a=(new xg).apply([n]),i=e.apply([2*n]);return rg(rg(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Hr((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new nf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bx({ones:()=>$l(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bx({ones:()=>$l(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Va(e,a[0]));let h=og(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Va(s,i[0])),h=Ba(h,og(s,this.recurrentKernel.read())),this.useBias&&(h=hg(h,this.bias.read()));const[d,p,f,g]=Kl(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ba(Va(l,r),Va(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Va(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kb(this.activation),recurrentActivation:Kb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_g(this.kernelInitializer),recurrentInitializer:_g(this.recurrentInitializer),biasInitializer:_g(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ex(this.kernelRegularizer),recurrentRegularizer:ex(this.recurrentRegularizer),biasRegularizer:ex(this.biasRegularizer),activityRegularizer:ex(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Mx.className="LSTMCell",Qa(Mx);class zx extends Ax{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Mx(e),super(e)}call(e,t){return Hr((()=>{null!=this.cell.dropoutMask&&(jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}zx.className="LSTM",Qa(zx);class Px extends Fx{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Hr((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Lg(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Wf(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=[];for(const r of t.cells)s.push(Nm(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Vg(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Gg(t)}}function Bx(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):dg(t(),n),o=()=>pg(i,t,s);if(!r||r<=1)return Kr(o().clone());return Array(r).fill(void 0).map(o).map((e=>Kr(e.clone())))}Px.className="StackedRNNCells",Qa(Px);var Wx=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class Ux extends Ax{constructor(e){if(e.unroll)throw new sf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new sf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Hg({ndim:5})]}call(e,t){return Hr((()=>{if(null!=this.cell.dropoutMask&&(jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new nf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Hr((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Cl([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Hr((()=>{if(!this.stateful)throw new ef("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new nf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Cl(r))):this.states_=[Cl(r)];else if(null==e)jr(this.states_),null!=this.keptStates&&(jr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Cl(r))):this.states_[0]=Cl(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new nf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):jr(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!y(n.shape,s))throw new nf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Kr(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=cx(l,s[0],r,a[0],i[0]),h=cx(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Ux.className="ConvRNN2D";class Vx extends Mx{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,If(this.filters,"filters"),this.kernelSize=ux(n,2,"kernelSize"),this.kernelSize.forEach((e=>If(e,"kernelSize"))),this.strides=ux(s||1,2,"strides"),this.strides.forEach((e=>If(e,"strides"))),this.padding=r||"valid",Mf(this.padding),this.dataFormat=a||"channelsLast",Lf(this.dataFormat),this.dilationRate=ux(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>If(e,"dilationRate")))}build(e){var t;e=Pg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new nf(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends mg{apply(e,t){return sg([n.apply([s]),Sl([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Hr((()=>{if(3!==e.length)throw new nf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bx({ones:()=>$l(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Va(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bx({ones:()=>$l(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),g=o(r,d,2),m=o(r,d,3);const[b,x,y,v]=Kl(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?Kl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,C,this.padding);const[S,$,N,T]=Kl(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,$),g=this.recurrentConv(g,N),m=this.recurrentConv(m,T);const E=this.recurrentActivation.apply(Ba(l,p)),R=this.recurrentActivation.apply(Ba(u,f)),A=Ba(Va(R,a),Va(E,this.activation.apply(Ba(c,g)))),F=Va(this.recurrentActivation.apply(Ba(h,m)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Wx(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=Fo(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hg(r,n,this.dataFormat):r}recurrentConv(e,t){return Fo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Vx.className="ConvLSTM2DCell",Qa(Vx);class Gx extends Ux{constructor(e){const t=new Vx(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Gx.className="ConvLSTM2D",Qa(Gx);class Hx extends Yg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return pg((()=>dg(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Hx.className="Dropout",Qa(Hx);class jx extends Hx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}jx.className="SpatialDropout1D",Qa(jx);class Kx extends Yg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,If(this.units,"units"),this.activation=Xb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gm(e.kernelConstraint),this.biasConstraint=gm(e.biasConstraint),this.kernelRegularizer=nx(e.kernelRegularizer),this.biasRegularizer=nx(e.biasRegularizer),this.activityRegularizer=nx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Pg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Pg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e),s=Sf(this.activation.getClassName());let r;return null!=s?r=og(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=og(n,this.kernel.read()),null!=this.bias&&(r=hg(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Kb(this.activation),useBias:this.useBias,kernelInitializer:_g(this.kernelInitializer),biasInitializer:_g(this.biasInitializer),kernelRegularizer:ex(this.kernelRegularizer),biasRegularizer:ex(this.biasRegularizer),activityRegularizer:ex(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),biasConstraint:pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Kx.className="Dense",Qa(Kx);class qx extends Yg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Pg(e);for(const t of e.slice(1))if(null==t)throw new nf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],jf(e,1)]}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);let n=zg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ru(n,e)}return function(e){if(e.rank<=1)throw new nf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],jf(e.shape,1)];return xo(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}qx.className="Flatten",Qa(qx);class Xx extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.activation=Xb(e.activation)}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Kb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Xx.className="Activation",Qa(Xx);class Yx extends Yg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Hr((()=>{return e=zg(e),t=e,n=this.n,Hr((()=>{if(2!==t.shape.length)throw new nf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ag(Qf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Yx.className="RepeatVector",Qa(Yx);class Jx extends Yg{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let o=0;o<s.length;++o){const e=s[o];if(this.isUnknown(e)){if(null!==a)throw new nf("Can only specifiy one unknown dimension.");a=o}else r*=e}const i=jf(e);if(null!==a){if(0===r||i%r!==0)throw new nf(n);s[a]=i/r}else if(i!==r)throw new nf(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return xo(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Jx.className="Reshape",Qa(Jx);class Zx extends Yg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Xf(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Hg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Pg(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return ru(zg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Zx.className="Permute",Qa(Zx);class Qx extends Yg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=zg(e);return eo(kl(n,this.maskValue),-1)}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e),s=eo(kl(n,this.maskValue),-1,!0);return Va(n,za(s,n.dtype))}))}}Qx.className="Masking",Qa(Qx);class ey extends Yg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(hf(e.inputLength))}this.inputDim=e.inputDim,If(this.inputDim,"inputDim"),this.outputDim=e.outputDim,If(this.outputDim,"outputDim"),this.embeddingsInitializer=Og(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=nx(e.embeddingsRegularizer),this.activityRegularizer=nx(e.activityRegularizer),this.embeddingsConstraint=gm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Hr((()=>this.maskZero?(e=zg(e),kl(e,ja(e))):null))}computeOutputShape(e){if(e=Pg(e),null==this.inputLength)return[...e,this.outputDim];const t=hf(this.inputLength);if(t.length!==e.length-1)throw new nf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new nf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);let n=zg(e);"int32"!==n.dtype&&(n=Zf(n,"int32"));const s=lg(this.embeddings.read(),xo(n,[n.size]));return xo(s,Pg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:_g(this.embeddingsInitializer),embeddingsRegularizer:ex(this.embeddingsRegularizer),activityRegularizer:ex(this.activityRegularizer),embeddingsConstraint:pm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ey.className="Embedding",Qa(ey);class ty extends Yg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new sf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new nf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Pg(e)]),e.length<2)throw new nf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=yf(t),t.length>1)throw new nf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===yf(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Hr((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=qf(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Qf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,s=e[0],r=e.slice(1).concat([s]);let i=xo(a,[s].concat(jf(e.slice(1))));i=ru(i,[1,0]),i=xo(i,r),t.push(i),n=!0}else if(e>1){const s=Xf(1,e).concat([0]);t.push(ru(a,s)),n=!0}else t.push(a)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=xo(ru(xo(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Xf(0,r-1));s=ru(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=yf(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Hr((()=>{if(null==t)return null;if(!Array.isArray(t))throw new nf("`mask` should be an Array");if(!Array.isArray(e))throw new nf("`inputs` should be an Array");if(t.length!==e.length)throw new nf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ho(e,0))))[0];for(let e=1;e<t.length-1;++e)n=pl(n,t[e]);return n}))}}class ny extends ty{constructor(e){super(e)}mergeFunction(e){return Hr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ba(t,e[n]);return t}))}}ny.className="Add",Qa(ny);class sy extends ty{constructor(e){super(e)}mergeFunction(e){return Hr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Va(t,e[n]);return t}))}}sy.className="Multiply",Qa(sy);class ry extends ty{constructor(e){super(e)}mergeFunction(e){return Hr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ba(t,e[n]);return Va(1/e.length,t)}))}}ry.className="Average",Qa(ry);class ay extends ty{constructor(e){super(e)}mergeFunction(e){return Hr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=hi(t,e[n]);return t}))}}ay.className="Maximum",Qa(ay);class iy extends ty{constructor(e){super(e)}mergeFunction(e){return Hr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=yl(t,e[n]);return t}))}}iy.className="Minimum",Qa(iy);class oy extends ty{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new nf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(y(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new nf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Hr((()=>sg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new nf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[s]||null==r[s]){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new nf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new nf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new nf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Hr((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let a=0;a<e.length;++a)null==t[a]?s.push(za($l(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Ho(t[a],-1)):s.push(t[a]);const r=No(s,this.axis);return Qi(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ly(e,t){for(;e<0;)e+=t;return e}oy.className="Concatenate",Qa(oy);class uy extends ty{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){g(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new sf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new nf(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new nf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>ly(t,e[n].shape.length))):[ly(this.axes,n.shape.length),ly(this.axes,s.shape.length)],this.normalize&&(n=Tm(n,t[0]),s=Tm(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new sf("batchDot is not implemented for tensors of 4D or higher rank yet");if(g(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),g(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new sf("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Hr((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=xo(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=xo(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?nl(Va(e,t),a[0]):nl(Va(ru(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=fl(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=ql(i,t)}return 1===i.shape.length&&(i=Ho(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ly(this.axes,e.length),ly(this.axes,t.length)],n}computeOutputShape(e){g(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new sf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}uy.className="Dot",Qa(uy);class cy extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e);return pg((()=>Ba(ig(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}cy.className="GaussianNoise",Qa(cy);class hy extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Hr((()=>{this.invokeCallHook(e,t);const n=zg(e);if(this.rate>0&&this.rate<1){return pg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Va(n,ig(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}hy.className="GaussianDropout",Qa(hy);class dy extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||zg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Hr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=zg(e),s=-1.7580993408473766;let r=Jo(Dl(n),this.rate);r=Zf(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=Ba(Va(t,r),Va(Ba(r,-1),s));return Ba(Va(o,a),i)};return pg(s,(()=>zg(e)),t.training||!1)}return e}))}}function py(e,t,n,s,r){let a,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)a=ko(e,t,n,s,r,i);else if(3===e.rank)a=Io(e,t,n,s,r,i);else{if(4!==e.rank)throw new sf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Co(e,t,n,s,r,i)}return a}function fy(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return y(s.slice().sort(),Xf(0,e.rank-1))?function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Hr((()=>{const a=vl(e,s),i=a.mean,o=a.variance;return[py(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Hr((()=>{const a=vl(e,s),i=a.mean,o=a.variance,l=[];for(const t of Xf(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=xo(i,l),c=xo(o,l),h=null==t?null:xo(t,l),d=null==n?null:xo(n,l);return[py(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}dy.className="AlphaDropout",Qa(dy);class gy extends Yg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Og(e.betaInitializer||"zeros"),this.gammaInitializer=Og(e.gammaInitializer||"ones"),this.movingMeanInitializer=Og(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Og(e.movingVarianceInitializer||"ones"),this.betaConstraint=gm(e.betaConstraint),this.gammaConstraint=gm(e.gammaConstraint),this.betaRegularizer=nx(e.betaRegularizer),this.gammaRegularizer=nx(e.gammaRegularizer)}build(e){e=Pg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new nf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Hg({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Hr((()=>{const n=null!=t.training&&t.training,s=zg(e),r=s.shape,a=r.length,i=Xf(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=of(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!y(u,Xf(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=xo(this.movingMean.read(),l),t=xo(this.movingVariance.read(),l),n=this.center?xo(this.beta.read(),l):null,r=this.scale?xo(this.gamma.read(),l):null;return py(s,e,t,n,r,this.epsilon)}return py(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=fy(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Hr((()=>{const s=1-n,r=e.read(),a=Va(ai(r,t),s);e.write(ai(r,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_g(this.betaInitializer),gammaInitializer:_g(this.gammaInitializer),movingMeanInitializer:_g(this.movingMeanInitializer),movingVarianceInitializer:_g(this.movingVarianceInitializer),betaRegularizer:ex(this.betaRegularizer),gammaRegularizer:ex(this.gammaRegularizer),betaConstraint:pm(this.betaConstraint),gammaConstraint:pm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}gy.className="BatchNormalization",Qa(gy);class my extends Yg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Og(e.betaInitializer||"zeros"),this.gammaInitializer=Og(e.gammaInitializer||"ones"),this.betaRegularizer=nx(e.betaRegularizer),this.gammaRegularizer=nx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Pg(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==yf(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=zg(e),s=n.shape,r=s.length;return Hr((()=>{let{mean:e,variance:t}=vl(n,this.axis,!0);const a=of(1,r);for(const n of this.axis)a[n]=s[n];const i=e=>null!=e&&e.shape.length!==r?xo(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(s[n]),c.push(1)):(u.push(1),c.push(s[n]));return e=jo(e,u),t=jo(t,u),null!=o&&(o=jo(o,c)),null!=l&&(l=jo(l,c)),py(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_g(this.betaInitializer),gammaInitializer:_g(this.gammaInitializer),betaRegularizer:ex(this.betaRegularizer),gammaRegularizer:ex(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}my.className="LayerNormalization",Qa(my);class by extends Yg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new nf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new nf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new nf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){let t,n;return e=Pg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Hr((()=>{return t=zg(e),n=this.padding,s=this.dataFormat,Hr((()=>{if(4!==t.rank)throw new nf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new nf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new nf(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Nl(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function xy(e,t,n,s,r,a){return Hr((()=>{let i;Lf(r),zf(a),Mf(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=dx(e,r);const o="same"===s?"same":"valid";return i="max"===a?gl(e,t,n,o):yo(e,t,n,o),"channelsFirst"===r&&(i=ru(i,[0,3,1,2])),i}))}function yy(e,t,n,s,r,a){return Hr((()=>{let i;Lf(r),zf(a),Mf(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=px(e,r);const o="same"===s?"same":"valid";return i="max"===a?ml(e,t,n,o):vo(e,t,n,o),"channelsFirst"===r&&(i=ru(i,[0,4,1,2,3])),i}))}by.className="ZeroPadding2D",Qa(by);class vy extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new nf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(If(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new nf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}If(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Mf(this.padding),this.inputSpec=[new Hg({ndim:3})]}computeOutputShape(e){const t=cx((e=Pg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Hr((()=>{this.invokeCallHook(e,t),e=Qf(zg(e),2);const n=this.poolingFunction(zg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ql(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class wy extends vy{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),xy(e,t,n,s,r,"max")}}wy.className="MaxPooling1D",Qa(wy);class ky extends vy{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),xy(e,t,n,s,r,"avg")}}ky.className="AveragePooling1D",Qa(ky);class Iy extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new nf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];If(this.poolSize,"poolSize"),If(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lf(this.dataFormat),Mf(this.padding),this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){e=Pg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=cx(t,this.poolSize[0],this.padding,this.strides[0]),n=cx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Hr((()=>(this.invokeCallHook(e,t),this.poolingFunction(zg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Cy extends Iy{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),xy(e,t,n,s,r,"max")}}Cy.className="MaxPooling2D",Qa(Cy);class Sy extends Iy{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),xy(e,t,n,s,r,"avg")}}Sy.className="AveragePooling2D",Qa(Sy);class $y extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new nf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];If(this.poolSize,"poolSize"),If(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lf(this.dataFormat),Mf(this.padding),this.inputSpec=[new Hg({ndim:5})]}computeOutputShape(e){e=Pg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=cx(t,this.poolSize[0],this.padding,this.strides[0]),n=cx(n,this.poolSize[1],this.padding,this.strides[1]),s=cx(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Hr((()=>(this.invokeCallHook(e,t),this.poolingFunction(zg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ny extends $y{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),yy(e,t,n,s,r,"max")}}Ny.className="MaxPooling3D",Qa(Ny);class Ty extends $y{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Lf(r),Mf(s),yy(e,t,n,s,r,"avg")}}Ty.className="AveragePooling3D",Qa(Ty);class Ey extends Yg{constructor(e){super(e),this.inputSpec=[new Hg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new sf}}class Ry extends Ey{constructor(e){super(e||{})}call(e,t){return Hr((()=>{const t=zg(e);return bl(t,1)}))}}Ry.className="GlobalAveragePooling1D",Qa(Ry);class Ay extends Ey{constructor(e){super(e||{})}call(e,t){return Hr((()=>{const t=zg(e);return tl(t,1)}))}}Ay.className="GlobalMaxPooling1D",Qa(Ay);class Fy extends Yg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lf(this.dataFormat),this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new sf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dy extends Fy{call(e,t){return Hr((()=>{const t=zg(e);return"channelsLast"===this.dataFormat?bl(t,[1,2]):bl(t,[2,3])}))}}Dy.className="GlobalAveragePooling2D",Qa(Dy);class _y extends Fy{call(e,t){return Hr((()=>{const t=zg(e);return"channelsLast"===this.dataFormat?tl(t,[1,2]):tl(t,[2,3])}))}}_y.className="GlobalMaxPooling2D",Qa(_y);class Oy extends Yg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=Nm(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Ly extends Oy{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Pg(e)).length<3)throw new nf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Pg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Hr((()=>Rx(((e,n)=>[zg(this.layer.call(e,t)),[]]),e=zg(e),[],!1,null,null,!1,!0)[1]))}}Ly.className="TimeDistributed",Qa(Ly);class My extends Oy{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Nm(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Nm(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,wf(_f,"BidirectionalMergeMode",r),e.weights)throw new sf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):cf(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ex(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new nf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Hg({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new sf("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof jg;for(const l of a)if(l instanceof jg!==o)throw new nf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Hr((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Ll(r,1)),"concat"===this.mergeMode?i=sg([s,r]):"sum"===this.mergeMode?i=Ba(s,r):"ave"===this.mergeMode?i=Va(.5,Ba(s,r)):"mul"===this.mergeMode?i=Va(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Wf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Wf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Nm(t.layer);if(delete t.layer,null!=t.numConstants)throw new sf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}My.className="Bidirectional",Qa(My);class zy extends Yg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Hr((()=>("float32"!==(e=zg(e)).dtype&&(e=Zf(e,"float32")),Ba(Va(e,this.scale),this.offset))))}}zy.className="Rescaling",Qa(zy);const{resizeBilinear:Py,cropAndResize:By}=ac;class Wy extends Yg{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,a,i,o){return Hr((()=>{let l,u=!1;const c=[t/a,n/i,(s+t)/a,(r+n)/i],h=[];3===e.rank?(u=!0,l=Xl([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=Br(h,[h.length,4]),p=_l(0,h.length,1,"int32"),f=By(l,d,p,[s,r],"nearest");return Zf(u?zg(eu(f)):f,o)}))}upsize(e,t,n,s){return Hr((()=>Zf(Py(e,[t,n]),s)))}call(e,t){return Hr((()=>{const t=zg(e),n=t.dtype,s=t.shape,r=s[s.length-3],a=s[s.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Pg(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Wy.className="CenterCrop",Qa(Wy);class Uy extends Yg{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Pg(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Hr((()=>{let n;if("int32"!==(e=zg(e)).dtype&&(e=Zf(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new nf(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=zg(t.countWeights)}const s=tl(e),r=xl(e),a=Yo(this.numTokens,s).bufferSync().get(0),i=Jo(r,0).bufferSync().get(0);if(!a||!i)throw new nf(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=zg(e);if("int32"!==r.dtype&&(r=Zf(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=Ho(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Ho(r,-1)),r.rank>2)throw new nf(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t),o=r;let l;if(l=Po(o,"undefined"!==typeof s&&"count"===t?s:[],n,i),"tfIdf"!==t)return l;if(s)return Va(l,s);throw new nf("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Uy.className="CategoryEncoding",Qa(Uy);const Vy=new Set(["bilinear","nearest"]);class Gy extends Yg{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Vy.has(e.interpolation))throw new nf(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Pg(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Hr((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return ac.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ac.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Vy]} are supported`)}))}}Gy.className="Resizing",Qa(Gy);class Hy{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Hy.className="RandomSeed";class jy extends Yg{constructor(e){super(e),this.randomGenerator=new Hy(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}jy.className="BaseRandomLayer";const Ky=new Set(["bilinear","nearest"]);class qy extends jy{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new nf(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new nf(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new nf(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Ky.has(n))throw new nf(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Pg(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Hr((()=>{const t=zg(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Dl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return ac.resizeBilinear(e,r);case"nearest":return ac.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Ky]} are supported`)}}))}}qy.className="RandomWidth",Qa(qy);var Xy,Yy;X().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Xy||(Xy={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Yy||(Yy={}));Error;new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Jy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(tv(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=Jy(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function Zy(e){return Qy(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ev)}function Qy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(tv(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Qy(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function ev(e){return null===e?null:tv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function tv(e){let t=!1;if(X().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(551);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof ar)&&!(e instanceof Promise)&&!t)}function nv(e){return function(e,t){return Jy(e,t)}(e,sv)}function sv(e){return e instanceof ar?{value:e.clone(),recurse:!1}:tv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class rv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class av extends rv{constructor(){super(av.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function iv(e){return new cv(e)}function ov(e,t){return new wv(e,t)}av.INITIAL_CAPACITY=32;class lv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bv(this,e)}filter(e){return new gv(this,e)}map(e){return new mv(this,e)}mapAsync(e){return new xv(this,e)}serialMapAsync(e){return new xv(this,e).serial()}flatmap(e){return new vv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new fv(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ev;return this.rowMajorBatch(e,t).map((e=>Zy(e,n)))}concatenate(e,t){return new wv(new uv([this,e]),t)}take(e){return e<0||null==e?this:new pv(this,e)}skip(e){return e<0||null==e?this:new dv(this,e)}prefetch(e){return new Iv(this,e)}shuffle(e,t){return new Cv(this,e,t)}serial(){return new hv(this)}}class uv extends lv{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:nv(e),done:!1}}}class cv extends lv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class hv extends lv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class dv extends lv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;jr(e.value)}return this.upstream.next()}}class pv extends lv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class fv extends lv{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class gv extends lv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;jr(e.value)}}}class mv extends lv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vr(e.value),n=this.transform(e.value),s=vr(n);for(const r of t)yr(r,s)||r.dispose();return{value:n,done:!1}}}class bv extends lv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class xv extends lv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vr(e.value),n=await this.transform(e.value),s=vr(n);for(const r of t)yr(r,s)||r.dispose();return{value:n,done:!1}}}class yv extends lv{constructor(){super(),this.outputQueue=new av,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class vv extends yv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=vr(e.value),n=this.transform(e.value),s=vr(n);this.outputQueue.pushAll(n);for(const r of t)yr(r,s)||r.dispose();return!0}}class wv extends lv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var kv;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(kv||(kv={}));class Iv extends lv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new rv(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Cv extends Iv{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=El.alea(n||Ps().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Sv{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let s;return g(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),$v((async()=>(await n.iterator()).columnMajorBatch(e,t,Nv)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,$v((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,$v((async()=>(await t.iterator()).filter((t=>Hr((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return $v((async()=>(await t.iterator()).map((t=>Hr((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return $v((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return $v((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,$v((async()=>ov(iv((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,$v((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=El.alea(t||Ps().toString());return $v((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,$v((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function $v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Sv{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Nv(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof ar||Us(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ar?Xl(e):Br(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Sv.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Tv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&g("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Ev=yh;class Rv extends u{nextDataId(){return Rv.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new l(this,Vr())}write(e,t,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&ds("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A(n[0])){const r=n.map((e=>Bs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Mc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Ws(e)));return Ma(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ma(e.shape,e.dtype,t)}makeOutput(e,t,n){return Vr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ps();e();return{kernelMs:Ps()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Tv([e],"where");const t=this.readSync(e.dataId);return Ev(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Rv.nextDataId=0;function Av(e){return(t,n,s)=>{const r=T(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function Fv(e,t,n){return Dv(e,Av(t),n)}function Dv(e,t,n){return s=>{let{inputs:r,attrs:a,backend:i}=s;const{x:o}=r;Tv(o,e);const l=i,u=l.data.get(o.dataId).values;let c;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=bh(u)}else c=u;const h=n||o.dtype,d=t(c,h,a);return l.makeTensorInfo(o.shape,h,d)}}qr("cpu",(()=>new Rv),1);const _v=Fv(Ze,(e=>e>=0?e:Math.exp(e)-1)),Ov={kernelName:Ze,backendName:"cpu",kernelFunc:_v};function Lv(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Mv={kernelName:gt,backendName:"cpu",kernelFunc:Lv};function zv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Tv([r],"leakyRelu");const i=x(r.shape),o=n.data.get(r.dataId).values,l=N("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?a*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}const Pv={kernelName:wt,backendName:"cpu",kernelFunc:zv};function Bv(e){return(t,n,s,r,a)=>{const i=ci(t,n),o=i.length,l=L(i),u=N(a,x(i)),c=t.length,h=n.length,d=L(t),p=L(n),f=li(t,i),g=li(n,i);if(f.length+g.length===0)for(let m=0;m<u.length;++m)u[m]=e(s[m%s.length],r[m%r.length]);else for(let m=0;m<u.length;++m){const t=G(m,o,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const a=V(n,c,d),i=t.slice(-h);g.forEach((e=>i[e]=0));const b=V(i,h,p);u[m]=e(s[a],r[b])}return[u,i]}}const Wv=Bv(((e,t)=>e<0?t*e:e));function Uv(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Tv([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=Wv(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Vv={kernelName:nn,backendName:"cpu",kernelFunc:Uv},Gv=Fv(hn,(e=>Math.max(0,e))),Hv={kernelName:hn,backendName:"cpu",kernelFunc:Gv},jv=Fv(bn,(e=>Math.min(Math.max(0,e),6))),Kv={kernelName:bn,backendName:"cpu",kernelFunc:jv},qv=Av((e=>1/(1+Math.exp(-e)))),Xv=Fv(Rn,(e=>1/(1+Math.exp(-e)))),Yv={kernelName:Rn,backendName:"cpu",kernelFunc:Xv};function Jv(e,t,n,s,r){if("linear"===n)return Lv({inputs:{x:t},backend:e});if("relu"===n)return Gv({inputs:{x:t},backend:e});if("elu"===n)return _v({inputs:{x:t},backend:e});if("relu6"===n)return jv({inputs:{x:t},backend:e});if("prelu"===n)return Uv({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return zv({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Xv({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Zv(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const Qv={kernelName:$e,backendName:"cpu",kernelFunc:Zv};function ew(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Zv({inputs:{real:ew(e,t,"float32"),imag:ew(e,t,"float32")},backend:e})}const s=B(x(t),n);return e.makeTensorInfo(t,n,s)}function tw(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const nw={kernelName:un,backendName:"cpu",kernelFunc:tw};function sw(e,t,n,s){if("int32"===s){return[t,"int32",Int32Array.from(e)]}if("bool"===s){const s=zs([0],n),[r,a]=Bv(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function rw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Lv({inputs:{x:r},backend:n});const e=ew(n,r.shape,r.dtype),t=rw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=Zv({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=tw({inputs:{input:r},backend:n}),t=rw({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!E(r.dtype,a)){const e=Lv({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,l,u]=sw(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,l,u)}const aw={kernelName:Ie,backendName:"cpu",kernelFunc:rw};function iw(e,t,n,s){return null==n?n=>{let{inputs:r,backend:a}=n;const{a:i,b:o}=r,l=a;Tv([i,o],e);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h="string"===i.dtype?bh(u):u,d="string"===i.dtype?bh(c):c,p=s||i.dtype,[f,g]=t(i.shape,o.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:e=>{let{inputs:r,backend:a}=e;const{a:i,b:o}=r,l=a;if("complex64"===i.dtype||"complex64"===o.dtype){const e=rw({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,a=l.data.get(s.dataId).values,u=l.data.get(r.dataId).values,c=rw({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=l.data.get(d.dataId).values,g=l.data.get(p.dataId).values,[m,b,x]=n(i.shape,o.shape,a,u,f,g),y=l.makeTensorInfo(x,"float32",m),v=l.makeTensorInfo(x,"float32",b),w=Zv({inputs:{real:y,imag:v},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(v),w}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,r=s||i.dtype,[a,u]=t(i.shape,o.shape,e,n,r);return l.makeTensorInfo(u,r,a)}}}function ow(e){return(t,n,s,r,a,i)=>{const o=ci(t,n),l=x(o),u=o.length,c=L(o),h=N("float32",l),d=N("float32",l),p=li(t,o),f=li(n,o),g=Mc(s,r),m=Mc(a,i),b=t.length,y=L(t),v=n.length,w=L(n);if(p.length+f.length===0)for(let x=0;x<h.length;x++){const t=x%g.length,n=x%m.length,s=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[x]=s.real,d[x]=s.imag}else for(let x=0;x<h.length;x++){const t=G(x,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const s=V(n,b,y),r=t.slice(-v);f.forEach((e=>r[e]=0));const a=V(r,v,w),i=e(g[2*s],g[2*s+1],m[2*a],m[2*a+1]);h[x]=i.real,d[x]=i.imag}return[h,d,o]}}const lw=Bv(((e,t)=>e+t)),uw=ow(((e,t,n,s)=>({real:e+n,imag:t+s}))),cw=iw(se,lw,uw),hw={kernelName:se,backendName:"cpu",kernelFunc:cw};function dw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=x(r.shape),o=C(a,i),l=x(o);g(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const pw={kernelName:dn,backendName:"cpu",kernelFunc:dw};function fw(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;Tv([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),b=x(f),y=x(m),v=ci(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);g(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,h]:[y,h,p],k=dw({inputs:{x:r},backend:n,attrs:{shape:i?[b,c,d]:[b,d,c]}}),I=dw({inputs:{x:a},backend:n,attrs:{shape:w}}),C=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],$=o?I.shape[1]:I.shape[2],N=Math.max(b,y),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=L(k.shape),A=L(I.shape),[F,D,_]=i?[R[0],1,R[1]]:[R[0],R[1],1],[O,M,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=S*$,B=Ma([N,S,$],k.dtype),W=B.values,U=n.blockSize;for(let g=0;g<N;g++){const e=g%b,t=g%y;for(let n=0;n<S;n+=U){const s=Math.min(n+U,S);for(let r=0;r<$;r+=U){const a=Math.min(r+U,$);for(let i=0;i<C;i+=U){const o=Math.min(i+U,C);for(let l=n;l<s;l++)for(let n=r;n<a;n++){let s=0;for(let r=i;r<o;r++){s+=T[e*F+l*D+r*_]*E[r*O+n*M+t*z]}W[g*P+(l*$+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const gw={kernelName:xe,backendName:"cpu",kernelFunc:fw};const mw={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=fw({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=cw({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=Jv(n,d,c,o,h),g.push(d),d=f);for(const m of g)n.disposeIntermediateTensorInfo(m);return d}};function bw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const xw={kernelName:ee,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Tv(t,"abs");let s=new Float32Array(x(t.shape));return s=bw(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},yw=Fv(te,(e=>Math.acos(e))),vw={kernelName:te,backendName:"cpu",kernelFunc:yw},ww=Fv(ne,(e=>Math.acosh(e))),kw={kernelName:ne,backendName:"cpu",kernelFunc:ww};const Iw={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;Tv(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Ma(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){const e=r[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Cw(e,t,n,s,r){const a=t.length,i=x(t),o=L(t),l=L(r),u=N(n,x(r));for(let c=0;c<i;++c){const t=G(c,a,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];u[V(n,a,l)]=e[c]}return u}function Sw(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Tv(r,"transpose");const i=r.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=r.shape[a[u]];const l=Cw(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const $w={kernelName:ts,backendName:"cpu",kernelFunc:Sw};const Nw={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Tv(r,"all");const o=S(a,r.shape);let l=o;const u=ul(l,r.shape.length);let c=r;null!=u&&(c=Sw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hl(l.length,r.shape.length)),ll("all",l,c.shape.length);const[h,d]=il(c.shape,l),p=x(d),f=B(x(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t&&s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=dw({inputs:{x:m},backend:n,attrs:{shape:ol(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const Tw={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Tv(r,"any");const o=S(a,r.shape);let l=o;const u=ul(l,r.shape.length);let c=r;null!=u&&(c=Sw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hl(l.length,r.shape.length)),ll("any",l,c.shape.length);const[h,d]=il(c.shape,l),p=x(d),f=B(x(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t||s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=dw({inputs:{x:m},backend:n,attrs:{shape:ol(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const Ew={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Tv(r,"argMax");let i=S(a,r.shape);const o=ul(i,r.shape.length);let l=r;const u=[];null!=o&&(l=Sw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hl(i.length,l.shape.length)),i=[i[0]],ll("argMax",i,l.shape.length);const[c,h]=il(l.shape,i),d=B(x(c),"int32"),p=x(h),f=n.data.get(l.dataId).values;for(let g=0;g<d.length;++g){const e=g*p;let t=f[e],n=0;for(let s=0;s<p;++s){const r=f[e+s];r>t&&(t=r,n=s)}d[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const Rw={kernelName:le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Tv(r,"argMin");let i=S(a,r.shape);const o=ul(i,r.shape.length);let l=r;const u=[];null!=o&&(l=Sw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hl(i.length,l.shape.length)),i=[i[0]],ll("argMin",i,l.shape.length);const[c,h]=il(l.shape,i),d=B(x(c),"int32"),p=x(h),f=n.data.get(l.dataId).values;for(let g=0;g<d.length;++g){const e=g*p;let t=f[e],n=0;for(let s=0;s<p;++s){const r=f[e+s];r<t&&(t=r,n=s)}d[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Aw=Fv(ue,(e=>Math.asin(e))),Fw={kernelName:ue,backendName:"cpu",kernelFunc:Aw},Dw=Fv(ce,(e=>Math.asinh(e))),_w={kernelName:ce,backendName:"cpu",kernelFunc:Dw},Ow=Fv(he,(e=>Math.atan(e))),Lw={kernelName:he,backendName:"cpu",kernelFunc:Ow},Mw=Bv(((e,t)=>Math.atan2(e,t))),zw=iw(pe,Mw),Pw={kernelName:pe,backendName:"cpu",kernelFunc:zw},Bw=Fv(de,(e=>Math.atanh(e))),Ww={kernelName:de,backendName:"cpu",kernelFunc:Bw};function Uw(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ma(r.outShape,n),m=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*b,n=v*s[0];for(let g=0;g<r.inChannels;++g)for(let b=0;b<r.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),I=t+b*x;for(let t=0;t<r.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,x=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*s[1];for(let t=c;t<d;t+=u){const n=e[r+t*s[2]+g];"max"===a&&n>b?b=n:"avg"===a&&(x+=n,v++)}if(isNaN(b))break}m[I+t*y+g]="avg"===a?x/v:b}}}return g}function Vw(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Ma(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=Ma(t,n,e);for(let m=0;m<s.batchSize;++m)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*o-p;let b=n;for(;b<0;)b+=u;const x=Math.min(s.inHeight,h+n);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const y=Math.min(s.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<x;t+=u){const i=t-n;for(let n=p;n<y;n+=c){const o=n-h,l=g.get(m,t,n,e);l>v&&(v=l,w=r?a?((m*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:i*d+o)}}i.set(w,m,t,o,e)}}return i}function Gw(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,b=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Ma(r.outShape,n),v=y.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let S=0;S<r.batchSize;++S){const t=S*w,n=S*s[0];for(let y=0;y<r.inChannels;++y)for(let w=0;w<r.outDepth;++w){const S=w*i-g;let $=S;for(;$<0;)$+=u;const N=Math.min(r.inDepth,d+S),T=t+w*k;for(let t=0;t<r.outHeight;++t){const i=t*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(r.inHeight,p+i),w=T+t*I;for(let t=0;t<r.outWidth;++t){const i=t*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),m=w+t*C;let k=x,I=0,S=0;for(let t=$;t<N;t+=u){const r=n+t*s[1];for(let t=d;t<g;t+=c){const n=r+t*s[2];for(let t=o;t<p;t+=h){const r=e[n+t*s[3]+y];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+y]="avg"===a?I/Math.max(S,1):k}}}}return y}const Hw={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Tv(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;g(fo(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=so(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=Lv({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Uw(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}};const jw={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Tv(r,"avgPool3d");const c=ro(r.shape,a,i,1,o,l,u),h=Gw(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Kw={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Tv([r,a],"avgPool3DGrad");const c=ro(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,$=Ma(a.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-I,a=n-S,i=s-C;let o=0;for(let t=0;t<v;t+=b){const n=(r+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=x){const s=(a+t)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let t=0;t<k;t+=y){const r=(i+t)/p;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;o+=T.get(E,n,s,r,e)}}}$.set(o*N,E,t,n,s,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}};const qw={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;Tv([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=so(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=Ma(i.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,C=Ma(r.shape,"float32",I);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const s=t-v,r=n-y;let a=0;for(let t=0;t<b;t+=g){const n=(s+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=m){const s=(r+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;a+=C.get(S,n,s,e)}}w.set(a*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Xw={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;g(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),g(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),g(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Tv([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=f.length,x=p.length,y=d.length,v=h.length;let w=0,k=0,I=0,C=0;for(let g=0;g<c.length;++g)m[g]=f[w++]+(c[g]-h[k++])*p[I++]/Math.sqrt(d[C++]+u),w>=b&&(w=0),k>=v&&(k=0),I>=x&&(I=0),C>=y&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function Yw(e,t,n,s,r){const a=qi(s,t,n),i=x(n),o=L(s);if(a){const n=Xi(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Ma(s,r,"string"===r?bh(e):e),u=Ma(n,r);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===r?xh(u.values):u.values}function Jw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;Tv(r,"slice");const[o,l]=Yi(r,a,i);Li(r,o,l);const u=Yw(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Zw={kernelName:$n,backendName:"cpu",kernelFunc:Jw};const Qw={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;Tv([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=vc(r.shape,a,o),u=wc(l.length,a.length),c=kc(r.shape,a,o),h=Ic(i,a.length),d=Cc(c,i,a.length),p=dw({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Sw({inputs:{x:p},backend:n,attrs:{perm:u}}),g=dw({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Jw({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function ek(e,t,n,s,r){const a=x(s),i=B(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=a>0?t[o]:1)}return i}function tk(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],a=e.shape[1],i=Ma([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const nk={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=ek(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},sk=Bv(((e,t)=>e&t)),rk={kernelName:we,backendName:"cpu",kernelFunc:iw(we,sk)};const ak={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=ci(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ik=Av((e=>Math.ceil(e))),ok=Dv(Ce,ik),lk={kernelName:Ce,backendName:"cpu",kernelFunc:ok},uk=Fv(Se,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ck={kernelName:Se,backendName:"cpu",kernelFunc:uk},hk={kernelName:Ne,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(x(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];s[u]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")}};function dk(e,t,n,s){const r=T(n,x(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=x(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?bh(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function pk(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const fk={kernelName:bt,backendName:"cpu",kernelFunc:pk};function gk(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=S(r,t[0].shape)[0];cc(t.map((e=>e.shape)),a);let i=hc(t.map((e=>e.shape)),a);if(0===x(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>x(e.shape)>0));if(1===o.length)return Lv({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>tw({inputs:{input:e},backend:n}))),t=o.map((e=>pk({inputs:{input:e},backend:n}))),s=gk({inputs:e,backend:n,attrs:{axis:a}}),r=gk({inputs:t,backend:n,attrs:{axis:a}}),i=Zv({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=x(e.shape.slice(a));return dw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=hc(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=dk(u,i,t[0].dtype,c),d=hc(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const mk={kernelName:Te,backendName:"cpu",kernelFunc:gk};function bk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Tv([r,a],"conv2d");const h=mo(l),d=ao(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new tr(d.outShape,r.dtype),w=L(r.shape),k=L(a.shape),I=w[0],C=y?w[1]:w[2],S=y?w[2]:1,$=y?1:w[1],N=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],A=n.data.get(r.dataId).values,F=n.data.get(a.dataId).values,D=v.values;for(let _=0;_<d.batchSize;++_){const e=_*I,t=_*N;for(let n=0;n<d.outHeight;++n){const s=t+n*T,r=n*d.strideHeight-x;for(let t=0;t<p;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const a=t*k[0],i=e+n*C;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*m;if(s<0||s>=d.inWidth)continue;const r=i+s*S;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*$];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const xk={kernelName:Ee,backendName:"cpu",kernelFunc:bk};const yk={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Tv([r,a],"conv2dBackpropFilter");const h=mo(l),d=ao(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new tr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new tr(r.shape,r.dtype,w),C=new tr(a.shape,a.dtype,k);for(let S=0;S<g;++S){const e=Math.max(0,Math.ceil((v-S)/p)),t=Math.min(d.outHeight,(d.inHeight+v-S)/p);for(let n=0;n<m;++n){const s=Math.max(0,Math.ceil((y-n)/f)),r=Math.min(d.outWidth,(d.inWidth+y-n)/f);for(let a=0;a<d.inChannels;++a)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=S+u*p-v;for(let t=s;t<r;++t){const s=n+t*f-y;o+=b?I.get(l,e,s,a)*C.get(l,u,t,i):I.get(l,a,e,s)*C.get(l,i,u,t)}}x.set(o,S,n,a,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const vk={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Tv([r,a],"conv2dBackpropInput");const h=L(a.shape),d=L(r.shape);let p=mo(u);const f=ao(i,a.shape,o,1,l,c,!1,p),g=new tr(f.inShape,"float32"),m=g.values,b=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,_=C-1-f.padInfo.left,O="channelsLast"===p,M=g.strides[0],z=O?g.strides[1]:g.strides[2],P=O?g.strides[2]:1,B=O?1:g.strides[1],W=d[0],U=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let L=0;L<k;++L)for(let e=0;e<S;++e)for(let t=0;t<$;++t){const n=t-D,s=Math.max(0,Math.ceil(n/A)),r=Math.min(E,(I+n)/A);for(let a=0;a<N;++a){const i=a-_,o=Math.max(0,Math.ceil(i/F)),l=Math.min(R,(C+i)/F);let u=0;for(let t=s;t<r;++t){const s=t*A-n;for(let n=o;n<l;++n){const r=W*L+U*t+V*n,a=y*(I-1-s)+v*(C-1-(n*F-i))+w*e;for(let e=0;e<T;++e){u+=b[r+G*e]*x[a+e]}}}m[M*L+z*t+P*a+B*e]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const wk={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;Tv([r,a],"conv3d");const u=io(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,x=m.left,y=m.top,v=new tr(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=v.values,C=L(r.shape),S=L(a.shape);for(let $=0;$<u.batchSize;++$){const e=$*C[0],t=$*v.strides[0];for(let n=0;n<u.outDepth;++n){const s=t+n*v.strides[1],r=n*u.strideDepth-b;for(let t=0;t<c;++t){const n=r+t*p;if(n<0||n>=u.inDepth)continue;const a=t*S[0],i=e+n*C[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*S[1],o=i+s*C[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=u.inWidth)continue;const a=r+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const kk={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;Tv([r,a],"conv3dBackpropFilterV2");const u=L(r.shape),c=L(a.shape),h=io(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new tr(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,C=n.data.get(a.dataId).values,[S,$,N,T]=c,E=n.data.get(r.dataId).values,[R,A,F,D]=u,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<g;++L){const e=Math.max(0,Math.ceil((_-L)/d)),t=Math.min(h.outDepth,(h.inDepth+_-L)/d),n=L*v;for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((M-s)/p)),a=Math.min(h.outHeight,(h.inHeight+M-s)/p),i=s*w+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(h.outWidth,(h.inWidth+O-n)/f),u=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*I+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let c=0;c<h.batchSize;++c){const h=c*R,m=c*S;for(let c=e;c<t;++c){const e=(L+c*d-_)*A+h,t=c*$+m;for(let c=r;c<a;++c){const r=(s+c*p-M)*F+e,a=c*N+t;for(let e=o;e<l;++e){const t=e*T+a;g+=E[(n+e*f-O)*D+r+i]*C[t+u]}}}}y[c+u]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Ik={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;Tv([r],"conv3dBackpropInputV2");const u=L(r.shape),c=L(a.shape),h=io(l,a.shape,o,1,i),d=new tr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(r.dataId).values,[y,v,w,k]=u,I=n.data.get(a.dataId).values,[C,S,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:_,inWidth:O,outChannels:M,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let L=0;L<T;++L)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-G,s=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(E+n)/W);for(let a=0;a<_;++a){const i=a-H,o=Math.max(0,Math.ceil(i/U)),l=Math.min(P,(R+i)/U);for(let u=0;u<O;++u){const c=u-j,h=Math.max(0,Math.ceil(c/V)),d=Math.min(B,(A+c)/V);let T=0;for(let t=s;t<r;++t){const s=t*W-n;for(let n=o;n<l;++n){const r=n*U-i;for(let a=h;a<d;++a){const i=y*L+v*t+w*n+k*a,o=C*(E-1-s)+S*(R-1-r)+$*(A-1-(a*V-c))+N*e;for(let e=0;e<M;++e){T+=x[i+e]*I[o+e]}}}}p[f*L+g*t+m*a+b*u+e]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Ck=Fv(Oe,(e=>Math.cos(e))),Sk={kernelName:Oe,backendName:"cpu",kernelFunc:Ck},$k=Fv(Le,(e=>Math.cosh(e))),Nk={kernelName:Le,backendName:"cpu",kernelFunc:$k};const Tk={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[g,m]=o,b=Ma([f,g,m,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=L(r.shape),k=L(b.shape);for(let I=0;I<f;I++){const e=4*I,t=x[e],n=x[e+1],s=x[e+2],r=x[e+3],a=y[I];if(a>=c)continue;const i=g>1?(s-t)*(h-1)/(g-1):0,o=m>1?(r-n)*(d-1)/(m-1):0;for(let c=0;c<g;c++){const e=g>1?t*(h-1)+c*i:.5*(t+s)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),s=Math.ceil(e),i=e-t;for(let e=0;e<m;e++){const l=m>1?n*(d-1)+e*o:.5*(n+r)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),g=l-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+a*w[0];const o=v[r];r=n+f*w[2]+t*w[1]+a*w[0];const l=v[r];r=n+h*w[2]+s*w[1]+a*w[0];const u=v[r];r=n+f*w[2]+s*w[1]+a*w[0];const d=o+(l-o)*g,p=u+(v[r]-u)*g;r=n+e*k[2]+c*k[1]+I*k[0],b.values[r]=d+(p-d)*i}}}else for(let t=0;t<m;++t){const s=m>1?n*(d-1)+t*o:.5*(n+r)*(d-1);if(s<0||s>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const i=Math.round(s),l=Math.round(e);for(let e=0;e<p;e++){const n=e+i*w[2]+l*w[1]+a*w[0],s=e+t*k[2]+c*k[1]+I*k[0];b.values[s]=v[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Ek={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;Tv(r,"cumprod");const l=ul([a],r.shape.length);let u=r;null!=l&&(u=Sw({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=hl(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fr(u.dtype,"int32"),d=P(x(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=i?1:p[t];else{const n=g(b,e-1);d[t]=i?p[n]*d[n]:p[t]*d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Sw({inputs:{x:m},backend:n,attrs:{perm:cl(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}};const Rk={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;Tv(r,"cumsum");const l=ul([a],r.shape.length);let u=r;null!=l&&(u=Sw({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=hl(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fr(u.dtype,"int32"),d=B(x(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=i?0:p[t];else{const n=g(b,e-1);d[t]=i?p[n]+d[n]:p[t]+d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Sw({inputs:{x:m},backend:n,attrs:{perm:cl(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}};const Ak={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=ek(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=tk(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};const Fk={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;g("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*p);let b=0;for(let g=0;g<o;++g)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<d;++e){const s=Math.floor(e/a),r=(n*a+e%a)*p;for(let e=0;e<p;++e){const n=e+r+c*(s+u*(t+l*g));m[b++]=f[n]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,m)}};function Dk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;Tv([r,a],"depthwiseConv2DNative");const c=L(r.shape),h=L(a.shape);let d=l;null==d&&(d=[1,1]),g(fo(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=ao(r.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:b,dilationWidth:x,padInfo:y}=p,v=y.left,w=y.top,k=p.outChannels/p.inChannels,I=new tr(p.outShape,r.dtype),C=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,$=I.values;for(let g=0;g<p.batchSize;++g){const e=g*c[0],t=g*I.strides[0];for(let n=0;n<p.outHeight;++n){const s=t+n*I.strides[1],r=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=r+t*b;if(n<0||n>=p.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const s=n+e*x;if(s<0||s>=p.inWidth)continue;const r=a+e*h[1],o=i+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)$[l+e]+=t*S[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const _k={kernelName:Ue,backendName:"cpu",kernelFunc:Dk};const Ok={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Tv([r,a],"depthwiseConv2dNativeBackpropFilter");const h=ao(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new tr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new tr(r.shape,r.dtype,v),k=n.data.get(a.dataId).values,I=new tr(a.shape,a.dtype,k);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((x-C)/d)),t=Math.min(h.outHeight,(h.inHeight+x-C)/d);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((b-n)/p)),r=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/y),o=a%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=C+o*d-x;for(let t=s;t<r;++t){const s=n+t*p-b;l+=w.get(u,e,s,i)*I.get(u,o,t,a)}}m.set(l,C,n,i,o)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Lk={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Tv([r,a],"depthwiseConv2DNativeBackpropInput");const h=L(r.shape),d=L(a.shape),p=ao(c,a.shape,i,o,l,u,!0),f=new tr(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[C,S,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:_,outWidth:O,strideHeight:M,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,W=D/R;for(let L=0;L<N;++L)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-P,s=Math.max(0,Math.ceil(n/M)),r=Math.min(_,(T+n)/M);for(let a=0;a<F;++a){const i=a-B,o=Math.max(0,Math.ceil(i/z)),l=Math.min(O,(E+i)/z);let u=0;for(let t=s;t<r;++t){const s=t*M-n;for(let n=o;n<l;++n){const r=v*L+w*t+k*n,a=C*(T-1-s)+S*(E-1-(n*z-i))+$*e;for(let t=0;t<W;++t){u+=y[r+(e*W+t)]*I[a+t]}}}g[m*L+b*t+x*a+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Mk={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=x(s.shape),a=n.data.get(s.dataId).values,i=Ma([r,r],s.dtype),o=i.values;for(let u=0;u<a.length;u++)o[u*r+u]=a[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},zk={kernelName:je,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=n,c=u.data.get(r.dataId).values,h=r.shape.length,d=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:g,inWidth:m,inChannels:b,outHeight:y,outWidth:v,padInfo:w,strideHeight:k,strideWidth:I,filterHeight:C,filterWidth:S,dilationHeight:$,dilationWidth:N,outShape:E}=no(r.shape,a.shape,i,o,"NHWC",l),R=x(E),A=E.length,F=T(r.dtype,R);for(let x=0;x<f;++x)for(let e=0;e<y;++e){const t=e*k-w.top;for(let n=0;n<v;++n){const s=n*I-w.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<C;++e){const n=t+e*$;if(n>=0&&n<g)for(let t=0;t<S;++t){const l=s+t*N;if(l>=0&&l<m){const s=V([x,n,l,i],h,L(r.shape)),u=V([e,t,i],p,L(a.shape)),f=c[s]+d[u];f>o&&(o=f)}}}F[V([x,e,n,i],A,L(E))]=o}}}return{dataId:u.write(zs(F,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},Pk={kernelName:qe,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=s,c=n,h=z(r.shape,c.data.get(r.dataId).values),d=z(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:$,outShape:N}=no(r.shape,a.shape,o,l,"NHWC",u);g(i.rank===N.length,(()=>`Error in ${qe}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=z(N,c.data.get(i.dataId).values),E=W(a.shape,a.dtype);for(let g=0;g<p;++g)for(let e=0;e<x;++e){const t=e*w-v.top;for(let n=0;n<y;++n){const s=n*k-v.left;for(let r=0;r<b;++r){let a=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<C;++t){const l=s+t*$;if(l>=0&&l<m){const s=h[g][n][l][r]+d[e][t][r];s>a&&(a=s,i=e,o=t)}}}E[i][o][r]+=T[g][e][n][r]}}}return{dataId:c.write(zs(E,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Bk={kernelName:Ke,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=s,c=n,h=z(r.shape,c.data.get(r.dataId).values),d=z(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:$,outShape:N}=no(r.shape,a.shape,o,l,"NHWC",u);g(i.rank===N.length,(()=>`Error in ${Ke}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=z(N,c.data.get(i.dataId).values),E=W(r.shape,r.dtype);for(let g=0;g<p;++g)for(let e=0;e<x;++e){const t=e*w-v.top;for(let n=0;n<y;++n){const s=n*k-v.left;for(let r=0;r<b;++r){let a=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=s<0?0:s;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<C;++t){const l=s+t*$;if(l>=0&&l<m){const s=h[g][n][l][r]+d[e][t][r];s>a&&(a=s,i=n,o=l)}}}E[g][i][o][r]+=T[g][e][n][r]}}}return{dataId:c.write(zs(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Wk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{canvas:a,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],g=n.data.get(r.dataId).values,m="float32"===r.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let y=0;y<d*p;++y){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=g[y*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===r.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*m,e[1]=t*m,e[2]=t*m):e[n]=t*m}const t=4*y;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}a.width=p,a.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),r}},Uk=Bv(((e,t)=>e*t)),Vk=ow(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Gk=iw(Ht,Uk,Vk),Hk={kernelName:Ht,backendName:"cpu",kernelFunc:Gk};function jk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;Tv(r,"sum"),o="bool"===r.dtype?rw({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Lv({inputs:{x:r},backend:n});const l=o.shape.length,u=S(a,o.shape),c=ul(u,l);let h=u,d=o;null!=c&&(d=Sw({inputs:{x:o},backend:n,attrs:{perm:c}}),h=hl(h.length,l)),ll("sum",h,d.shape.length);const[p,f]=il(d.shape,h);let g=ew(n,p,fr(d.dtype,"int32"));const m=x(f),b=n.data.get(g.dataId).values,y=n.data.get(d.dataId).values;for(let x=0;x<b.length;++x){const e=x*m;let t=0;for(let n=0;n<m;++n)t+=y[e+n];b[x]=t}if(i){const e=g;g=dw({inputs:{x:g},backend:n,attrs:{shape:ol(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const Kk={kernelName:Dn,backendName:"cpu",kernelFunc:jk};const qk={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Xc(r,a.length);Jc(i.length,l,a);const{path:u,steps:c}=Zc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=Yc(p,l[e]);let r;Qc(t)?r=a[e]:(r=Sw({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);y(r.shape,i)||(r=dw({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=Gk({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=jk({inputs:{x:d},backend:n,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}};const Xk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;Tv([s,r],"eluGrad");const a=new Float32Array(x(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];a[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Yk=Bv(((e,t)=>e===t?1:0)),Jk=iw(tt,Yk,null,"bool"),Zk={kernelName:tt,backendName:"cpu",kernelFunc:Jk},Qk=Ac,eI=Fc,tI=Dc,nI=_c,sI=Oc,rI=Lc,aI=Fv(et,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Qk*n);return t*(1-((((rI*s+sI)*s+nI)*s+tI)*s+eI)*s*Math.exp(-n*n))})),iI={kernelName:et,backendName:"cpu",kernelFunc:aI},oI=Av((e=>Math.exp(e))),lI=Dv(nt,oI,"float32"),uI={kernelName:nt,backendName:"cpu",kernelFunc:lI};function cI(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(g(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),dw({inputs:{x:r},backend:n,attrs:{shape:o}})}const hI={kernelName:st,backendName:"cpu",kernelFunc:cI},dI=Av((e=>Math.expm1(e))),pI=Dv(rt,dI),fI={kernelName:rt,backendName:"cpu",kernelFunc:pI},gI=Bv(((e,t)=>e/t)),mI=iw(Ye,gI),bI={kernelName:Ye,backendName:"cpu",kernelFunc:mI},xI=Bv(((e,t)=>e-t)),yI=ow(((e,t,n,s)=>({real:e-n,imag:t-s}))),vI=iw(Xn,xI,yI),wI={kernelName:Xn,backendName:"cpu",kernelFunc:vI};function kI(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=x(u),h=N("float32",c),d=N("float32",c);for(let m=0;m<r;m++){const e=Jw({inputs:{x:o},backend:n,attrs:{begin:[m,0],size:[1,a]}}),s=Jw({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,a]}}),r=Zv({inputs:{real:e,imag:s},backend:n}),{real:i,imag:u}=II(r,t,n),c=Mc(i,u);for(let t=0;t<a;t++){const e=Wc(c,t);h[m*a+t]=e.real,d[m*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=Zv({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function II(e,t,n){const s=x(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((o=s)&o-1)){const r=CI(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Ms(s,"float32")),i=Lv({inputs:{x:a},backend:n}),l=bI.kernelFunc({inputs:{a:e,b:a},backend:n}),u=bI.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=Gc(r*s,t,n),l=Wc(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Uc(s,a,i,r)}return s}(Mc(a,i),s,t);return zc(e)}var o}function CI(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=Mc(e,t),i=n/2,o=Pc(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=Zv({inputs:{real:h,imag:d},backend:r}),f=Bc(a),g=f.real,m=f.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),y=r.makeTensorInfo(b,"float32",m),v=Zv({inputs:{real:x,imag:y},backend:r}),w=CI(l,u,i,s,r),k=w.real,I=w.imag,C=[k.length],S=r.makeTensorInfo(C,"float32",k),$=r.makeTensorInfo(C,"float32",I),N=Zv({inputs:{real:S,imag:$},backend:r}),T=CI(g,m,i,s,r),E=T.real,R=T.imag,A=[E.length],F=r.makeTensorInfo(A,"float32",E),D=r.makeTensorInfo(A,"float32",R),_=Zv({inputs:{real:F,imag:D},backend:r}),O=Vc(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),z=r.makeTensorInfo(L,"float32",O.imag),P=Zv({inputs:{real:M,imag:z},backend:r}),B=Gk({inputs:{a:P,b:_},backend:r}),W=cw({inputs:{a:N,b:B},backend:r}),U=vI({inputs:{a:N,b:B},backend:r}),V=tw({inputs:{input:W},backend:r}),G=tw({inputs:{input:U},backend:r}),H=pk({inputs:{input:W},backend:r}),j=pk({inputs:{input:U},backend:r}),K=gk({inputs:[V,G],backend:r,attrs:{axis:0}}),q=gk({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(K.dataId).values,Y=r.data.get(q.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const SI={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=x(s.shape),a=s.shape[s.shape.length-1],i=dw({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=kI(i,!1,n),l=dw({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function $I(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||D(r),o=T(i,x(s));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const NI={kernelName:it,backendName:"cpu",kernelFunc:$I};const TI={kernelName:ot,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:r}=t,a=s,i=N(r.dtype,x(r.shape)),[o,l,u,c]=r.shape,h=a.data.get(r.dataId).values;for(let d=0;d<o;d++){const e=d*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let t=0;t<u;t++){const s=t*c;for(let r=0;r<c;r++){const a=Math.round(u-t-1),o=e+n+s+r;let l=h[o];if(a>=0&&a<u){l=h[e+n+a*c+r]}i[o]=l}}}}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},EI=Av((e=>Math.floor(e))),RI=Dv(lt,EI),AI={kernelName:lt,backendName:"cpu",kernelFunc:RI},FI=Bv(((e,t)=>Math.floor(e/t))),DI=iw(ut,FI,null,"int32"),_I={kernelName:ut,backendName:"cpu",kernelFunc:DI};const OI={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=bk({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=dw({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=cw({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=cw({inputs:{a:g,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=dw({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=Jv(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=Jv(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}};const LI={kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Dk({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=cw({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=Jv(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function MI(e,t,n,s,r,a,i,o,l){const u=Ma([s,a],n);for(let c=0;c<s;c++){const n=[];let s=0;for(let t=0;t<r;t++){const a=e[c*r+t];s+=a*i[t],n.push(a)}if(s<0||s>=l/a)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<a;e++)u.values[c*a+e]=t.get(...t.indexToLoc(s*a+e))}return u}const zI={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=x(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=Sc(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=MI(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,d.values)}};function PI(e,t,n){const s=Ma(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(s.values[r]=e.values[l])}return s}const BI={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;Tv([r,a],"gatherV2");const l=S(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let x=0;x<u.length;++x){const e=u[x];g(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=x(a.shape),p=mh(r,a,l,h),f=dw({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=dw({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),b=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),v=PI(n.bufferSync(f),y,b);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}},WI=Bv(((e,t)=>e>t?1:0)),UI=iw(pt,WI,null,"bool"),VI={kernelName:pt,backendName:"cpu",kernelFunc:UI},GI=Bv(((e,t)=>e>=t?1:0)),HI=iw(ft,GI,null,"bool"),jI={kernelName:ft,backendName:"cpu",kernelFunc:HI};const KI={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=x(s.shape),a=s.shape[s.shape.length-1],i=dw({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=kI(i,!0,n),l=dw({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},qI=Fv(xt,(e=>Number.isFinite(e)?1:0),"bool"),XI={kernelName:xt,backendName:"cpu",kernelFunc:qI},YI=Fv(yt,(e=>Math.abs(e)===1/0?1:0),"bool"),JI={kernelName:yt,backendName:"cpu",kernelFunc:YI},ZI=Fv(vt,(e=>Number.isNaN(e)?1:0),"bool"),QI={kernelName:vt,backendName:"cpu",kernelFunc:ZI},eC=Bv(((e,t)=>e<t?1:0)),tC=iw(kt,eC,null,"bool"),nC={kernelName:kt,backendName:"cpu",kernelFunc:tC},sC=Bv(((e,t)=>e<=t?1:0)),rC=iw(It,sC,null,"bool"),aC={kernelName:It,backendName:"cpu",kernelFunc:rC};function iC(e,t,n){const s=(t-e)/(n-1),r=B(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}const oC={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=iC(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},lC=Av((e=>Math.log(e))),uC=Dv(St,lC),cC={kernelName:St,backendName:"cpu",kernelFunc:uC},hC=Fv($t,(e=>Math.log1p(e))),dC={kernelName:$t,backendName:"cpu",kernelFunc:hC},pC=Bv(((e,t)=>e&&t)),fC=iw(Nt,pC,null,"bool"),gC={kernelName:Nt,backendName:"cpu",kernelFunc:fC},mC=Fv(Tt,(e=>e?0:1),"bool"),bC={kernelName:Tt,backendName:"cpu",kernelFunc:mC},xC=Bv(((e,t)=>e||t)),yC=iw(Et,xC,null,"bool"),vC={kernelName:Et,backendName:"cpu",kernelFunc:yC};const wC={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;Tv(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=x(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let g=0;g<d;g++){const e=f(g),t=h[g]*Math.pow(i+o*e,-l);p[g]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const kC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Tv(i,"LRNGrad");const h=x(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),b=h;for(let x=0;x<b;x++){const e=x%d,t=x-e+Math.max(0,e-o),n=x-e+Math.min(d,e+o+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(f[r],2);s=u*s+l;for(let r=t;r<n;r++){let e=-2*u*c*f[r]*g[x]/s;x===r&&(e+=Math.pow(s,-c)),e*=p[x],m[r]+=e}}return n.makeTensorInfo(i.shape,r.dtype,m)}};function IC(e,t,n,s){const r=N(s,x(n));for(let a=0;a<r.length;++a){const n=a*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}r[a]=s}return r}function CC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=S(a,l);let h=c;const d=ul(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Cw(p,l,r.dtype,d,e),h=hl(h.length,u),l=e}Tv(r,"max"),ll("max",h,u);const[f,g]=il(l,h),m=IC(p,x(g),f,r.dtype),b=o.write(m,f,r.dtype);let y=f;if(i){y=ol(f,c)}return{dataId:b,shape:y,dtype:r.dtype}}const SC={kernelName:Ft,backendName:"cpu",kernelFunc:CC},$C=Bv(((e,t)=>Math.max(e,t))),NC=iw(Dt,$C),TC={kernelName:Dt,backendName:"cpu",kernelFunc:NC};const EC={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Tv(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;g(fo(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=so(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=Lv({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Uw(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}};const RC={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Tv(r,"maxPool3d");const c=ro(r.shape,a,i,1,o,l,u),h=Gw(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const AC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Tv([r,a],"maxPool3DGrad");const c=ro(a.shape,i,o,1,l,u),h=function(e,t){const n=Ma(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;for(;y<0;)y+=i;const v=Math.min(t.inDepth,u+x);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=y;t<v;t+=i){const n=t-x;for(let s=d;s<w;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,s,a,m);o>=C&&(C=o,S=n*c*h+r*c+i)}}}n.set(S,g,b,s,r,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=x-1-c.padInfo.front,k=v-1-c.padInfo.left,I=y-1-c.padInfo.top,C=Ma(a.shape,"float32"),S=n.bufferSync(r);for(let $=0;$<c.batchSize;++$)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-w,a=n-I,i=s-k;let o=0;for(let t=0;t<x;t+=g){const n=(r+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let s=0;s<y;s+=m){const r=(a+s)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const l=(i+a)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*y*v-1-h.get($,n,r,l,e)===t*y*v+s*v+a?1:0;if(0===u)continue;o+=S.get($,n,r,l,e)*u}}}C.set(o,$,t,n,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const FC={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;Tv([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=so(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Ma(d.outShape,o.dtype,Vw(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=Ma(o.shape,"float32"),C=n.data.get(r.dataId).values,S=Ma(r.shape,"float32",C);for(let $=0;$<d.batchSize;++$)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const s=t-k,r=n-w;let a=0;for(let t=0;t<y;t+=b){const n=(s+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let s=0;s<v;s+=x){const i=(r+s)/m;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=y*v-1-f.get($,n,i,e)===t*v+s?1:0;if(0===o)continue;a+=S.get($,n,i,e)*o}}I.set(a,$,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const DC={kernelName:zt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:r}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=s;Tv(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,h=so(r.shape,a,i,[1,1],o),[d,p]=function(e,t,n,s,r){const a=Uw(e,0,n,L(t),r,"max"),i=Vw(e,t,n,r,!0,s);return[a.values,i.values]}(c,r.shape,r.dtype,l,h),f=u.write(d,h.outShape,r.dtype),g=u.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const _C={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=S(a,r.shape),l=x(il(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=rw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=mI({inputs:{a:h,b:c},backend:n});u.push(d);const p=jk({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const OC={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Tv(r,"min");const o=S(a,r.shape);let l=o;const u=ul(l,r.shape.length);let c=r;null!=u&&(c=Sw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hl(l.length,r.shape.length)),ll("min",l,c.shape.length);const[h,d]=il(c.shape,l),p=x(d),f=B(x(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];(Number.isNaN(s)||s<t)&&(t=s)}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=dw({inputs:{x:m},backend:n,attrs:{shape:ol(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},LC=Bv(((e,t)=>Math.min(e,t))),MC=iw(Wt,LC),zC={kernelName:Wt,backendName:"cpu",kernelFunc:MC};const PC={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;Tv(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=L(r.shape),f=x(o),g=o.length,m=L(o),b=N(r.dtype,f);for(let x=0;x<f;x++){let e=G(x,g,m);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=V(e,d,p);b[x]=h[t]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},BC=Bv(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),WC=iw(Vt,BC),UC={kernelName:Vt,backendName:"cpu",kernelFunc:WC};function VC(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=S([o],r.shape),u=CC({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=ol(u.shape,l),h=dw({inputs:{x:u},backend:n,attrs:{shape:c}}),d=vI({inputs:{a:r,b:h},backend:n}),p=lI({inputs:{x:d},backend:n}),f=jk({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=dw({inputs:{x:f},backend:n,attrs:{shape:c}}),m=mI({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const GC={kernelName:Ln,backendName:"cpu",kernelFunc:VC};const HC={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;Tv(r,"multinomial");const l=o?r:VC({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=B(x(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=El.alea(i.toString()),s=f*a;for(let r=0;r<a;++r){const e=n();p[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[s+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function jC(e,t,n){const s=Ms(-1,n);return Uk([],t,s,e,n)}const KC={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;Tv(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=jC(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},qC=Au;const XC={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;Tv(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=qC(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},YC=Fu;const JC={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Tv(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=YC(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},ZC=Du;const QC={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Tv(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=ZC(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},eS=Bv(((e,t)=>e!==t?1:0)),tS=iw(Kt,eS,null,"bool"),nS={kernelName:Kt,backendName:"cpu",kernelFunc:tS};const sS={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s;Tv(r,"oneHot");const u=x(r.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function rS(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=tw({inputs:{input:s},backend:n}),t=rS({inputs:{x:e},backend:n}),r=pk({inputs:{input:s},backend:n}),a=rS({inputs:{x:r},backend:n}),i=Zv({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return $I({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const aS={kernelName:as,backendName:"cpu",kernelFunc:rS};const iS={kernelName:Jt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=tw({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=pk({inputs:{input:r},backend:s}),i=rS({inputs:{x:a},backend:s}),o=Zv({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return $I({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function oS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return cI({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{m(a,e.shape,"All tensors passed to stack must have matching shapes"),g(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=gk({inputs:t.map((e=>{const t=cI({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const lS={kernelName:Qt,backendName:"cpu",kernelFunc:oS};const uS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;Tv(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=x(r.shape),h=r.shape.length,d=L(r.shape),p=x(o),f=o.length,g=L(o),m=N(r.dtype,p);0!==i&&m.fill(i);for(let b=0;b<c;b++){m[V(G(b,h,d).map(((e,t)=>e+l[t])),f,g)]=u[b]}return{dataId:n.write(m,o,r.dtype),shape:o,dtype:r.dtype}}},cS=Bv(((e,t)=>Math.pow(e,t))),hS=iw(tn,cS),dS={kernelName:tn,backendName:"cpu",kernelFunc:hS};function pS(e,t,n,s){const[r,a]=il(e,s),i=fr(t,"int32"),o=B(x(r),i),l=x(a);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let s=0;s<l;++s)t*=n[e+s];o[u]=t}return{outVals:o,outShape:r,outDtype:i}}const fS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Tv(r,"prod");const o=r.shape.length,l=S(a,r.shape),u=ul(l,o);let c=l,h=r;const d=[];null!=u&&(h=Sw({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=hl(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=pS(h.shape,h.dtype,p,c);let b=g;return i&&(b=ol(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function gS(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let s=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[s];for(let n=s;n<i;++n)o[a].push(r[n+1]+t)}s=r[s],i=r[i]}i!==s&&(r.push([s,i]),a+=i-s)}return{outSplits:o,valueSlices:r,numValues:a}}function mS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function bS(e,t,n,s,r){const a=t.slice();a[0]=r;const i=T(n,x(a)),o=e.length;return function(e,t,n,s,r,a){const i=mS(t,2)[1],o=mS(a,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<s;++n)r[l*o+n]=e[t*i+n];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}function xS(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=G(s,t.length,L(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=gS(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=T("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=bS(n,s,r,c,h);return[d,p[0],p[1]]}const yS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=xS(l,u,c,a.shape,a.dtype,h,i.shape),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},vS=2147483647;function wS(e,t,n,s,r,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=T("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const t=o?e[0]:e[g],n=l?s[0]:s[g],r=u?a[0]:a[g];if(0===r)throw new Error("Requires delta != 0");let i;if(r>0&&n<t||r<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/r)),i>vS)throw new Error(`Requires ((limit - start) / delta) <= ${vS}`);d[g+1]=d[g]+i}const p=T(n,d[h]);let f=0;for(let g=0;g<h;++g){const t=d[g+1]-d[g];let n=o?e[0]:e[g];const s=u?a[0]:a[g];for(let e=0;e<t;++e)p[f++]=n,n+=s}return[d,p]}const kS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=wS(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};var IS=dc;class CS{constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=fc(u),this.raggedRank=gc(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===IS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===IS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case IS.VALUE_ROWIDS:return CS.getMaxWidthValueRowID(t);case IS.ROW_SPLITS:return CS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${IS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return $S(e,n)}calculateOutputSize(e){const t=this.valuesShape;mc(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=pc(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let r=1;r<=this.raggedRank;++r)s[r]<0&&(s[r]=this.getMaxWidth(r));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let i=0;i<s;++i,a+=t)r.push(a);for(let i=s;i<e;++i)r.push(-1);return g(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case IS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case IS.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${IS[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case IS.FIRST_DIM_SIZE:return e[0];case IS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case IS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${IS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const s=$S(t,!1),r=T(this.valuesDType,x(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=x(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Hr((()=>{const t=xo(u,e),n=So(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(c*o);SS(a.subarray(h*o),e,(d-h)*o)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)a.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){SS(a.slice(d*o),u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function SS(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function $S(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function NS(e,t,n,s,r,a,i,o,l,u){return new CS(e,t,n,s,r,a,i,o,l,u).compute()}const TS={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=NS(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}};function ES(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return B(0,s);const r=B(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+n;return r}const RS={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=ES(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},AS=Fv(cn,(e=>1/e)),FS={kernelName:cn,backendName:"cpu",kernelFunc:AS};const DS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Tv(r,"resizeBilinear");const l=L(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(x([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c];let v=0;const w=b[0]/y[0],k=b[1]/y[1];for(let x=0;x<h;x++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,r=Math.min(d-1,Math.ceil(t)),a=x*l[0]+n*l[1],o=x*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(p-1,Math.ceil(t)),c=a+n*l[2],h=o+n*l[2],d=a+u*l[2],b=o+u*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[b+e]-n)*r-a)*s;m[v++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}};const _S={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Tv([a,r],"resizeBilinearGrad");const o=L(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(a.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=e+s*o[1],i=e+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],g=a+s*o[2],m=i+n*o[2],b=i+s*o[2],w=d*u,k=d*r,I=l*u,C=l*r;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const OS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Tv(r,"resizeNearestNeighbor");const l=L(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=i?y*(t+.5):y*t;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=e+s*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=g[s+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,m)}};const LS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Tv([a,r],"resizeNearestNeighborGrad");const o=L(r.shape),l=L(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let S=0;S<u;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-I/2);for(let a=0;a<h;a++){const s=n+a*o[2],u=Math.floor(a*k),b=Math.floor(u-C/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const u=s+r;if(u<0||u>=p)continue;const d=e+u*l[1],g=u*y;if(t===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],r=t*v;a===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=m[s+n])}}g[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}};const MS={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Tv(r,"reverse");const i=r.shape.length,o=S(a,r.shape);if(0===i)return Lv({inputs:{x:r},backend:n});const l=new tr(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},zS={kernelName:ls,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:r}=t,{radians:a,fillValue:i,center:o}=n,l=s,u=N(r.dtype,x(r.shape)),[c,h,d,p]=r.shape,[f,g]=yc(o,h,d),m=Math.sin(a),b=Math.cos(a),y=l.data.get(r.dataId).values;for(let x=0;x<c;x++){const e=x*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let s=0;s<d;s++){const r=s*p;for(let a=0;a<p;a++){const o=[c,t,s,a],l=o[2],x=o[1];let v=(l-f)*b-(x-g)*m,w=(l-f)*m+(x-g)*b;v=Math.round(v+f),w=Math.round(w+g);let k=i;if("number"!==typeof i&&(k=3===a?255:i[a]),v>=0&&v<d&&w>=0&&w<h){k=y[e+w*(d*p)+v*p+a]}u[e+n+r+a]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},PS=Fv(yn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),BS={kernelName:yn,backendName:"cpu",kernelFunc:PS},WS=Av((e=>1/Math.sqrt(e))),US=Dv(vn,WS),VS={kernelName:vn,backendName:"cpu",kernelFunc:US};function GS(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Ma(n,t.dtype);const p=l instanceof tr?l:Ma(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=s/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[a*r+n]+=d[f*r+n]:p.values[a*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const HS={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tc(0,r,i),d=GS(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function jS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function KS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const qS={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=T("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?jS(n,t[e+l]):KS(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const XS={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Tv([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=fr(r.dtype,a.dtype),h=B(x(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:x(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}},YS=Ec,JS=Rc,ZS=Fv(Sn,(e=>e>=0?JS*e:YS*(Math.exp(e)-1))),QS={kernelName:Sn,backendName:"cpu",kernelFunc:ZS},e$=Fv(En,(e=>e<0?-1:e>0?1:0)),t$={kernelName:En,backendName:"cpu",kernelFunc:e$},n$=Fv(Nn,(e=>Math.sin(e))),s$={kernelName:Nn,backendName:"cpu",kernelFunc:n$},r$=Fv(Tn,(e=>Math.sinh(e))),a$={kernelName:Tn,backendName:"cpu",kernelFunc:r$},i$=Math.log(1.1920928955078125e-7)+2,o$=Fv(An,(e=>{const t=e>-i$,n=e<i$,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),l$={kernelName:An,backendName:"cpu",kernelFunc:o$};const u$={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;Tv([r],"spaceToBatchND");const o=x(a),l=[[0,0]];l.push(...i);for(let m=1+a.length;m<r.shape.length;++m)l.push([0,0]);const u=uS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=vc(u.shape,a,o,!1),h=wc(c.length,a.length,!1),d=kc(u.shape,a,o,!1),p=dw({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Sw({inputs:{x:p},backend:n,attrs:{perm:h}}),g=dw({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function c$(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(nh(o));return[T(n,0),[0,h],T(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<o;++m){const t=e[m*h];if(t<0)throw new Error(sh(m,t));if(t>=l)throw new Error(rh(m,t,l));++f[t],d=d&&t>=p,p=t}let g=!0;for(let m=0;m<l;++m){const e=0===f[m];u[m]=e,g=g&&!e,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=T(n,t*h),d=T(r,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],r=p[t],i=(0===t?0:f[t-1])+r;p[t]++;for(let s=0;s<h;++s)a[i*h+s]=e[n*h+s];d[i]=s[n],c[n]=i}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}}return[a,[t,h],d,u,c]}}const h$={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=c$(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function d$(e,t,n,s,r){const a=x(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let g=0;g<o;++g){const e=r[g];if(-1===e){if(-1!==c)throw new Error(ah(c,g));c=g,l.push(1)}else{if(e<0)throw new Error(ih(g,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(lh(s,l));l[c]=e}if(x(l)!==a)throw new Error(uh(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=T(n,i*o);for(let g=0;g<i;++g){let t=0;for(let n=0;n<h;++n)t+=e[g*h+n]*d[n];for(let e=0;e<o;++e)f[g*o+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[i,o],l]}const p$={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=d$(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function f$(e,t,n,s,r){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=T(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=r[p];for(;;){let t=0;if(f<o){if(t=r[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(dh(m,c));m>g&&d.fill(i,g*u,m*u);for(let n=p;n<f;++n){const t=s[n];if(t<0||t>=l[0])throw new Error(ph(n,s[n],l[0]));for(let n=0;n<u;n++)d[m*u+n]+=e[t*u+n]}if(a)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(i,g*u,c*u),[d,h]}const g$={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=f$(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}};const m$={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=f$(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}};const b$={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Tc(0,r,o),p=!1,f=n.bufferSync(r);let g;switch(a.dtype){case"bool":g=GS(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":g=GS(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"int32":g=GS(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":g=GS(f,n.bufferSync(a),o,d,c,u,l,h,Ws(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}};const x$={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=S(i,r.shape)[0],l=th(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=Jw({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},y$=Av((e=>Math.sqrt(e))),v$=Fv(Fn,(e=>Math.sqrt(e))),w$={kernelName:Fn,backendName:"cpu",kernelFunc:v$},k$={kernelName:Vn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:s}=t,r=n;Tv(s,"square");const a=r.data.get(s.dataId).values,i=new Float32Array(a.length);for(let o=0;o<a.length;++o){const e=a[o];i[o]=e*e}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},I$=Bv(((e,t)=>{const n=e-t;return n*n})),C$=iw(Un,I$),S$={kernelName:Un,backendName:"cpu",kernelFunc:C$},$$=Av(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=t;return e.replace(new RegExp(n,s?"g":""),r)})),N$=Dv(Gn,$$),T$={kernelName:Gn,backendName:"cpu",kernelFunc:N$},E$=Fv(is,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),R$={kernelName:is,backendName:"cpu",kernelFunc:E$};function A$(e,t,n,s){const r=Ma(e,t.dtype);for(let a=0;a<r.size;a++){const e=r.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+s[t];r.set(t.get(...i),...e)}return r}const F$={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Tv(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=Ji(r.shape,a,i,o,l,u,c,h,d);let k;if(m)k=dw({inputs:{x:r},backend:n,attrs:{shape:f}});else if(b||x){g(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=zi(y,v,w),t=Jw({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=dw({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=A$(p,n.bufferSync(r),w,y);k=n.makeTensorInfo(f,e.dtype,e.values)}return k}};class D${constructor(e,t,n,s,r,a){this.separator=Bs(e),this.nGramWidths=t,this.leftPad=Bs(n),this.rightPad=Bs(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=T("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=r;++t)a[t]=0;return[e,a]}a[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[o]=a[o-1]+n}const i=new Array(a[r]);for(let o=0;o<r;++o){const n=t[o];let s=a[o];if(this.nGramWidths.forEach((r=>{const a=t[o+1]-t[o],l=this.getNumNGrams(a,r);this.createNGrams(e,n,i,s,l,r),s+=l})),this.preserveShort&&s===a[o]){const r=t[o+1]-t[o];if(0===r)continue;const a=r+2*this.padWidth,l=1;this.createNGrams(e,n,i,s,l,a)}}return[i,a]}}function _$(e,t,n,s,r,a,i,o){return new D$(n,s,r,a,i,o).compute(e,t)}const O$={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=_$(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function L$(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function M$(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let d=0;d<s;++d){const s=r.length;L$(e[d],t,n,r);const l=r.length-s;o[d]=l,a+=l,i=Math.max(i,l)}const l=T("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=r[h],++h;return[l,u,c]}const z$={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=M$(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function P$(e,t){const n=T("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Ls(e[s]).modulo(t).getLowBitsUnsigned();return n}const B$={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=P$(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},W$=Fv(Yn,(e=>Math.tan(e))),U$={kernelName:Yn,backendName:"cpu",kernelFunc:W$},V$=Fv(Jn,(e=>Math.tanh(e)));const G$={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:r,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Tc(0,r,s.shape),h=n.bufferSync(r),d=n.bufferSync(a),p=n.bufferSync(s),f=GS(h,d,s.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(s.shape,f.dtype,f.values)}};function H$(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=Ma(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const a=e.locToIndex(n);s.values[r]=e.values[a]}return s}const j$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Tv(r,"tile");const i=H$(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},K$=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function q$(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);q$(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(f(e,n,t),K$(e[s],r)>0&&f(e,n,s);a<i;){for(f(e,a,i),a++,i--;K$(e[a],r)<0;)a+=1;for(;K$(e[i],r)>0;)i-=1}0===K$(e[n],r)?f(e,n,i):(i+=1,f(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function X$(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=N(n,i*s),u=N("int32",i*s);for(let h=0;h<i;h++){const t=h*o,n=e.subarray(t,t+o);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),s<a.length&&(q$(a,s),a=a.slice(0,s)),r&&a.sort(K$);const i=h*s,c=l.subarray(i,i+s),d=u.subarray(i,i+s);for(let e=0;e<s;e++)c[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=s,[Ma(c,n,l),Ma(c,"int32",u)]}const Y$={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;Tv(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=X$(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const J$={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=L(r.shape),y=b[0],v=b[1],w=b[2],k=L(m),I=k[0],C=k[1],S=k[2],$=N(r.dtype,x(m));$.fill(l);const T=s.data.get(r.dataId).values,E=s.data.get(a.dataId).values;for(let x=0;x<c;++x){const e=1===a.shape[0]?E:E.subarray(8*x,8*x+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let s=0;s<p;++s){let r;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const u=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,p=Z$(u,d,o),f=Z$(c,h,o);switch(i){case"nearest":r=eN(T,h,d,y,v,w,x,f,p,s,l);break;case"bilinear":r=tN(T,h,d,y,v,w,x,f,p,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}$[x*I+t*C+n*S+s]=r}return s.makeTensorInfo(m,r.dtype,$)}return{dataId:s.write($,m,r.dtype),shape:r.shape,dtype:r.dtype}}};function Z$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return d(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return d(0,n,t-1)}(e,t);case"nearest":return function(e,t){return d(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function Q$(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function eN(e,t,n,s,r,a,i,o,l,u,c){return Q$(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function tN(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*Q$(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*Q$(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*Q$(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*Q$(e,t,n,s,r,a,i,p,f,u,c))}function nN(e,t,n,s){const r=S(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];const i=new Map,o=new Int32Array(n[r]),l=new tr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(l.get(t,f,n));t=e.join(",")}const n=i.get(t);if(null!=n)o[f]=n;else{const e=i.size;i.set(t,e),o[f]=e,u.push(f)}}const h=a.slice();h[1]=i.size;const d=new tr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const sN={kernelName:ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Tv(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=nN(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}};const rN={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=Jw({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=dw({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}};const aN={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;Tv(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let d=0;d<u;++d){const e=cI({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,l.push(e)}for(let d=0;d<i;++d){const e=Ms(d,"int32"),t=n.makeTensorInfo([],"int32",e),s=Jk({inputs:{a:t,b:c},backend:n}),a=rw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),i=Gk({inputs:{a:a,b:r},backend:n}),u=jk({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(s),l.push(a),l.push(i),l.push(u)}const h=oS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},iN=[mw,xw,vw,kw,hw,Iw,Nw,Tw,Ew,Rw,Fw,_w,Lw,Pw,Ww,Hw,jw,Kw,qw,gw,Xw,Qw,nk,rk,ak,aw,lk,ck,Qv,hk,mk,xk,yk,vk,wk,kk,Ik,Sk,Nk,Tk,Ek,Rk,Ak,Fk,_k,Ok,Lk,Mk,zk,Pk,Bk,Wk,qk,Ov,Xk,Zk,iI,uI,hI,fI,SI,NI,TI,AI,_I,OI,LI,zI,BI,VI,jI,Mv,KI,fk,XI,JI,QI,Pv,nC,aC,oC,cC,dC,gC,bC,vC,wC,kC,SC,TC,EC,RC,AC,FC,DC,_C,OC,zC,PC,UC,HC,Hk,KC,XC,JC,QC,nS,sS,iS,lS,uS,dS,Vv,fS,yS,kS,TS,RS,nw,bI,FS,Hv,Kv,pw,DS,_S,OS,LS,MS,zS,BS,VS,HS,qS,XS,QS,Yv,t$,s$,a$,Zw,GC,l$,u$,h$,p$,g$,m$,b$,x$,w$,k$,S$,T$,R$,F$,O$,z$,B$,wI,Kk,U$,{kernelName:Jn,backendName:"cpu",kernelFunc:V$},G$,j$,Y$,J$,$w,sN,rN,aN,aS];for(const qL of iN)ys(qL);const oN={},lN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function uN(e,t){if(!(e in oN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(X().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete oN[e]}),!1),X().getBool("SOFTWARE_WEBGL_ENABLED")&&(lN.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",lN)||n.getContext("experimental-webgl",lN);return n.getContext("webgl2",lN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;oN[e]=n}const n=oN[e];return null==n||n.isContextLost()?(delete oN[e],uN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),oN[e])}var cN,hN,dN;function pN(e,t){return[t,e]}function fN(e){const t=x(e);return w(Math.ceil(t/4))}function gN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function mN(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===X().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function bN(e,t){const n=t();return X().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(cN||(cN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(hN||(hN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(dN||(dN={}));function xN(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function yN(e,t){return TN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const vN=/ERROR: [0-9]+:([0-9]+):/g;function wN(e,t){const n=vN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>k((t+1).toString(),a)+e));let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${k(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function kN(e,t){if(bN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function IN(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(bN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),bN(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),bN(e,(()=>e.enableVertexAttribArray(o))),!0)}function CN(e,t,n,s){bN(e,(()=>function(e,t,n){EN(e,n),bN(e,(()=>e.activeTexture(e.TEXTURE0+n))),bN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),bN(e,(()=>e.uniform1i(n,s)))}function SN(e,t,n){bN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),bN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function $N(e,t){bN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),bN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function NN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function TN(e,t,n){const s=bN(e,(()=>t()));if(null==s)throw new Error(n);return s}function EN(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function RN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return x(e.slice(0,e.length-t))}function AN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function FN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[RN(e),...AN(e)]),t}function DN(e){return e%2===0}function _N(e,t){if(y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(DN(n)&&DN(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&DN(e[0])&&DN(t[0])}let ON,LN;function MN(e,t){return null!=e.getExtension(t)}function zN(e){try{if(null!=uN(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function PN(e){if(0===e)return!1;const t=uN(e);if(1!==e){if(MN(t,"EXT_color_buffer_float"))return BN(t);const e="EXT_color_buffer_half_float";if(MN(t,e)){const n=t.getExtension(e);return function(e,t){const n=mN(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!MN(t,"OES_texture_float"))return!1;if(!MN(t,"WEBGL_color_buffer_float"))return!1;return BN(t)}function BN(e){const t=mN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function WN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&g("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const UN=X();function VN(){let e,t,n,s,r,a,i,o,l,u;return 2===X().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=X().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function GN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=L(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function HN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=L(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function jN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${s[r]}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}function KN(e){const t=L(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}UN.registerFlag("HAS_WEBGL",(()=>UN.getNumber("WEBGL_VERSION")>0)),UN.registerFlag("WEBGL_VERSION",(()=>zN(2)?2:zN(1)?1:0)),UN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),UN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===UN.get("WEBGL_VERSION"))),UN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),UN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),UN.registerFlag("WEBGL_PACK",(()=>UN.getBool("HAS_WEBGL"))),UN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_CLIP",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_REDUCE",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_CONV_IM2COL",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>UN.getBool("WEBGL_PACK"))),UN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==ON){const t=uN(e);ON=t.getParameter(t.MAX_TEXTURE_SIZE)}return ON}(UN.getNumber("WEBGL_VERSION")))),UN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==LN){const t=uN(e);LN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,LN)}(UN.getNumber("WEBGL_VERSION")))),UN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=UN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=uN(e);return t=MN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:MN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),UN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>UN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Er())),UN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=uN(e);if(1===e){if(!MN(t,"OES_texture_float"))return!1}else if(!MN(t,"EXT_color_buffer_float"))return!1;return BN(t)}(UN.getNumber("WEBGL_VERSION")))),UN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!UN.getBool("WEBGL_FORCE_F16_TEXTURES")&&UN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),UN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>PN(UN.getNumber("WEBGL_VERSION")))),UN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=UN.getNumber("WEBGL_VERSION"))&&null!=uN(e).fenceSync;var e})),UN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>UN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),UN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),UN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Er()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),UN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),UN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),UN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),UN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),UN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),UN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>UN.getBool("IS_TEST"))),UN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),UN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),UN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),UN.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const qN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:XN}=i;function YN(e,t,n){const s=[];if(e.forEach((e=>{const t=x(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=oT(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3?arguments[3]:void 0,r="";r+=n?ZN(e,s):JN(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=XN(e.shapeInfo.logicalShape,t.logicalShape),l=iT(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===x(e.shapeInfo.logicalShape),g=x(t.logicalShape),m=1===g;if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&y(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=iT(l),c=XN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=VN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${QN}\n    ${eT}\n    ${tT}\n  `;return t}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return sT();case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===s[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `;if(1===s[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return sT();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(y(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${HN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const s=GN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${HN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const s=GN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=GN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=GN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=nT);return[h,l,c,r,u,a,n.userCode].join("\n")}function JN(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=rT(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${aT(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=rT(n);if(1===i)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&y(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=$(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${JN(lT(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${uT(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${aT(e)}\n      }\n    `;const u=a[0],c=a[1],h=rT(s);if(1===c)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(t)return`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=$(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${JN(lT(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${uT(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${aT(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=rT(s);if(t)return`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=$(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${JN(lT(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${uT(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${aT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=rT(s);if(t)return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=$(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${JN(lT(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${uT(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${aT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=rT(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=$(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${JN(lT(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${uT(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${aT(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=rT(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function ZN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=VN();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=VN();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=VN();if(null!=a&&y(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${ZN(lT(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${uT(a,s)});\n        }\n      `}const o=VN();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=VN();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<i-1;g++)p=`int b${g}, `+p,d*=a[i-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const QN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eT="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tT="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nT="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function sT(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function rT(e){return`offset${e}`}function aT(e){const t=e.name,n=x(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function iT(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function oT(e,t,n){const{newShape:s,keptDims:r}=$(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!y(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function lT(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uT(e,t){return t.map((t=>e[t])).join(", ")}function cT(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=YN(r,i,t),l=function(e,t){const n=TN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(bN(e,(()=>e.shaderSource(n,t))),bN(e,(()=>e.compileShader(n))),X().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw wN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return X().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},hT(e,t,u)))}function hT(e,t,n){const s=[],r=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===X().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${h}Shape`,c),r.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),s.push(r)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function dT(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!y(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!y(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function pT(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class fT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=cN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VN();this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?HN(["r","c","d"],e):GN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class gT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=cN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VN();this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?HN(["r","c","d"],e):GN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class mT{constructor(e){this.variableNames=["A"],this.outTexUsage=hN.DOWNLOAD;const t=VN();this.outputShape=e,this.userCode=`\n      ${qN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class bT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=hN.DOWNLOAD;const t=VN();this.outputShape=e,this.userCode=`\n      ${qN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const xT={R:0,G:1,B:2,A:3};class yT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=VN();this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){const e=n[i];a+=`\n          if(offset == ${i}) {\n            result = values[${xT[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${a}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class vT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=VN();this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const r=2*a+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function wT(e){const t=VN();return function(e,t){const n=TN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(bN(e,(()=>e.shaderSource(n,t))),bN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function kT(e){return function(e,t){const n=TN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return bN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),bN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function IT(e){return function(e,t){const n=TN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return bN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),bN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function CT(e,t,n,s,r,a){!function(e,t){const n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return TN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return bN(e,(()=>e.bindTexture(o,i))),bN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),bN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),bN(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),bN(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===X().getNumber("WEBGL_VERSION")?bN(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):bN(e,(()=>e.texStorage2D(o,1,s,t,n))),bN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function ST(e){return e.internalFormatFloat}function $T(e){return e.internalFormatHalfFloat}function NT(e){return e.downloadTextureFormat}function TT(e){return e.internalFormatPackedFloat}function ET(e){return e.internalFormatPackedHalfFloat}function RT(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=gN(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class AT{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=X().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){oN[e]=t}(t,e)):this.gl=uN(t),e=this.gl,2===X().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>bN(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>bN(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>bN(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>bN(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>bN(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>bN(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>bN(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>bN(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===X().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=yN(this.gl,e),MN(this.gl,t))this.textureHalfFloatExtension=yN(this.gl,t);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),MN(this.gl,s))this.colorBufferHalfFloatExtension=yN(this.gl,s);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",MN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!MN(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=kT(this.gl),this.indexBuffer=IT(this.gl),this.framebuffer=function(e){return TN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=mN(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;bN(e,(()=>e.finish())),bN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),bN(e,(()=>e.deleteFramebuffer(this.framebuffer))),bN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),bN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),bN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=pN(t,n);return CT(e,r,a,ST(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=pN(t,n);return CT(e,r,a,$T(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=pN(t,n);return CT(e,r,a,NT(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){bN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===X().getNumber("WEBGL_VERSION")?bN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):bN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===X().getNumber("WEBGL_VERSION")?bN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):bN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),bN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;bN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===X().getNumber("WEBGL_VERSION")?bN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):bN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),bN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=gN(t,n);return CT(e,r,a,ET(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=gN(t,n);return CT(e,r,a,TT(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&($N(this.gl,this.framebuffer),this.outputTexture=null),bN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=pN(t,n),i=new Uint8Array(t*n*4);return bN(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return RT(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n){const s=e.createBuffer();bN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const r=16*t*n;return bN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),bN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),bN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return bN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=wT(t));const n=function(e){return TN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);bN(t,(()=>t.attachShader(n,this.vertexShader))),bN(t,(()=>t.attachShader(n,e))),function(e,t){if(bN(e,(()=>e.linkProgram(t))),!X().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&kN(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;bN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){bN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),IN(e,t,"clipSpacePos",n,3,20,0)&&IN(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(bN(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&kN(this.gl,this.program),bN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return TN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),bN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),CN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=gN(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&kN(this.gl,this.program),NN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}bN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),bN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=yN(this.gl,2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await I((()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in X().platform&&(n=X().platform.setTimeoutCustom.bind(X().platform)),I((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),SN(this.gl,e,this.framebuffer),this.debug&&NN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(SN(this.gl,this.outputTexture,this.framebuffer),this.debug&&NN(this.gl)):$N(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;SN(s,e,this.framebuffer),this.debug&&NN(s),this.outputTexture=e,bN(s,(()=>s.viewport(0,0,t,n))),bN(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),bN(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:FT,XI:DT,Nk:_T,f6:OT,ct:LT,YG:MT,hH:zT,z3:PT,sG:BT,uM:WT,vS:UT,qB:VT,GG:GT,rq:HT,lg:jT,WR:KT,cu:qT,GE:XT,px:YT,jC:JT,He:ZT,hE:QT,BF:eE,Dk:tE,cl:nE,_B:sE,ub:rE,_f:aE,Ku:iE,qy:oE,Zy:lE,bu:uE,zv:cE,dH:hE,HS:dE,yH:pE,l3:fE,z9:gE,x6:mE,_m:bE,eW:xE,GK:yE,SP:vE,yr:wE,dl:kE,Dw:IE,xT:CE,_X:SE,wz:$E}=o;function NE(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function TE(e,t){return 1===t?[e]:NE(e,t)}class EE{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pT(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=TE("rc",this.rank),t=iT(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class RE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?jN(["r","c","d"],"inputShape"):GN(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class AE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=DE(t,n),r=_E(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=FE(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let i;return s===dN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===dN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===dN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===dN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===dN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=DE(n,s),a=_E(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=FE(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=X().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function FE(e,t,n,s,r){const a=function(e,t){switch(e){case dN.PACKED_2X2_FLOAT32:return TT(t);case dN.PACKED_2X2_FLOAT16:return ET(t);case dN.UNPACKED_FLOAT32:return ST(t);case dN.UNPACKED_FLOAT16:return $T(t);case dN.PACKED_4X1_UNSIGNED_BYTE:return NT(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=gN(e[0],e[1]);i=t*n}else{const[t,n]=pN(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function DE(e,t){if(e===hN.UPLOAD)return dN.PACKED_2X2_FLOAT32;if(e===hN.RENDER||null==e)return function(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dN.PACKED_2X2_FLOAT32:dN.UNPACKED_FLOAT32:e?dN.PACKED_2X2_FLOAT16:dN.UNPACKED_FLOAT16}(t);if(e===hN.DOWNLOAD||e===hN.PIXELS)return dN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _E(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class OE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const LE="if (isnan(x)) return x;",ME="return x;",zE="return abs(x);";const PE="return (x >= 0.0) ? x : (exp(x) - 1.0);",BE=LE+"\n  return (x < 0.0) ? 0.0 : x;\n",WE=LE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",UE="return x;",VE="return 1.0 / (1.0 + exp(-1.0 * x));",GE="return x;",HE="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",jE="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",KE="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qE="return 1.0 / (1.0 + exp(-1.0 * x));";class XE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class YE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length);const t=e.length,n=TE("rc",t),s=iT(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const JE=yh,ZE={};const QE=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class eR extends u{nextDataId(){return eR.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof AT)t=e;else{const n=uN(X().getNumber("WEBGL_VERSION"),e);t=new AT(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=uN(X().getNumber("WEBGL_VERSION"));t=new AT(e),this.binaryCache=((n=X().getNumber("WEBGL_VERSION"))in ZE||(ZE[n]={}),ZE[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new AE(this.gpgpu),this.numMBBeforeWarning=null==X().global.screen?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new l(this,Vr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=FN(t),u=new yT(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:hN.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,r){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:hN.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new XE(i,UE):new OE(i,UE);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=Ps()),"complex64"===s){c=Mc(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Ps()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new XE(s,UE):new OE(s,UE);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===X().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&X().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...fN(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Mc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=x(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;bN(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Vr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new XE(r,UE):new OE(r,UE);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Vr().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Ws(e)));return Ma(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ma(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!xN(n)){if(X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=x(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...fN(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=X().getBool("WEBGL_PACK")&&!0===s,i=a?FN(t):t,o=a?new bT(i):new mT(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Vs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Vs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ps(),endMs:null}}endTimer(e){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ps(),e)}async getQueryTime(e){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:QE;return X().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&x(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ds("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return JE(e.shape,t)}packedUnaryOp(e,t,n){const s=new XE(e.shape,t),r=this.compileAndRun(s,[e],n);return Vr().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=hE(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,zE,e.dtype);const t=new OE(e.shape,zE),n=this.compileAndRun(t,[e]);return Vr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A(n[0])){const r=n.map((e=>Bs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Vr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new YE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new EE(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[RN(e.shape),...AN(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[RN(t),...AN(t)],a=new RE(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(null!=t){g(x(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=FN(r);let o;o=s?new gT(i):new fT(i);const l=[null!=t?t:fN(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===cN.DENSE){const t=null!=a?a:fN(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===x(i.shape))return o.values=N(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&x(t.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_N(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=oT(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=L(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&y(t.shape,a),f=1===x(t.shape),g=li(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&y(a,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${d}_${m}_${i?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${X().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>cT(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),X().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(dT(t.inShapeInfos,n),dT([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===X().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const s=n[l],{uniform:r,offset:a,shape:i,texShape:o}=t.variablesLocations[l];if(i){const{uniformShape:n}=oT(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,s.texData.texShape[0],s.texData.texShape[1]),null!=r)if(s.isUniform)if(x(s.shape)<2)e.gl.uniform1f(r,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=s.texData.slice&&null!=a&&e.gl.uniform1i(a,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,r,l)}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=L(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],s=t.customUniformLocations[l],a=r[l];if("float"===n.type)e.gl.uniform1fv(s,a);else if("vec2"===n.type)e.gl.uniform2fv(s,a);else if("vec3"===n.type)e.gl.uniform3fv(s,a);else if("vec4"===n.type)e.gl.uniform4fv(s,a);else if("int"===n.type)e.gl.uniform1iv(s,a);else if("ivec2"===n.type)e.gl.uniform2iv(s,a);else if("ivec3"===n.type)e.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,a)}}e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=X().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=Ps();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!X().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Hr((()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=X().getBool("DEBUG");X().set("DEBUG",!1);const t=this.abs(qa(1e-8)).dataSync()[0];if(X().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ps());let c=t.texShape;if(null==c&&(c=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=X().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&X().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?p(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=$(e);e=t.newShape}let r=x(e),a=null;e.length<=1&&r<=n?a=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=RN(e);let n=2,s=2;e.length&&([n,s]=AN(e)),r=t*(n/2)*(s/2),a=w(r).map((e=>2*e))}else a=w(r);return a}(n,o),t.texShape=c),null!=r){const e=FN(n);let a,i=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,h]=gN(c[0],c[1])),a=o?new vT(e,d):new yT(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,s),g=this.texData.get(f.dataId);g.usage=d?hN.PIXELS:hN.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const m=[[h,i]],b=!0,x=this.runWebGLProgram(a,[f],s,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,X().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ps()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*R(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await uc(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw wN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=hT(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:a,channels:i}=e,o=Vr().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,a,i);return Vr().makeTensorFromDataId(l,t,n,o)}}eR.nextDataId=0;Rr()&&qr("webgl",(()=>new eR),2);const tR="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class nR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ci(t,n),this.enableShapeUniforms=pT(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const sR="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class rR{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ci(t,n);const r=this.outputShape.length;this.enableShapeUniforms=pT(r);let a="";if(s)if(0===r||1===x(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${iT(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=TE("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function aR(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iR={kernelName:gt,backendName:"webgl",kernelFunc:aR};function oR(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=aR({inputs:{x:s},backend:n}),l=aR({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const lR={kernelName:$e,backendName:"webgl",kernelFunc:oR},uR="return (a < 0.) ? b * a : a;",cR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const hR={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Ms(a,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rR(cR,r.shape,i.shape):new nR(uR,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},dR="return (a < 0.) ? b * a : a;",pR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const fR={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rR(pR,s.shape,r.shape):new nR(dR,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}},gR="if (isnan(x)) return x;";function mR(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:s,dtype:r}=e;return e=>{let{inputs:a,backend:i}=e;const{x:o}=a,l=i,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=s){const e=l.texData.get(o.dataId),t=s(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new XE(o.shape,n):new OE(o.shape,t),l.runWebGLProgram(c,[o],u)}}function bR(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:s=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e;const{a:u,b:c}=o,h=l;if(r&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[s,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:s.dataId,dtype:s.dtype,shape:c.shape},i=new nR(t,u.shape,c.shape);return h.runWebGLProgram(i,[r,a],fr(n.dtype,s.dtype))})),a=oR({inputs:{real:s,imag:r},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(r),a}const d=i||fr(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([u,c]))&&null!=a){const e=h.texData.get(u.dataId).values,t=h.texData.get(c.dataId).values,n="string"===u.dtype?bh(e):e,s="string"===u.dtype?bh(t):t,[r,i]=a(u.shape,c.shape,n,s,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=r,o}let p;return p=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new rR(n,u.shape,c.shape,s):new nR(t,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function xR(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?GE:ME;if("relu"===e)return t?jE:BE;if("elu"===e)return t?HE:PE;if("relu6"===e)return t?KE:WE;if("prelu"===e)return t?pR:dR;if("leakyrelu"===e)return t?cR:uR;if("sigmoid"===e)return t?qE:VE;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class yR{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pT(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}const vR={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class wR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ci(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const kR="return a * b;";function IR(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=fr(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new wR(vR.REAL,s.shape,r.shape),i=new wR(vR.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=oR({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=eE(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rR(kR,s.shape,r.shape):new nR(kR,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const CR={kernelName:Ht,backendName:"webgl",kernelFunc:IR};function SR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=x(r.shape),l=C(a,o),u=x(l);g(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||_N(r.shape,l)||null!==c.texture&&_N(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[RN(e.shape),...AN(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[RN(t),...AN(t)],i=new RE(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const $R={kernelName:dn,backendName:"webgl",kernelFunc:SR};class NR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${v(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class TR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function ER(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=xc(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new NR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new NR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new TR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class RR{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const s=iT(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class AR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=iT(this.rank),r=NE("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function FR(e,t,n){const s=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AR(e.shape,t):new RR(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function DR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=S(r,e.shape);let o=i;const l=ul(o,a),u=null!=l;let c=e;u&&(c=FR(e,l,s),o=hl(o.length,a)),ll("sum",o,a);const[h,d]=il(c.shape,o);let p=h;n&&(p=ol(h,i));const f=x(d),g=SR({inputs:{x:c},attrs:{shape:[x(e.shape)/f,f]},backend:s}),m=ER(g,gr(e.dtype),"sum",s),b=SR({inputs:{x:m},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(m),u&&s.disposeIntermediateTensorInfo(c),b}(r,a,i,n)}const _R={kernelName:Dn,backendName:"webgl",kernelFunc:DR};function OR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=SE(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype);i.texData.get(u.dataId).values=t}else u=FR(r,a,i);return u}const LR={kernelName:ts,backendName:"webgl",kernelFunc:OR},MR=1e3;function zR(e){let{a:t,b:n,transposeA:s,transposeB:r,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,h=n.shape.length,d=s?t.shape[c-2]:t.shape[c-1],p=r?n.shape[h-1]:n.shape[h-2],f=s?t.shape[c-1]:t.shape[c-2],m=r?n.shape[h-2]:n.shape[h-1],b=t.shape.slice(0,-2),y=n.shape.slice(0,-2),v=x(b),w=x(y),k=ci(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);g(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${s} and transposeB=${r} must match.`));const I=s?[v,d,f]:[v,f,d],C=r?[w,m,p]:[w,p,m],S=SR({inputs:{x:t},backend:a,attrs:{shape:I}}),$=SR({inputs:{x:n},backend:a,attrs:{shape:C}}),N=[S,$],T=Math.max(v,w),E=s?S.shape[1]:S.shape[2],R=null!=i,A=null!=o,F="leakyrelu"===u,D=null!=u?xR(u,!0):null;let _;if((1===f||1===m)&&E>MR&&!1===(R||A||F||null!=D)){let e=S,t=$;s&&(e=OR({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=OR({inputs:{x:$},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let i=e;1!==m&&(i=SR({inputs:{x:e},backend:a,attrs:{shape:[T,E,1]}}),N.push(i));const o=1===m?2:1;let l=t;n&&(l=SR({inputs:{x:t},backend:a,attrs:{shape:[T,1,E]}}),N.push(l));const u=IR({inputs:{a:i,b:l},backend:a});_=DR({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const e=fr(t.dtype,n.dtype),u=new yR(I,C,[T,f,m],s,r,R,D,A,F),c=[S,$];if(null!=i&&c.push(i),A&&c.push(o),F){const e=a.makeTensorInfo([],"float32",Ms(l,"float32"));c.push(e),N.push(e)}_=a.runWebGLProgram(u,c,e)}const O=SR({inputs:{x:_},backend:a,attrs:{shape:k}});N.push(_);for(const g of N)a.disposeIntermediateTensorInfo(g);return O}const PR={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return zR({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},BR="return abs(x);";const WR={kernelName:ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=hE(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new XE(s.shape,BR):new OE(s.shape,BR),n.runWebGLProgram(r,[s],s.dtype)}},UR=mR({opSnippet:LE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),VR={kernelName:te,backendName:"webgl",kernelFunc:UR},GR=mR({opSnippet:LE+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),HR={kernelName:ne,backendName:"webgl",kernelFunc:GR},jR="return a + b;",KR=bR({opSnippet:jR,packedOpSnippet:jR,supportsComplex:!0,cpuKernelImpl:FT}),qR={kernelName:se,backendName:"webgl",kernelFunc:KR};class XR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class YR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const JR={kernelName:re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return aR({inputs:{x:r[0]},backend:s});if(r.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>fr(e,t))),i=r.map((e=>e.shape)),o=X().getBool("WEBGL_PACK")?new YR(r[0].shape,i):new XR(r[0].shape,i);return s.runWebGLProgram(o,r,a)}};const ZR={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=S(a,r.shape);let u=l;const c=ul(u,o);let h=r;null!=c&&(h=OR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hl(u.length,o)),ll("all",u,o);const[d,p]=il(h.shape,u),f=SR({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),g=ER(f,f.dtype,"all",n);let m;if(i){m=SR({inputs:{x:g},backend:n,attrs:{shape:ol(d,l)}})}else m=SR({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};const QR={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=S(a,r.shape);let u=l;const c=ul(u,o);let h=r;null!=c&&(h=OR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hl(u.length,o)),ll("any",u,o);const[d,p]=il(h.shape,u),f=SR({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),g=ER(f,f.dtype,"any",n);let m;if(i){m=SR({inputs:{x:g},backend:n,attrs:{shape:ol(d,l)}})}else m=SR({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class eA{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class tA{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,g(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=iT(o),u=TE("coords",o);let c,h;if(1===a){h=o+1;const e=iT(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=TE("sourceLocR",h-1).concat("inIdx.r"),b=TE("sourceLocG",h-1).concat("inIdx.g"),x=TE("sourceLocB",h-1).concat("inIdx.b"),y=TE("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function nA(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=xc(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new eA(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=nA(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function sA(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=s?s.shape:t.shape,a=xc(r[r.length-1]),i=new tA(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=sA(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function rA(e,t,n,s){const r=[n];if(ll("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=il(i.shape,r),u=x(l),c=SR({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=nA(e,c,s);n.push(h);const d=SR({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return sA(e,t,s)}const aA={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=S(a,r.shape);const o=ul(i,r.shape.length);let l=r;const u=[];null!=o&&(l=OR({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hl(i.length,l.shape.length)),ll("argMax",[i[0]],l.shape.length);const c=rA(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const iA={kernelName:le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=S(a,r.shape);const o=ul(i,r.shape.length);let l=r;const u=[];null!=o&&(l=OR({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hl(i.length,l.shape.length)),ll("argMin",[i[0]],l.shape.length);const c=rA(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},oA=mR({opSnippet:LE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),lA={kernelName:ue,backendName:"webgl",kernelFunc:oA},uA=mR({opSnippet:LE+"return log(x + sqrt(x * x + 1.0));"}),cA={kernelName:ce,backendName:"webgl",kernelFunc:uA},hA=mR({opSnippet:LE+"\n  return atan(x);\n"}),dA={kernelName:he,backendName:"webgl",kernelFunc:hA},pA=bR({opSnippet:tR+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sR+"\n  return result;\n"}),fA={kernelName:pe,backendName:"webgl",kernelFunc:pA},gA=mR({opSnippet:LE+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),mA={kernelName:de,backendName:"webgl",kernelFunc:gA};class bA{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class xA{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const yA={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;WN(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;g(fo(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=so(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return aR({inputs:{x:r},backend:n});const c=new bA(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};const vA={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=ro(r.shape,a,i,[1,1,1],o,l,u),h=new xA(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class wA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const IA={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=ro(i.shape,o,l,[1,1,1],u,c),d=new kA(h);return n.runWebGLProgram(d,[r],i.dtype)}};const CA={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;WN([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=so(i.shape,o,l,1,u),h=new wA(c);return n.runWebGLProgram(h,[r],i.dtype)}};const SA={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return zR({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class $A{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ci(e,t),ci(e,n);let i="0.0";null!=s&&(ci(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ci(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class NA{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ci(e,t),ci(e,n);let i="vec4(0.0)";null!=s&&(ci(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ci(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const TA={kernelName:ct,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:r,mean:a,variance:i,offset:o,scale:l}=t;g(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),g(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),g(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=[r,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=X().getBool("WEBGL_PACK_NORMALIZATION")?new NA(r.shape,a.shape,i.shape,h,d,u):new $A(r.shape,a.shape,i.shape,h,d,u);return n.runWebGLProgram(p,c,c[0].dtype)}};class EA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=iT(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return RA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${RA[t]} = start[${t}] + coords.${RA[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const RA=["x","y","z","w","u","v"];class AA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=iT(this.rank),n=TE("coords",this.rank),s=TE("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function FA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=Yi(r,a,i);if(Li(r,o,l),0===x(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=dE(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=qi(r.shape,o,l);if(u||!c){const e=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AA(l):new EA(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Xi(t,L(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const DA={kernelName:$n,backendName:"webgl",kernelFunc:FA},_A={kernelName:ye,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;g(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=vc(r.shape,a,o),u=wc(l.length,a.length),c=kc(r.shape,a,o),h=Ic(i,a.length),d=Cc(c,i,a.length),p=[],f=SR({inputs:{x:r},backend:n,attrs:{shape:l}}),m=OR({inputs:{x:f},backend:n,attrs:{perm:u}}),b=SR({inputs:{x:m},backend:n,attrs:{shape:c}}),x=FA({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(b),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const OA={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=DT(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}};const LA={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=X().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||1===i){const e=n.texData.get(s.dataId).values,t=n.texData.get(r.dataId).values,[a,i]=OT(s.shape,r.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new rR("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,r.shape,!1):new nR("\n  return float(int(a.r) & int(b.r));\n",s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}};const MA={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=ci(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},zA=bR({opSnippet:"return float(a != b);",cpuKernelImpl:nE,dtype:"bool"}),PA={kernelName:Kt,backendName:"webgl",kernelFunc:zA};function BA(e){const{inputs:t,backend:n}=e,{input:s}=t;return aR({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const WA={kernelName:un,backendName:"webgl",kernelFunc:BA},UA="return float(int(x));";const VA={kernelName:Ie,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return aR({inputs:{x:a},backend:s});const t=Cl(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=oR({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=BA({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!E(a.dtype,i)){const e=aR({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=LT(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new OE(e.shape,UA),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",N("bool",1)),t=zA({inputs:{a:a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},GA="return ceil(x);",HA=mR({opSnippet:GA,packedOpSnippet:GA,cpuKernelImpl:MT}),jA={kernelName:Ce,backendName:"webgl",kernelFunc:HA};class KA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class qA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const XA={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=X().getBool("WEBGL_PACK_CLIP")?new qA(r.shape):new KA(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class YA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function JA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const ZA={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new YA(s.shape),i=[JA(s,r.complexTensorInfos.real),JA(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class QA{constructor(e){this.outputShape=[],this.outputShape=hc(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class eF{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hc(e,t);const n=this.outputShape,s=n.length,r=iT(s),a=TE("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${tF(i,l,e)}),\n            vec2(${tF(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${tF(i,l,p)}),\n          vec2(${tF(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function tF(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function nF(e){const{inputs:t,backend:n}=e,{input:s}=t;return aR({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const sF={kernelName:bt,backendName:"webgl",kernelFunc:nF};function rF(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>BA({inputs:{input:e},backend:n}))),r=e.map((e=>nF({inputs:{input:e},backend:n}))),a=rF(s,t,n),i=rF(r,t,n),o=oR({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=x(e.shape.slice(t));return SR({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=hc(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=zT(a,i,s,o),u=hc(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>x(e.shape)>0)),i=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new OE(e[0].shape,UE):new XE(e[0].shape,UE);return n.runWebGLProgram(t,e,s)}const o=X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(rF(s,t,n))}const s=rF(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new eF(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,s)}const{tensors2D:l,outShape:u}=function(e,t,n){const s=hc(e.map((e=>e.shape)),t),r=e.map((e=>SR({inputs:{x:e},attrs:{shape:[-1,x(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:s}}(a,t,n),c=new QA(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=SR({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function aF(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=S(r,t[0].shape)[0];cc(t.map((e=>e.shape)),a);const i=hc(t.map((e=>e.shape)),a);if(0===x(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>x(e.shape)>0));return 1===o.length?aR({inputs:{x:o[0]},backend:n}):rF(o,a,n)}const iF={kernelName:Te,backendName:"webgl",kernelFunc:aF};class oF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class lF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pT(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let p=0;p<u;p++)h+=`\n           vec4 xTexelC${2*p};\n           int xTexelC${2*p}Ready;\n           vec4 xTexelC${2*p+1};\n           int xTexelC${2*p+1}Ready;\n           vec4 xC${p};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let p=0;p<u;p++)h+=`\n           xTexelC${2*p} = vec4(0.0);\n           xTexelC${2*p}Ready = 0;\n           xTexelC${2*p+1} = vec4(0.0);\n           xTexelC${2*p+1}Ready = 0;\n           xC${p} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(a%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=a%2===0?p(o):o;o%2===0&&a%2===1||o%2!==0&&a%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(a%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class cF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pT(this.outputShape.length);const{dataFormat:n}=t,s=VN(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function hF(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function dF(e){let{x:t,filter:n,convInfo:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=t.shape,c=r.texData.get(t.dataId),h=s.inChannels,d=u[0]*u[1]*u[2],p=s.outChannels,f="channelsLast"===s.dataFormat,m=!1;let b;const x=[];if(null!=i){const e=hF(i.shape,f);null!=e&&(i=SR({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=a){const e=hF(a.shape,f);null!=e&&(a=SR({inputs:{x:a},backend:r,attrs:{shape:e}}),x.push(a))}if(!((1===d||1===p)&&h>MR)&&c.isPacked&&f&&null!=c.texture&&u[2]%2!==0&&y(c.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,s.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,g(_N(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const p=SR({inputs:{x:n},backend:r,attrs:{shape:[1,s.inChannels,s.outChannels]}});x.push(p);const f=zR({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),y=r.texData.get(f.dataId);g(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,y.shape=s.outShape,b=aR({inputs:{x:f},backend:r}),b.shape=s.outShape,x.push(f)}else{const e=s.outHeight*s.outWidth,u=SR({inputs:{x:t},backend:r,attrs:{shape:f?[s.batchSize,e,s.inChannels]:[s.batchSize,s.inChannels,e]}}),c=SR({inputs:{x:n},backend:r,attrs:{shape:[1,s.inChannels,s.outChannels]}}),h=zR({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:m,backend:r,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});b=SR({inputs:{x:h},backend:r,attrs:{shape:s.outShape}}),x.push(u),x.push(c),x.push(h)}for(const g of x)r.disposeIntermediateTensorInfo(g);return b}function pF(e){let{x:t,filter:n,convInfo:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=s,g="channelsLast"===f,m=u*c*h,b=p*d,y=[s.batchSize,m,b],v=[];if(null!=i){const e=hF(i.shape,g);null!=e&&(i=SR({inputs:{x:i},backend:r,attrs:{shape:e}}),v.push(i))}if(null!=a){const e=hF(a.shape,g);null!=e&&(a=SR({inputs:{x:a},backend:r,attrs:{shape:e}}),v.push(a))}const w=SR({inputs:{x:n},backend:r,attrs:{shape:[1,m,x(n.shape)/m]}});v.push(w);const k=new cF(y,s),I=[t.shape,[s.padInfo.top,s.padInfo.left],[s.strideHeight,s.strideWidth],[s.dilationHeight,s.dilationWidth],[s.inChannels],[s.filterWidth*s.inChannels],[s.outWidth]],C=r.runWebGLProgram(k,[t],"float32",I),S=SR({inputs:{x:C},backend:r,attrs:{shape:y}});v.push(C),v.push(S);const $=null!=a,N=null!=i,T="leakyrelu"===l,E=l?xR(l,!0):null,R=new yR(g?S.shape:w.shape,g?w.shape:S.shape,g?[s.batchSize,b,s.outChannels]:[s.batchSize,s.outChannels,b],!0,!1,$,E,N,T),A=g?[S,w]:[w,S];if(a&&A.push(a),N&&A.push(i),T){const e=r.makeTensorInfo([],"float32",Ms(o,"float32"));A.push(e),v.push(e)}const F=r.runWebGLProgram(R,A,"float32"),D=SR({inputs:{x:F},backend:r,attrs:{shape:s.outShape}});v.push(F);for(const x of v)r.disposeIntermediateTensorInfo(x);return D}const fF={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=mo(l),d=ao(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&X().getBool("WEBGL_EXP_CONV")){const e=new uF(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,a],"float32",t)}else if(X().getBool("WEBGL_CONV_IM2COL"))p=pF({x:r,filter:a,convInfo:d,backend:n});else{const e=new oF(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=dF({x:r,filter:a,convInfo:d,backend:n});const f=SR({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class gF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yF={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=mo(l),d=ao(r.shape,c,i,1,o,u,!1,h),p=new gF(d);return n.runWebGLProgram(p,[r,a],"float32")}};class vF{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=pT(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const wF={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=mo(u),d=ao(i,a.shape,o,1,l,c,!1,h);if(X().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new vF(d);return n.runWebGLProgram(t,[r,a],"float32",e)}{const e=new mF(d);return n.runWebGLProgram(e,[r,a],"float32")}}};const kF={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=io(r.shape,a.shape,i,l,o),c=new lF(u);return n.runWebGLProgram(c,[r,a],"float32")}};const IF={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=io(r.shape,l,i,1,o),c=new bF(u);return n.runWebGLProgram(c,[r,a],"float32")}};const CF={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=io(l,a.shape,o,1,i),c=new xF(u);return n.runWebGLProgram(c,[r,a],"float32")}},SF=mR({opSnippet:gR+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${sR}\n  return result;\n`}),$F={kernelName:Oe,backendName:"webgl",kernelFunc:SF},NF=mR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),TF={kernelName:Le,backendName:"webgl",kernelFunc:NF};class EF{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const RF={kernelName:Pe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new EF(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var AF;!function(e){e.Prod="*",e.Sum="+"}(AF||(AF={}));class FF{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===AF.Prod?"1.0":"0.0",i=n?a:`getX(${DF(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${iT(r)} coords = getOutputCoords();\n        int end = ${_F(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${_F(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${DF(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function DF(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function _F(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function OF(e,t,n,s,r,a){const i=t.shape.length,o=ul([s],i);let l=t;null!=o&&(l=OR({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=hl(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=aR({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new FF(e,l.shape,!1,a),s=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,s),n.disposeIntermediateTensorInfo(r)}if(r){const t=new FF(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=OR({inputs:{x:h},backend:n,attrs:{perm:cl(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const LF={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return OF(AF.Prod,r,n,a,i,o)}};const MF={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return OF(AF.Sum,r,n,a,i,o)}};const zF={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=DT(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=_T(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class PF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const BF={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new PF("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class WF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pT(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class UF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pT(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let p=0;p<c;p++)d+=`\n          vec4 xTexelC${2*p};\n          int xTexelC${2*p}Ready;\n          vec4 xTexelC${2*p+1};\n          int xTexelC${2*p+1}Ready;\n          vec4 xC${p};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let p=0;p<c;p++)d+=`\n          xTexelC${2*p} = vec4(0.0);\n          xTexelC${2*p}Ready = 0;\n          xTexelC${2*p+1} = vec4(0.0);\n          xTexelC${2*p+1}Ready = 0;\n          xC${p} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2===0?p(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",g="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const VF={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),g(fo(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=ao(r.shape,a.shape,i,c,o,u,!0);let d;d=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new UF(h):new WF(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}};class GF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jF={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ao(r.shape,c,i,o,l,u,!0),d=new GF(h);return n.runWebGLProgram(d,[r,a],"float32")}};const KF={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ao(c,a.shape,i,o,l,u,!0),d=new HF(h);return n.runWebGLProgram(d,[r,a],"float32")}};class qF{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const XF={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=x(s.shape),i=SR({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new qF(a),l=n.runWebGLProgram(o,[i],i.dtype),u=SR({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class YF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const JF={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=no(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new YF(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=SR({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const ZF={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Xc(r,a.length);Jc(i.length,l,a);const{path:u,steps:c}=Zc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=Yc(p,l[e]);let r;Qc(t)?r=a[e]:(r=OR({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);y(r.shape,i)||(r=SR({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=IR({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=DR({inputs:{x:d},backend:n,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}},QF=mR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),eD={kernelName:Ze,backendName:"webgl",kernelFunc:QF},tD={kernelName:Qe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new nR("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},nD=bR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:PT}),sD={kernelName:tt,backendName:"webgl",kernelFunc:nD},rD=mR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ac};\n  float a1 = ${Fc};\n  float a2 = ${Dc};\n  float a3 = ${_c};\n  float a4 = ${Oc};\n  float a5 = ${Lc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),aD={kernelName:et,backendName:"webgl",kernelFunc:rD},iD=mR({opSnippet:gR+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:BT,dtype:"float32"}),oD={kernelName:nt,backendName:"webgl",kernelFunc:iD};function lD(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(g(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),SR({inputs:{x:a},backend:s,attrs:{shape:o}})}const uD={kernelName:st,backendName:"webgl",kernelFunc:lD},cD="return exp(x) - 1.0;",hD=mR({opSnippet:cD,packedOpSnippet:cD,cpuKernelImpl:WT}),dD={kernelName:rt,backendName:"webgl",kernelFunc:hD};class pD{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function fD(e,t,n){const s=n.texData.get(e.dataId),r=x(e.shape),a=e.shape[e.shape.length-1],i=SR({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new pD("real",o,t),u=new pD("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=oR({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=SR({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const gD={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return fD(s,!1,n)}};class mD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function bD(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||D(r),"string"===a){const e=T(a,x(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new mD(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const xD={kernelName:it,backendName:"webgl",kernelFunc:bD};class yD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vD={kernelName:ot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:s}=t,r=n,a=new yD(s.shape);return r.runWebGLProgram(a,[s],s.dtype)}},wD="return floor(x);",kD=mR({opSnippet:wD,packedOpSnippet:wD,cpuKernelImpl:UT}),ID={kernelName:lt,backendName:"webgl",kernelFunc:kD},CD=bR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),SD={kernelName:ut,backendName:"webgl",kernelFunc:CD};class $D{constructor(e){this.variableNames=["A"];const t=VN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ND{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=VN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const TD={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(o||i){const e=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=ED&&e===RD||(RD=e,ED=document.createElement("canvas").getContext("2d",{willReadFrequently:RD})),ED.canvas.width=l,ED.canvas.height=u,ED.drawImage(r,0,0,l,u),r=ED.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=hN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=X().getBool("WEBGL_PACK")?new ND(h):new $D(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let ED,RD=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const AD={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=mo(c),m=ao(r.shape,a.shape,l,h,u,d,!1,g);let b;const x=[],y=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=SR({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Ms(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&X().getBool("WEBGL_EXP_CONV")){const e=p?xR(p,!0):null,t=new uF(m,y,e,v,w),s=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],r=k();b=n.runWebGLProgram(t,r,"float32",s)}else if(X().getBool("WEBGL_CONV_IM2COL"))b=pF({x:r,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?xR(p,!1):null,t=new oF(m,y,e,v,w),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=dF({x:r,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=SR({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const FD={kernelName:hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;null==m&&(m=[1,1]),g(fo(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const b=ao(r.shape,a.shape,l,m,u,h,!0),x=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,y=d?xR(d,x):null,v=[r,a],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Ms(p,"float32"));v.push(e),f.push(e)}let C;C=x?new UF(b,w,y,k,I):new WF(b,w,y,k,I);const S=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],$=n.runWebGLProgram(C,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class DD{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=iT(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const _D={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=x(s.shape),[l,u,c,h]=Sc(s,r),d=SR({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),p=SR({inputs:{x:s},backend:n,attrs:{shape:[x(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=VT(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new DD(i,h,[u,c],s.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=SR({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class OD{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=iT(this.rank),s=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)2===s?n.push("index"):n.push(`${t[s]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function LD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=S(i,r.shape)[0];if(X().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];g(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=mh(r,a,l,o),c=x(a.shape),h=[],d=SR({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=SR({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=GT(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new OD(d.shape,f),b=n.runWebGLProgram(m,[d,p],d.dtype);h.push(b);const y=SR({inputs:{x:b},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const MD={kernelName:ht,backendName:"webgl",kernelFunc:LD},zD=bR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:HT,dtype:"bool"}),PD={kernelName:pt,backendName:"webgl",kernelFunc:zD},BD=bR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:jT}),WD={kernelName:ft,backendName:"webgl",kernelFunc:BD};const UD={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return fD(s,!0,n)}},VD=mR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),GD={kernelName:xt,backendName:"webgl",kernelFunc:VD},HD=mR({opSnippet:"return float(isinf(x));",dtype:"bool"}),jD={kernelName:yt,backendName:"webgl",kernelFunc:HD},KD=mR({opSnippet:"return float(isnan(x));",dtype:"bool"}),qD={kernelName:vt,backendName:"webgl",kernelFunc:KD},XD=bR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:KT,dtype:"bool"}),YD={kernelName:kt,backendName:"webgl",kernelFunc:XD},JD=bR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:qT,dtype:"bool"}),ZD={kernelName:It,backendName:"webgl",kernelFunc:JD};const QD={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=XT(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},e_=mR({opSnippet:gR+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:YT}),t_={kernelName:St,backendName:"webgl",kernelFunc:e_},n_=mR({opSnippet:gR+"\n  return log(1.0 + x);\n"}),s_={kernelName:$t,backendName:"webgl",kernelFunc:n_},r_=bR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),a_={kernelName:Nt,backendName:"webgl",kernelFunc:r_},i_=mR({opSnippet:"return float(!(x >= 1.0));"}),o_={kernelName:Tt,backendName:"webgl",kernelFunc:i_},l_=bR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),u_={kernelName:Et,backendName:"webgl",kernelFunc:l_};class c_{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class h_{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const d_={kernelName:Rt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=X().getBool("WEBGL_PACK_NORMALIZATION")?new h_(r.shape,a,i,o,l):new c_(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class p_{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const f_={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new p_(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function g_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=S(a,r.shape);let u=l;const c=ul(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=r.shape[c[n]];const s=SE(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=s}else p=FR(r,c,n);u=hl(u.length,o)}ll("max",u,o);const[f,g]=il(p.shape,u);let m,b=f;if(i&&(b=ol(f,l)),d){const e=n.texData.get(p.dataId).values,t=JT(e,x(g),b,r.dtype);m=n.makeTensorInfo(b,r.dtype);n.texData.get(m.dataId).values=t}else m=function(e,t,n,s){const r=x(t),a=SR({inputs:{x:e},attrs:{shape:[x(e.shape)/r,r]},backend:s}),i=ER(a,e.dtype,"max",s),o=SR({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const m_={kernelName:Ft,backendName:"webgl",kernelFunc:g_},b_=bR({opSnippet:tR+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sR+"\n  return result;\n",cpuKernelImpl:ZT}),x_={kernelName:Dt,backendName:"webgl",kernelFunc:b_};const y_={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;WN(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;g(fo(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=so(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return aR({inputs:{x:r},backend:n});const c=new bA(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};const v_={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=ro(r.shape,a,i,[1,1,1],o,u,l),h=new xA(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class w_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class k_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const I_={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=ro(i.shape,o,l,[1,1,1],u,c),d=new xA(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new k_(h),g=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}};const C_={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;WN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=so(o.shape,l,u,1,c,h),p=new bA(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new w_(d),m=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}};const S_={kernelName:zt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:r}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=s;g(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];g(fo(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=so(r.shape,a,i,c,o),[d,p]=function(e,t,n,s){let r=new bA(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new bA(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(r,l,h,u);return[d,p]}};const $_={kernelName:Pt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:r}=t,{keepDims:a,axis:i}=n,o=s,l=r.shape.length,u=S(i,r.shape);let c=u;const h=ul(c,l),d=null!=h,p=o.shouldExecuteOnCPU([r]),f=[];let g=r;if(d){if(p){const e=o.texData.get(g.dataId).values,t=new Array(l);for(let s=0;s<t.length;s++)t[s]=r.shape[h[s]];const n=SE(e,r.shape,r.dtype,h,t);g=o.makeTensorInfo(t,r.dtype);o.texData.get(g.dataId).values=n}else g=FR(r,h,o);f.push(g),c=hl(c.length,l)}ll("sum",c,l);const[m,b]=il(g.shape,c);let y=m;a&&(y=ol(m,u));const v=function(e,t,n,s){const r=x(t),a=SR({inputs:{x:e},attrs:{shape:[x(e.shape)/r,r]},backend:s}),i=ER(a,"float32","mean",s),o=SR({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(g,b,y,o);for(const x of f)o.disposeIntermediateTensorInfo(x);return v}};const N_={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=S(a,r.shape);let u=l;const c=ul(u,o);let h=r;null!=c&&(h=OR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hl(u.length,r.shape.length)),ll("min",u,o);const[d,p]=il(h.shape,u),f=SR({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),g=ER(f,f.dtype,"min",n);let m;if(i){m=SR({inputs:{x:g},backend:n,attrs:{shape:ol(d,l)}})}else m=SR({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},T_=bR({opSnippet:tR+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sR+"\n  return result;\n",cpuKernelImpl:QT}),E_={kernelName:Wt,backendName:"webgl",kernelFunc:T_};class R_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=iT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class A_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=iT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TE("rc",s),l=TE("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const F_={kernelName:Ut,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:r}=t,{paddings:a,mode:i}=s,o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new A_(r.shape,a,i):new R_(r.shape,a,i);return n.runWebGLProgram(o,[r],r.dtype)}},D_=bR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+sR+"\n  return result;\n"}),__={kernelName:Vt,backendName:"webgl",kernelFunc:D_};class O_{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const L_=bR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),M_={kernelName:Ye,backendName:"webgl",kernelFunc:L_},z_="return a - b;",P_=bR({opSnippet:z_,packedOpSnippet:z_,supportsComplex:!0,cpuKernelImpl:kE}),B_={kernelName:Xn,backendName:"webgl",kernelFunc:P_};function W_(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=S([a],r.shape),o=g_({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=ol(o.shape,i),u=SR({inputs:{x:o},backend:n,attrs:{shape:l}}),c=P_({inputs:{a:r,b:u},backend:n}),h=iD({inputs:{x:c},backend:n}),d=DR({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=SR({inputs:{x:d},backend:n,attrs:{shape:l}}),f=L_({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const U_={kernelName:Ln,backendName:"webgl",kernelFunc:W_};const V_={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:W_({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new O_(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},G_=LE+"\n  return -x;\n";const H_={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=tE(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new XE(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new OE(s.shape,G_),n.runWebGLProgram(r,[s],s.dtype)}},j_=Au;const K_={kernelName:qt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=j_(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},q_=Fu;const X_={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=q_(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Y_=Du;const J_={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=Y_(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Z_{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Q_={kernelName:Zt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s,u=x(r.shape),c=new Z_(u,i,o,l),h=SR({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=SR({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function eO(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=BA({inputs:{input:s},backend:n}),t=eO({inputs:{x:e},backend:n}),r=nF({inputs:{input:s},backend:n}),a=eO({inputs:{x:r},backend:n}),i=oR({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return bD({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const tO={kernelName:as,backendName:"webgl",kernelFunc:eO};const nO={kernelName:Jt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=BA({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=nF({inputs:{input:r},backend:s}),i=eO({inputs:{x:a},backend:s}),o=oR({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return bD({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}};const sO={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return lD({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{m(a,e.shape,"All tensors passed to stack must have matching shapes"),g(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=aF({inputs:t.map((e=>{const t=lD({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class rO{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=iT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class aO{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=iT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TE("rc",s),l=TE("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===s?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const iO=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===x(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return bD({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aO(r.shape,a,i):new rO(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},oO={kernelName:en,backendName:"webgl",kernelFunc:iO},lO=bR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+sR+"\n  return result;\n"}),uO={kernelName:tn,backendName:"webgl",kernelFunc:lO};const cO={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=S(a,r.shape);let c=u;const h=ul(c,o);let d,p=r;if(null!=h&&(p=OR({inputs:{x:r},backend:n,attrs:{perm:h}}),c=hl(c.length,o),l.push(p)),ll("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=sE(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=il(p.shape,c),s=x(t),a=SR({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=ER(a,gr(r.dtype),"prod",n);d=SR({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=ol(d.shape,u);d=SR({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const hO={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=rE(l,u,c,a.shape,a.dtype,h,i.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}};const dO={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=aE(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};const pO={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=iE(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}},fO=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=oE(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},gO={kernelName:ln,backendName:"webgl",kernelFunc:fO},mO=mR({opSnippet:"return 1.0 / x;"}),bO={kernelName:cn,backendName:"webgl",kernelFunc:mO},xO=mR({opSnippet:LE+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yO={kernelName:hn,backendName:"webgl",kernelFunc:xO},vO=mR({opSnippet:LE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),wO={kernelName:bn,backendName:"webgl",kernelFunc:vO};class kO{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class IO{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const CO={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IO(r.shape,l,u,a,i):new kO(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class SO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const $O={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new SO(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class NO{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class TO{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const EO={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TO(r.shape,l,u,a,i):new NO(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class RO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const AO={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new RO(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class FO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=iT(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class DO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=TE("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=iT(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const _O={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=S(a,r.shape);if(0===i)return aR({inputs:{x:r},backend:n});const l=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DO(r.shape,o):new FO(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class OO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const LO={kernelName:ls,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:r}=t,{radians:a,fillValue:i,center:o}=n,l=s,u=new OO(r.shape,i),[c,h]=yc(o,r.shape[1],r.shape[2]),d=[[c,h,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[r],r.dtype,d)}},MO=mR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),zO={kernelName:yn,backendName:"webgl",kernelFunc:MO},PO=mR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:lE}),BO={kernelName:vn,backendName:"webgl",kernelFunc:PO};class WO{constructor(e,t,n,s,r,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=iT(r.length),l=iT(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class UO{constructor(e,t,n,s,r,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const o=iT(r.length),l=iT(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,g=t>1?"strides[j]":"strides",m=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${m};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const VO={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tc(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=SR({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=SR({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=X().getBool("WEBGL_PACK")?new UO(l,o,p.shape.length,f.shape.length,c,d):new WO(l,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=SR({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class GO{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===X().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const HO={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new GO(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class jO{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=iT(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const KO={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new jO(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],fr(r.dtype,a.dtype))}},qO=mR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ec};\n  float scale = ${Rc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),XO={kernelName:Sn,backendName:"webgl",kernelFunc:qO},YO=mR({opSnippet:gR+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:cE}),JO={kernelName:Rn,backendName:"webgl",kernelFunc:YO},ZO=mR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),QO={kernelName:En,backendName:"webgl",kernelFunc:ZO},eL=mR({opSnippet:gR+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${sR}\n  return result;\n`}),tL={kernelName:Nn,backendName:"webgl",kernelFunc:eL},nL=mR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),sL={kernelName:Tn,backendName:"webgl",kernelFunc:nL},rL=mR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),aL={kernelName:An,backendName:"webgl",kernelFunc:rL},iL={kernelName:_n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;g(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let g=1+a.length;g<r.shape.length;++g)l.push([0,0]);const u=[],c=iO({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=vc(c.shape,a,o,!1),d=wc(h.length,a.length,!1),p=kc(c.shape,a,o,!1),f=SR({inputs:{x:c},backend:n,attrs:{shape:h}}),m=OR({inputs:{x:f},backend:n,attrs:{perm:d}}),b=SR({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const oL={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=pE(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};const lL={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=fE(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const uL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=gE(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}};const cL={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=gE(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}};const hL={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Tc(0,r,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=Ws(n.readSync(i.dataId)[0]),f=uE(e,t,o,d,c,u,l,h,s,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new WO(u,l,r.shape.length,a.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[a,r,i],a.dtype),m=SR({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}};const dL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=S(i,r.shape)[0],l=th(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=FA({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},pL="return sqrt(x);",fL=mR({opSnippet:pL,packedOpSnippet:pL,cpuKernelImpl:mE}),gL={kernelName:Fn,backendName:"webgl",kernelFunc:fL},mL={kernelName:Vn,backendName:"webgl",kernelFunc:mR({opSnippet:"return x * x;"})},bL="return (a - b) * (a - b);",xL=bR({opSnippet:bL,packedOpSnippet:bL}),yL={kernelName:Un,backendName:"webgl",kernelFunc:xL};const vL={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const a=bh(n.readSync(r.dataId)),i=bE(a,"string",s);return n.makeTensorInfo(r.shape,"string",i)}};const wL={kernelName:is,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:s}=e;const{x:r}=t,a=LE+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new OE(r.shape,a);return s.runWebGLProgram(i,[r],r.dtype)}};class kL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=iT(n.length),a=iT(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const IL={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=Ji(r.shape,a,i,o,l,u,c,h,d);let k;if(m)k=SR({inputs:{x:r},backend:n,attrs:{shape:f}});else if(b||x){g(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=zi(y,v,w),t=FA({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=SR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ma(r.shape,r.dtype,e),s=xE(p,t,w,y);k=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new kL(y,w,p);k=n.runWebGLProgram(e,[r],r.dtype)}}const I=SR({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}};const CL={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=yE(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};const SL={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=vE(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const $L={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=wE(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},NL=mR({opSnippet:"return tan(x);"}),TL={kernelName:Yn,backendName:"webgl",kernelFunc:NL},EL=mR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),RL={kernelName:Jn,backendName:"webgl",kernelFunc:EL};const AL={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:r,indices:a,updates:i}=t,{}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tc(0,a,r.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,a.dtype);const p=SR({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=SR({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=SR({inputs:{x:r},backend:n,attrs:{shape:d}}),m=new WO(l,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),x=SR({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};class FL{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const s=iT(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function DL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Ws(e))):e,s=Ma(r.shape,r.dtype,t),i=IE(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new FL(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const _L={kernelName:Zn,backendName:"webgl",kernelFunc:DL};class OL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class LL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function ML(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function zL(e){let t=1;for(;t<e;)t*=2;return t}const PL={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=CE(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,bD({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=x(u)/c,g=SR({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&ML(n,p);const m=zL(a),b=zL(c);let y=null;const v=()=>null===y?[g,g]:[g,y],w=(e,t,s)=>{const r=v(),a=new OL(s),i=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(a,r,"int32",i),ML(n,o)};for(let x=1;x<m;x*=2){const e=2*x;for(let t=x;t>=1;t/=2)w(e,t,[f,b])}for(let x=b;x>m;x/=2){const e=v(),t=new LL([f,x/2]),s=[[c],[null===y?1:0],[m]],r=y;y=n.runWebGLProgram(t,e,"int32",s),ML(n,r);const a=m/2,i=2*a;for(let n=a;n>=1;n/=2)w(i,n,y.shape)}let k=y;y=FA({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,a]}}),ML(n,k);let I=LD({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});ML(n,g);const C=u.slice(0,-1);C.push(a),k=y,y=SR({inputs:{x:y},attrs:{shape:C},backend:n}),ML(n,k);const S=I;return I=SR({inputs:{x:I},attrs:{shape:C},backend:n}),ML(n,S),[I,y]}};class BL{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const WL={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=new BL(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[r,a],"float32")}};const UL={kernelName:ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;WN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=$E(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}};const VL={kernelName:ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==a&&(u[c++]=i.shape[g]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[a]=g;const e=FA({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=SR({inputs:{x:e},backend:n,attrs:{shape:u}});f[g]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class GL{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const HL={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=ul([u],o);let h=r;null!=c&&(h=OR({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=hl(1,o)[0]);const d=gh(h.shape,u,i),p=x([h.shape[u]]),f=SR({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=gr(r.dtype),m=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=fh(o,a),c=new GL({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=fO({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=DL({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});l.push(d),l.push(p);return m(h,t,p,r,a)},b=SR({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=cl(c);y=OR({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},jL=[PR,WR,VR,HR,qR,JR,ZR,QR,aA,iA,lA,cA,dA,fA,mA,yA,vA,IA,CA,SA,TA,_A,OA,LA,MA,VA,jA,XA,lR,ZA,iF,fF,yF,wF,kF,IF,CF,$F,TF,RF,LF,MF,zF,BF,VF,jF,KF,XF,JF,ZF,eD,tD,sD,aD,oD,uD,dD,gD,xD,vD,ID,SD,TD,AD,FD,_D,MD,PD,WD,iR,UD,sF,GD,jD,qD,hR,YD,ZD,QD,t_,s_,a_,o_,u_,d_,f_,m_,x_,y_,v_,I_,C_,S_,$_,N_,E_,F_,__,V_,CR,H_,K_,X_,J_,PA,Q_,nO,sO,oO,uO,fR,cO,hO,dO,pO,gO,WA,M_,bO,yO,wO,$R,CO,$O,EO,AO,_O,LO,zO,BO,VO,HO,KO,XO,JO,QO,tL,sL,DA,U_,aL,iL,oL,lL,uL,cL,hL,dL,gL,mL,yL,vL,wL,IL,CL,SL,$L,B_,_R,TL,RL,AL,_L,PL,WL,LR,UL,VL,HL,tO];for(const qL of jL)ys(qL)},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=m,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=i(1<<24),m=i(0);n.ZERO=m;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},C.neg=C.negate,C.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return m;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+r*d+a*c+i*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?x:v:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),r=r.sub(p)}return a},C.div=C.divide,C.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return l(~this.low,~this.high,this.unsigned)},C.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},497:(e,t,n)=>{"use strict";var s=n(218);function r(){}function a(){}a.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,a,i){if(i!==s){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:r};return n.PropTypes=n,n}},173:(e,t,n)=>{e.exports=n(497)()},218:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},496:(e,t,n)=>{"use strict";n.d(t,{A:()=>Je});var s=n(520),r=n.n(s);const a=!("undefined"===typeof window||!window.document||!window.document.createElement);var i=!1,o=!1;try{var l={get passive(){return i=!0},get once(){return o=i=!0}};a&&(window.addEventListener("test",l,l),window.removeEventListener("test",l,!0))}catch(Ze){}const u=function(e,t,n,s){if(s&&"boolean"!==typeof s&&!o){var r=s.once,a=s.capture,l=n;!o&&r&&(l=n.__once||function e(s){this.removeEventListener(t,e,a),n.call(this,s)},n.__once=l),e.addEventListener(t,l,i?s:a)}e.addEventListener(t,n,s)};function c(e){return e&&e.ownerDocument||document}const h=function(e,t,n,s){var r=s&&"boolean"!==typeof s?s.capture:s;e.removeEventListener(t,n,r),n.__once&&e.removeEventListener(t,n.__once,r)};var d;function p(e){if((!d&&0!==d||e)&&a){var t=document.createElement("div");t.style.position="absolute",t.style.top="-9999px",t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t),d=t.offsetWidth-t.clientWidth,document.body.removeChild(t)}return d}var f=n(43);const g=function(e){const t=(0,f.useRef)(e);return(0,f.useEffect)((()=>{t.current=e}),[e]),t};function m(e){const t=g(e);return(0,f.useCallback)((function(){return t.current&&t.current(...arguments)}),[t])}const b=e=>e&&"function"!==typeof e?t=>{e.current=t}:e;const x=function(e,t){return(0,f.useMemo)((()=>function(e,t){const n=b(e),s=b(t);return e=>{n&&n(e),s&&s(e)}}(e,t)),[e,t])};function y(e){const t=function(e){const t=(0,f.useRef)(e);return t.current=e,t}(e);(0,f.useEffect)((()=>()=>t.current()),[])}function v(e,t){return function(e){var t=c(e);return t&&t.defaultView||window}(e).getComputedStyle(e,t)}var w=/([A-Z])/g;var k=/^ms-/;function I(e){return function(e){return e.replace(w,"-$1").toLowerCase()}(e).replace(k,"-ms-")}var C=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;const S=function(e,t){var n="",s="";if("string"===typeof t)return e.style.getPropertyValue(I(t))||v(e).getPropertyValue(I(t));Object.keys(t).forEach((function(r){var a=t[r];a||0===a?!function(e){return!(!e||!C.test(e))}(r)?n+=I(r)+": "+a+";":s+=r+"("+a+") ":e.style.removeProperty(I(r))})),s&&(n+="transform: "+s+";"),e.style.cssText+=";"+n};const $=function(e,t,n,s){return u(e,t,n,s),function(){h(e,t,n,s)}};function N(e,t,n){void 0===n&&(n=5);var s=!1,r=setTimeout((function(){s||function(e,t,n,s){if(void 0===n&&(n=!1),void 0===s&&(s=!0),e){var r=document.createEvent("HTMLEvents");r.initEvent(t,n,s),e.dispatchEvent(r)}}(e,"transitionend",!0)}),t+n),a=$(e,"transitionend",(function(){s=!0}),{once:!0});return function(){clearTimeout(r),a()}}function T(e,t,n,s){null==n&&(n=function(e){var t=S(e,"transitionDuration")||"",n=-1===t.indexOf("ms")?1e3:1;return parseFloat(t)*n}(e)||0);var r=N(e,n,s),a=$(e,"transitionend",t);return function(){r(),a()}}function E(e){void 0===e&&(e=c());try{var t=e.activeElement;return t&&t.nodeName?t:null}catch(Ze){return e.body}}function R(e,t){return e.contains?e.contains(t):e.compareDocumentPosition?e===t||!!(16&e.compareDocumentPosition(t)):void 0}var A=n(950);const F=`data-rr-ui-${"modal-open"}`;const D=class{constructor(){let{ownerDocument:e,handleContainerOverflow:t=!0,isRTL:n=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.handleContainerOverflow=t,this.isRTL=n,this.modals=[],this.ownerDocument=e}getScrollbarWidth(){return function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document;const t=e.defaultView;return Math.abs(t.innerWidth-e.documentElement.clientWidth)}(this.ownerDocument)}getElement(){return(this.ownerDocument||document).body}setModalAttributes(e){}removeModalAttributes(e){}setContainerStyle(e){const t={overflow:"hidden"},n=this.isRTL?"paddingLeft":"paddingRight",s=this.getElement();e.style={overflow:s.style.overflow,[n]:s.style[n]},e.scrollBarWidth&&(t[n]=`${parseInt(S(s,n)||"0",10)+e.scrollBarWidth}px`),s.setAttribute(F,""),S(s,t)}reset(){[...this.modals].forEach((e=>this.remove(e)))}removeContainerStyle(e){const t=this.getElement();t.removeAttribute(F),Object.assign(t.style,e.style)}add(e){let t=this.modals.indexOf(e);return-1!==t?t:(t=this.modals.length,this.modals.push(e),this.setModalAttributes(e),0!==t||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),t)}remove(e){const t=this.modals.indexOf(e);-1!==t&&(this.modals.splice(t,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(e))}isTopModal(e){return!!this.modals.length&&this.modals[this.modals.length-1]===e}},_=(0,f.createContext)(a?window:void 0);_.Provider;function O(){return(0,f.useContext)(_)}const L=(e,t)=>a?null==e?(t||c()).body:("function"===typeof e&&(e=e()),e&&"current"in e&&(e=e.current),e&&("nodeType"in e||e.getBoundingClientRect)?e:null):null;const M="undefined"!==typeof n.g&&n.g.navigator&&"ReactNative"===n.g.navigator.product,z="undefined"!==typeof document||M?f.useLayoutEffect:f.useEffect;const P=function(e){let{children:t,in:n,onExited:s,mountOnEnter:r,unmountOnExit:a}=e;const i=(0,f.useRef)(null),o=(0,f.useRef)(n),l=m(s);(0,f.useEffect)((()=>{n?o.current=!0:l(i.current)}),[n,l]);const u=x(i,t.ref),c=(0,f.cloneElement)(t,{ref:u});return n?c:a||!o.current&&r?null:c};const B=["onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children"];function W(e){let{onEnter:t,onEntering:n,onEntered:s,onExit:r,onExiting:a,onExited:i,addEndListener:o,children:l}=e,u=function(e,t){if(null==e)return{};var n={};for(var s in e)if({}.hasOwnProperty.call(e,s)){if(t.indexOf(s)>=0)continue;n[s]=e[s]}return n}(e,B);const{major:c}=function(){const e=f.version.split(".");return{major:+e[0],minor:+e[1],patch:+e[2]}}(),h=c>=19?l.props.ref:l.ref,d=(0,f.useRef)(null),p=x(d,"function"===typeof l?null:h),g=e=>t=>{e&&d.current&&e(d.current,t)},m=(0,f.useCallback)(g(t),[t]),b=(0,f.useCallback)(g(n),[n]),y=(0,f.useCallback)(g(s),[s]),v=(0,f.useCallback)(g(r),[r]),w=(0,f.useCallback)(g(a),[a]),k=(0,f.useCallback)(g(i),[i]),I=(0,f.useCallback)(g(o),[o]);return Object.assign({},u,{nodeRef:d},t&&{onEnter:m},n&&{onEntering:b},s&&{onEntered:y},r&&{onExit:v},a&&{onExiting:w},i&&{onExited:k},o&&{addEndListener:I},{children:"function"===typeof l?(e,t)=>l(e,Object.assign({},t,{ref:p})):(0,f.cloneElement)(l,{ref:p})})}var U=n(579);const V=["component"];const G=f.forwardRef(((e,t)=>{let{component:n}=e;const s=W(function(e,t){if(null==e)return{};var n={};for(var s in e)if({}.hasOwnProperty.call(e,s)){if(t.indexOf(s)>=0)continue;n[s]=e[s]}return n}(e,V));return(0,U.jsx)(n,Object.assign({ref:t},s))}));function H(e){let{children:t,in:n,onExited:s,onEntered:r,transition:a}=e;const[i,o]=(0,f.useState)(!n);n&&i&&o(!1);const l=function(e){let{in:t,onTransition:n}=e;const s=(0,f.useRef)(null),r=(0,f.useRef)(!0),a=m(n);return z((()=>{if(!s.current)return;let e=!1;return a({in:t,element:s.current,initial:r.current,isStale:()=>e}),()=>{e=!0}}),[t,a]),z((()=>(r.current=!1,()=>{r.current=!0})),[]),s}({in:!!n,onTransition:e=>{Promise.resolve(a(e)).then((()=>{e.isStale()||(e.in?null==r||r(e.element,e.initial):(o(!0),null==s||s(e.element)))}),(t=>{throw e.in||o(!0),t}))}}),u=x(l,t.ref);return i&&!n?null:(0,f.cloneElement)(t,{ref:u})}function j(e,t,n){return e?(0,U.jsx)(G,Object.assign({},n,{component:e})):t?(0,U.jsx)(H,Object.assign({},n,{transition:t})):(0,U.jsx)(P,Object.assign({},n))}const K=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];let q;function X(e){const t=O(),n=e||function(e){return q||(q=new D({ownerDocument:null==e?void 0:e.document})),q}(t),s=(0,f.useRef)({dialog:null,backdrop:null});return Object.assign(s.current,{add:()=>n.add(s.current),remove:()=>n.remove(s.current),isTopModal:()=>n.isTopModal(s.current),setDialogRef:(0,f.useCallback)((e=>{s.current.dialog=e}),[]),setBackdropRef:(0,f.useCallback)((e=>{s.current.backdrop=e}),[])})}const Y=(0,f.forwardRef)(((e,t)=>{let{show:n=!1,role:s="dialog",className:r,style:i,children:o,backdrop:l=!0,keyboard:u=!0,onBackdropClick:c,onEscapeKeyDown:h,transition:d,runTransition:p,backdropTransition:g,runBackdropTransition:b,autoFocus:x=!0,enforceFocus:v=!0,restoreFocus:w=!0,restoreFocusOptions:k,renderDialog:I,renderBackdrop:C=e=>(0,U.jsx)("div",Object.assign({},e)),manager:S,container:N,onShow:T,onHide:F=()=>{},onExit:D,onExited:_,onExiting:M,onEnter:z,onEntering:P,onEntered:B}=e,W=function(e,t){if(null==e)return{};var n={};for(var s in e)if({}.hasOwnProperty.call(e,s)){if(t.indexOf(s)>=0)continue;n[s]=e[s]}return n}(e,K);const V=O(),G=function(e,t){const n=O(),[s,r]=(0,f.useState)((()=>L(e,null==n?void 0:n.document)));if(!s){const t=L(e);t&&r(t)}return(0,f.useEffect)((()=>{t&&s&&t(s)}),[t,s]),(0,f.useEffect)((()=>{const t=L(e);t!==s&&r(t)}),[e,s]),s}(N),H=X(S),q=function(){const e=(0,f.useRef)(!0),t=(0,f.useRef)((()=>e.current));return(0,f.useEffect)((()=>(e.current=!0,()=>{e.current=!1})),[]),t.current}(),Y=function(e){const t=(0,f.useRef)(null);return(0,f.useEffect)((()=>{t.current=e})),t.current}(n),[J,Z]=(0,f.useState)(!n),Q=(0,f.useRef)(null);(0,f.useImperativeHandle)(t,(()=>H),[H]),a&&!Y&&n&&(Q.current=E(null==V?void 0:V.document)),n&&J&&Z(!1);const ee=m((()=>{if(H.add(),ie.current=$(document,"keydown",re),ae.current=$(document,"focus",(()=>setTimeout(ne)),!0),T&&T(),x){var e,t;const n=E(null!=(e=null==(t=H.dialog)?void 0:t.ownerDocument)?e:null==V?void 0:V.document);H.dialog&&n&&!R(H.dialog,n)&&(Q.current=n,H.dialog.focus())}})),te=m((()=>{var e;(H.remove(),null==ie.current||ie.current(),null==ae.current||ae.current(),w)&&(null==(e=Q.current)||null==e.focus||e.focus(k),Q.current=null)}));(0,f.useEffect)((()=>{n&&G&&ee()}),[n,G,ee]),(0,f.useEffect)((()=>{J&&te()}),[J,te]),y((()=>{te()}));const ne=m((()=>{if(!v||!q()||!H.isTopModal())return;const e=E(null==V?void 0:V.document);H.dialog&&e&&!R(H.dialog,e)&&H.dialog.focus()})),se=m((e=>{e.target===e.currentTarget&&(null==c||c(e),!0===l&&F())})),re=m((e=>{u&&function(e){return"Escape"===e.code||27===e.keyCode}(e)&&H.isTopModal()&&(null==h||h(e),e.defaultPrevented||F())})),ae=(0,f.useRef)(),ie=(0,f.useRef)();if(!G)return null;const oe=Object.assign({role:s,ref:H.setDialogRef,"aria-modal":"dialog"===s||void 0},W,{style:i,className:r,tabIndex:-1});let le=I?I(oe):(0,U.jsx)("div",Object.assign({},oe,{children:f.cloneElement(o,{role:"document"})}));le=j(d,p,{unmountOnExit:!0,mountOnEnter:!0,appear:!0,in:!!n,onExit:D,onExiting:M,onExited:function(){Z(!0),null==_||_(...arguments)},onEnter:z,onEntering:P,onEntered:B,children:le});let ue=null;return l&&(ue=C({ref:H.setBackdropRef,onClick:se}),ue=j(g,b,{in:!!n,appear:!0,mountOnEnter:!0,unmountOnExit:!0,children:ue})),(0,U.jsx)(U.Fragment,{children:A.createPortal((0,U.jsxs)(U.Fragment,{children:[ue,le]}),G)})}));Y.displayName="Modal";const J=Object.assign(Y,{Manager:D});var Z=Function.prototype.bind.call(Function.prototype.call,[].slice);function Q(e,t){return Z(e.querySelectorAll(t))}function ee(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}const te=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",ne=".sticky-top",se=".navbar-toggler";class re extends D{adjustAndStore(e,t,n){const s=t.style[e];t.dataset[e]=s,S(t,{[e]:`${parseFloat(S(t,e))+n}px`})}restore(e,t){const n=t.dataset[e];void 0!==n&&(delete t.dataset[e],S(t,{[e]:n}))}setContainerStyle(e){super.setContainerStyle(e);const t=this.getElement();var n,s;if(s="modal-open",(n=t).classList?n.classList.add(s):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(n,s)||("string"===typeof n.className?n.className=n.className+" "+s:n.setAttribute("class",(n.className&&n.className.baseVal||"")+" "+s)),!e.scrollBarWidth)return;const r=this.isRTL?"paddingLeft":"paddingRight",a=this.isRTL?"marginLeft":"marginRight";Q(t,te).forEach((t=>this.adjustAndStore(r,t,e.scrollBarWidth))),Q(t,ne).forEach((t=>this.adjustAndStore(a,t,-e.scrollBarWidth))),Q(t,se).forEach((t=>this.adjustAndStore(a,t,e.scrollBarWidth)))}removeContainerStyle(e){super.removeContainerStyle(e);const t=this.getElement();var n,s;s="modal-open",(n=t).classList?n.classList.remove(s):"string"===typeof n.className?n.className=ee(n.className,s):n.setAttribute("class",ee(n.className&&n.className.baseVal||"",s));const r=this.isRTL?"paddingLeft":"paddingRight",a=this.isRTL?"marginLeft":"marginRight";Q(t,te).forEach((e=>this.restore(r,e))),Q(t,ne).forEach((e=>this.restore(a,e))),Q(t,se).forEach((e=>this.restore(a,e)))}}let ae;function ie(e,t){return ie=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ie(e,t)}const oe=!1,le=f.createContext(null);var ue="unmounted",ce="exited",he="entering",de="entered",pe="exiting",fe=function(e){var t,n;function s(t,n){var s;s=e.call(this,t,n)||this;var r,a=n&&!n.isMounting?t.enter:t.appear;return s.appearStatus=null,t.in?a?(r=ce,s.appearStatus=he):r=de:r=t.unmountOnExit||t.mountOnEnter?ue:ce,s.state={status:r},s.nextCallback=null,s}n=e,(t=s).prototype=Object.create(n.prototype),t.prototype.constructor=t,ie(t,n),s.getDerivedStateFromProps=function(e,t){return e.in&&t.status===ue?{status:ce}:null};var r=s.prototype;return r.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},r.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==he&&n!==de&&(t=he):n!==he&&n!==de||(t=pe)}this.updateStatus(!1,t)},r.componentWillUnmount=function(){this.cancelNextCallback()},r.getTimeouts=function(){var e,t,n,s=this.props.timeout;return e=t=n=s,null!=s&&"number"!==typeof s&&(e=s.exit,t=s.enter,n=void 0!==s.appear?s.appear:t),{exit:e,enter:t,appear:n}},r.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t)if(this.cancelNextCallback(),t===he){if(this.props.unmountOnExit||this.props.mountOnEnter){var n=this.props.nodeRef?this.props.nodeRef.current:A.findDOMNode(this);n&&function(e){e.scrollTop}(n)}this.performEnter(e)}else this.performExit();else this.props.unmountOnExit&&this.state.status===ce&&this.setState({status:ue})},r.performEnter=function(e){var t=this,n=this.props.enter,s=this.context?this.context.isMounting:e,r=this.props.nodeRef?[s]:[A.findDOMNode(this),s],a=r[0],i=r[1],o=this.getTimeouts(),l=s?o.appear:o.enter;!e&&!n||oe?this.safeSetState({status:de},(function(){t.props.onEntered(a)})):(this.props.onEnter(a,i),this.safeSetState({status:he},(function(){t.props.onEntering(a,i),t.onTransitionEnd(l,(function(){t.safeSetState({status:de},(function(){t.props.onEntered(a,i)}))}))})))},r.performExit=function(){var e=this,t=this.props.exit,n=this.getTimeouts(),s=this.props.nodeRef?void 0:A.findDOMNode(this);t&&!oe?(this.props.onExit(s),this.safeSetState({status:pe},(function(){e.props.onExiting(s),e.onTransitionEnd(n.exit,(function(){e.safeSetState({status:ce},(function(){e.props.onExited(s)}))}))}))):this.safeSetState({status:ce},(function(){e.props.onExited(s)}))},r.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},r.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},r.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(s){n&&(n=!1,t.nextCallback=null,e(s))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},r.onTransitionEnd=function(e,t){this.setNextCallback(t);var n=this.props.nodeRef?this.props.nodeRef.current:A.findDOMNode(this),s=null==e&&!this.props.addEndListener;if(n&&!s){if(this.props.addEndListener){var r=this.props.nodeRef?[this.nextCallback]:[n,this.nextCallback],a=r[0],i=r[1];this.props.addEndListener(a,i)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},r.render=function(){var e=this.state.status;if(e===ue)return null;var t=this.props,n=t.children,s=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,function(e,t){if(null==e)return{};var n={};for(var s in e)if({}.hasOwnProperty.call(e,s)){if(t.includes(s))continue;n[s]=e[s]}return n}(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return f.createElement(le.Provider,{value:null},"function"===typeof n?n(e,s):f.cloneElement(f.Children.only(n),s))},s}(f.Component);function ge(){}fe.contextType=le,fe.propTypes={},fe.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:ge,onEntering:ge,onEntered:ge,onExit:ge,onExiting:ge,onExited:ge},fe.UNMOUNTED=ue,fe.EXITED=ce,fe.ENTERING=he,fe.ENTERED=de,fe.EXITING=pe;const me=fe;function be(e,t){const n=S(e,t)||"",s=-1===n.indexOf("ms")?1e3:1;return parseFloat(n)*s}function xe(e,t){const n=be(e,"transitionDuration"),s=be(e,"transitionDelay"),r=T(e,(n=>{n.target===e&&(r(),t(n))}),n+s)}const ye=f.forwardRef(((e,t)=>{let{onEnter:n,onEntering:s,onEntered:r,onExit:a,onExiting:i,onExited:o,addEndListener:l,children:u,childRef:c,...h}=e;const d=(0,f.useRef)(null),p=x(d,c),g=e=>{var t;p((t=e)&&"setState"in t?A.findDOMNode(t):null!=t?t:null)},m=e=>t=>{e&&d.current&&e(d.current,t)},b=(0,f.useCallback)(m(n),[n]),y=(0,f.useCallback)(m(s),[s]),v=(0,f.useCallback)(m(r),[r]),w=(0,f.useCallback)(m(a),[a]),k=(0,f.useCallback)(m(i),[i]),I=(0,f.useCallback)(m(o),[o]),C=(0,f.useCallback)(m(l),[l]);return(0,U.jsx)(me,{ref:t,...h,onEnter:b,onEntered:v,onEntering:y,onExit:w,onExited:I,onExiting:k,addEndListener:C,nodeRef:d,children:"function"===typeof u?(e,t)=>u(e,{...t,ref:g}):f.cloneElement(u,{ref:g})})})),ve={[he]:"show",[de]:"show"},we=f.forwardRef(((e,t)=>{let{className:n,children:s,transitionClasses:a={},onEnter:i,...o}=e;const l={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,...o},u=(0,f.useCallback)(((e,t)=>{!function(e){e.offsetHeight}(e),null==i||i(e,t)}),[i]);return(0,U.jsx)(ye,{ref:t,addEndListener:xe,...l,onEnter:u,childRef:s.ref,children:(e,t)=>f.cloneElement(s,{...t,className:r()("fade",n,s.props.className,ve[e],a[e])})})}));we.displayName="Fade";const ke=we,Ie=["xxl","xl","lg","md","sm","xs"],Ce="xs",Se=f.createContext({prefixes:{},breakpoints:Ie,minBreakpoint:Ce}),{Consumer:$e,Provider:Ne}=Se;function Te(e,t){const{prefixes:n}=(0,f.useContext)(Se);return e||n[t]||t}const Ee=f.forwardRef(((e,t)=>{let{className:n,bsPrefix:s,as:a="div",...i}=e;return s=Te(s,"modal-body"),(0,U.jsx)(a,{ref:t,className:r()(n,s),...i})}));Ee.displayName="ModalBody";const Re=Ee,Ae=f.createContext({onHide(){}}),Fe=f.forwardRef(((e,t)=>{let{bsPrefix:n,className:s,contentClassName:a,centered:i,size:o,fullscreen:l,children:u,scrollable:c,...h}=e;n=Te(n,"modal");const d=`${n}-dialog`,p="string"===typeof l?`${n}-fullscreen-${l}`:`${n}-fullscreen`;return(0,U.jsx)("div",{...h,ref:t,className:r()(d,s,o&&`${n}-${o}`,i&&`${d}-centered`,c&&`${d}-scrollable`,l&&p),children:(0,U.jsx)("div",{className:r()(`${n}-content`,a),children:u})})}));Fe.displayName="ModalDialog";const De=Fe,_e=f.forwardRef(((e,t)=>{let{className:n,bsPrefix:s,as:a="div",...i}=e;return s=Te(s,"modal-footer"),(0,U.jsx)(a,{ref:t,className:r()(n,s),...i})}));_e.displayName="ModalFooter";const Oe=_e;var Le=n(173),Me=n.n(Le);const ze={"aria-label":Me().string,onClick:Me().func,variant:Me().oneOf(["white"])},Pe=f.forwardRef(((e,t)=>{let{className:n,variant:s,"aria-label":a="Close",...i}=e;return(0,U.jsx)("button",{ref:t,type:"button",className:r()("btn-close",s&&`btn-close-${s}`,n),"aria-label":a,...i})}));Pe.displayName="CloseButton",Pe.propTypes=ze;const Be=Pe,We=f.forwardRef(((e,t)=>{let{closeLabel:n="Close",closeVariant:s,closeButton:r=!1,onHide:a,children:i,...o}=e;const l=(0,f.useContext)(Ae),u=m((()=>{null==l||l.onHide(),null==a||a()}));return(0,U.jsxs)("div",{ref:t,...o,children:[i,r&&(0,U.jsx)(Be,{"aria-label":n,variant:s,onClick:u})]})})),Ue=f.forwardRef(((e,t)=>{let{bsPrefix:n,className:s,closeLabel:a="Close",closeButton:i=!1,...o}=e;return n=Te(n,"modal-header"),(0,U.jsx)(We,{ref:t,...o,className:r()(s,n),closeLabel:a,closeButton:i})}));Ue.displayName="ModalHeader";const Ve=Ue,Ge=(He="h4",f.forwardRef(((e,t)=>(0,U.jsx)("div",{...e,ref:t,className:r()(e.className,He)}))));var He;const je=f.forwardRef(((e,t)=>{let{className:n,bsPrefix:s,as:a=Ge,...i}=e;return s=Te(s,"modal-title"),(0,U.jsx)(a,{ref:t,className:r()(n,s),...i})}));je.displayName="ModalTitle";const Ke=je;function qe(e){return(0,U.jsx)(ke,{...e,timeout:null})}function Xe(e){return(0,U.jsx)(ke,{...e,timeout:null})}const Ye=f.forwardRef(((e,t)=>{let{bsPrefix:n,className:s,style:i,dialogClassName:o,contentClassName:l,children:d,dialogAs:g=De,"data-bs-theme":b,"aria-labelledby":v,"aria-describedby":w,"aria-label":k,show:I=!1,animation:C=!0,backdrop:S=!0,keyboard:$=!0,onEscapeKeyDown:N,onShow:E,onHide:R,container:A,autoFocus:F=!0,enforceFocus:D=!0,restoreFocus:_=!0,restoreFocusOptions:O,onEntered:L,onExit:M,onExiting:z,onEnter:P,onEntering:B,onExited:W,backdropClassName:V,manager:G,...H}=e;const[j,K]=(0,f.useState)({}),[q,X]=(0,f.useState)(!1),Y=(0,f.useRef)(!1),Z=(0,f.useRef)(!1),Q=(0,f.useRef)(null),[ee,te]=(0,f.useState)(null),ne=x(t,te),se=m(R),ie=function(){const{dir:e}=(0,f.useContext)(Se);return"rtl"===e}();n=Te(n,"modal");const oe=(0,f.useMemo)((()=>({onHide:se})),[se]);function le(){return G||function(e){return ae||(ae=new re(e)),ae}({isRTL:ie})}function ue(e){if(!a)return;const t=le().getScrollbarWidth()>0,n=e.scrollHeight>c(e).documentElement.clientHeight;K({paddingRight:t&&!n?p():void 0,paddingLeft:!t&&n?p():void 0})}const ce=m((()=>{ee&&ue(ee.dialog)}));y((()=>{h(window,"resize",ce),null==Q.current||Q.current()}));const he=()=>{Y.current=!0},de=e=>{Y.current&&ee&&e.target===ee.dialog&&(Z.current=!0),Y.current=!1},pe=()=>{X(!0),Q.current=T(ee.dialog,(()=>{X(!1)}))},fe=e=>{"static"!==S?Z.current||e.target!==e.currentTarget?Z.current=!1:null==R||R():(e=>{e.target===e.currentTarget&&pe()})(e)},ge=(0,f.useCallback)((e=>(0,U.jsx)("div",{...e,className:r()(`${n}-backdrop`,V,!C&&"show")})),[C,V,n]),me={...i,...j};me.display="block";return(0,U.jsx)(Ae.Provider,{value:oe,children:(0,U.jsx)(J,{show:I,ref:ne,backdrop:S,container:A,keyboard:!0,autoFocus:F,enforceFocus:D,restoreFocus:_,restoreFocusOptions:O,onEscapeKeyDown:e=>{$?null==N||N(e):(e.preventDefault(),"static"===S&&pe())},onShow:E,onHide:R,onEnter:(e,t)=>{e&&ue(e),null==P||P(e,t)},onEntering:(e,t)=>{null==B||B(e,t),u(window,"resize",ce)},onEntered:L,onExit:e=>{null==Q.current||Q.current(),null==M||M(e)},onExiting:z,onExited:e=>{e&&(e.style.display=""),null==W||W(e),h(window,"resize",ce)},manager:le(),transition:C?qe:void 0,backdropTransition:C?Xe:void 0,renderBackdrop:ge,renderDialog:e=>(0,U.jsx)("div",{role:"dialog",...e,style:me,className:r()(s,n,q&&`${n}-static`,!C&&"show"),onClick:S?fe:void 0,onMouseUp:de,"data-bs-theme":b,"aria-label":k,"aria-labelledby":v,"aria-describedby":w,children:(0,U.jsx)(g,{...H,onMouseDown:he,className:o,contentClassName:l,children:d})})})})}));Ye.displayName="Modal";const Je=Object.assign(Ye,{Body:Re,Header:Ve,Title:Ke,Footer:Oe,Dialog:De,TRANSITION_DURATION:300,BACKDROP_TRANSITION_DURATION:150})},334:(e,t,n)=>{var s=n(359),r=n(66),a=n(16),i=n(538),o=n(288),l=n(262),u=n(430);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},359:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.alea=o}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.tychei=o}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor128=o}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var s;!function(e,r){function a(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var s;!function(e,r){function a(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var s;!function(r,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=l-1;function p(e,t,n){var s=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),x(e)}catch(s){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,x(a)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),a),(t.pass||n||function(e,t,n,s){return s&&(s.S&&g(s,p),e.state=function(){return g(p,{})}),n?(i.random=e,t):e})(y,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(m(e[n],t-1))}catch(a){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),a),e.exports){e.exports=p;try{o=n(996)}catch(y){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}("undefined"!==typeof self?self:this,[],Math)},421:()=>{},520:(e,t)=>{var n;!function(){"use strict";var s={}.hasOwnProperty;function r(){for(var e="",t=0;t<arguments.length;t++){var n=arguments[t];n&&(e=i(e,a(n)))}return e}function a(e){if("string"===typeof e||"number"===typeof e)return e;if("object"!==typeof e)return"";if(Array.isArray(e))return r.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var t="";for(var n in e)s.call(e,n)&&e[n]&&(t=i(t,n));return t}function i(e,t){return t?e?e+" "+t:e+t:e}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()}}]);
//# sourceMappingURL=75.bed7bf2d.chunk.js.map